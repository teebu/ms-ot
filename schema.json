{
  "openapi": "3.0.0",
  "info": {
    "title": "Privacy Cloud - Consent & Preference Management",
    "version": "1.0"
  },
  "paths": {
    "/api/consent/v2/consent-groups": {
      "get": {
        "description": "Use this API to retrieve a list of all Consent Groups along with details such as the Consent Group ID, associated Purpose Rules, and the list of data subjects and/or Consent Groups within its hierarchal structure.",
        "operationId": "getConsentGroupListUsingGET",
        "parameters": [
          {
            "description": "Name of the Consent Group",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "pageNumber",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "paged",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "sort.sorted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "sort.unsorted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "unpaged",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageConsentGroupListDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "bf1645e9-8ac4-4167-9102-a408df3f06d5",
                      "consentGroups": [],
                      "dataSubjects": [
                        {
                          "id": "54b9162c-0c47-425e-ae8c-999360184521",
                          "identifier": "privacy@onetrust.com",
                          "purposes": [
                            {
                              "effectiveStatus": "EXPIRED",
                              "id": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2",
                              "status": "ACTIVE",
                              "version": 1
                            }
                          ]
                        }
                      ],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "DATA_SUBJECTS",
                      "name": "OneTrust Atlanta",
                      "purposeRules": [
                        {
                          "effectiveStatus": "EXPIRED",
                          "enforcedStatus": "EXPIRED",
                          "purposeId": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2"
                        },
                        {
                          "effectiveStatus": "ALWAYS_ACTIVE",
                          "enforcedStatus": "ALWAYS_ACTIVE",
                          "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get List of Consent Groups",
        "tags": [
          "Consent Groups"
        ]
      },
      "post": {
        "description": "Use this API to create a new Consent Group by providing a name, description, and optional external name.\n\n> 🗒 Things to Know\n> \n> - If an external name is not defined, one will be generated automatically.",
        "operationId": "createConsentGroupUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupRequest"
              }
            }
          },
          "description": "consentGroupRequest",
          "required": true,
          "x-examples": {
            "application/json": {
              "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
              "externalName": "onetrust_atlanta",
              "name": "OneTrust Atlanta"
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "b9c47a7e-b106-4f8f-986f-1057d3cb1cfd",
                      "consentGroups": [],
                      "dataSubjects": [],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "EMPTY",
                      "name": "OneTrust Atlanta",
                      "purposeRules": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/settings": {
      "get": {
        "description": "Use this API to retrieve the Priority Scores for each Purpose Status.\n\n> 🗒 Things to Know\n> \n> - All Purpose Statuses are given a Priority Score. A Purpose Status with a lower Priority Score will be given precedence over a Purpose Status with a higher Priority Score.\n> - Each Purpose in a Consent Group has its own Purpose Rule which is comprised of an Enforced Status and Effective Status.\n>   - The Enforced Status is the Purpose Status that you want to apply for a particular Purpose.\n>   - The Effective Status is calculated using the Priority Scores across the entire Consent Group hierarchy for each Purpose.\n\n> 👍 \n> \n> For more information, see [Using Consent Groups to Alter a Data Subject's Consent Status](https://developer.onetrust.com/onetrust/docs/using-consent-groups-to-alter-a-data-subjects-consent-status).",
        "operationId": "getConsentGroupSettingsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupSettingsDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusPriorityRules": [
                        {
                          "priority": 0,
                          "status": "EXPIRED"
                        },
                        {
                          "priority": 1,
                          "status": "HARD_OPT_OUT"
                        },
                        {
                          "priority": 2,
                          "status": "OPT_OUT"
                        },
                        {
                          "priority": 3,
                          "status": "WITHDRAWN"
                        },
                        {
                          "priority": 4,
                          "status": "NO_CONSENT"
                        },
                        {
                          "priority": 5,
                          "status": "PENDING"
                        },
                        {
                          "priority": 6,
                          "status": "ACTIVE"
                        },
                        {
                          "priority": 7,
                          "status": "EXTEND"
                        },
                        {
                          "priority": 8,
                          "status": "ALWAYS_ACTIVE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get Priority Scores for Purpose Statuses",
        "tags": [
          "Consent Groups"
        ]
      },
      "put": {
        "description": "Use this API to update the current Priority Score values for the Purpose Statuses. Priority Scores across the entire Consent Group hierarchy are used to calculate the Effective Status of a Purpose.\n\n> 🗒 Things to Know\n> \n> - All Purpose Statuses are given a Priority Score. A Purpose Status with a lower Priority Score will be given precedence over a Purpose Status with a higher Priority Score. Any new Purpose Statuses will automatically be given a higher priority score by default.\n> - When calculating the Effective Status of any Purpose in a Consent Group:\n>   - If there is no Parent Consent Group, the Effective Status becomes the same as the Enforced Status.\n>   - If there is a Parent Consent Group, the Effective Status would be calculated by comparing the Priority Score of the Enforced Status of the Purpose at that hierarchy level with the Priority Score of the Effective Status of the Purpose in the Parent level and applying the status associated with the lower Priority Score.\n\n> 👍 \n> \n> For more information, see [Using Consent Groups to Alter a Data Subject's Consent Status](https://developer.onetrust.com/onetrust/docs/using-consent-groups-to-alter-a-data-subjects-consent-status).",
        "operationId": "updateConsentGroupSettingsUsingPUT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupSettingsDto"
              }
            }
          },
          "description": "consentGroupSettingsDto",
          "required": true,
          "x-examples": {
            "application/json": {
              "statusPriorityRules": [
                {
                  "priority": 0,
                  "status": "EXPIRED"
                },
                {
                  "priority": 1,
                  "status": "HARD_OPT_OUT"
                },
                {
                  "priority": 2,
                  "status": "OPT_OUT"
                },
                {
                  "priority": 3,
                  "status": "WITHDRAWN"
                },
                {
                  "priority": 4,
                  "status": "NO_CONSENT"
                },
                {
                  "priority": 5,
                  "status": "PENDING"
                },
                {
                  "priority": 6,
                  "status": "ACTIVE"
                },
                {
                  "priority": 7,
                  "status": "EXTEND"
                },
                {
                  "priority": 8,
                  "status": "ALWAYS_ACTIVE"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupSettingsDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "statusPriorityRules": [
                        {
                          "priority": 0,
                          "status": "EXPIRED"
                        },
                        {
                          "priority": 1,
                          "status": "HARD_OPT_OUT"
                        },
                        {
                          "priority": 2,
                          "status": "OPT_OUT"
                        },
                        {
                          "priority": 3,
                          "status": "WITHDRAWN"
                        },
                        {
                          "priority": 4,
                          "status": "NO_CONSENT"
                        },
                        {
                          "priority": 5,
                          "status": "PENDING"
                        },
                        {
                          "priority": 6,
                          "status": "ACTIVE"
                        },
                        {
                          "priority": 7,
                          "status": "EXTEND"
                        },
                        {
                          "priority": 8,
                          "status": "ALWAYS_ACTIVE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Update Priority Scores for Purpose Statuses",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}": {
      "get": {
        "description": "Use this API to retrieve a single Consent Group by its unique identifier along with details such as the Consent Group ID, associated Purpose Rules, and the list of data subjects and/or Consent Groups within its hierarchal structure.",
        "operationId": "getConsentGroupUsingGET",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget)",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "b9c47a7e-b106-4f8f-986f-1057d3cb1cfd",
                      "consentGroups": [],
                      "dataSubjects": [],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "EMPTY",
                      "name": "OneTrust Atlanta",
                      "purposeRules": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}/consent-groups": {
      "delete": {
        "description": "Use this API to remove Consent Groups as children of the specified Parent Consent Group.\n\n> 🗒 Things to Know\n> \n> - Multiple Consent Groups can be removed within the same API call by specifying the list of child Consent Group IDs.",
        "operationId": "unlinkConsentGroupUsingDELETE",
        "parameters": [
          {
            "description": "The UUID of the parent Consent Group. The `consentGroupGuid` can be obtained using the [Get a Paged View for Consent Group](/onetrust/reference/getconsentgrouplistusingget) API",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupConsentGroupsDeleteRequest"
              }
            }
          },
          "description": "Structure holding the Consent Groups to be unlinked. The `consentGroupIds` can be obtained using the [Get a Paged View for Consent Group](/onetrust/reference/getconsentgrouplistusingget) API",
          "required": true,
          "x-examples": {
            "Example 1": "{\n  \"consentGroupIds\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n  ]\n}"
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Remove Consent Groups from Parent Consent Group",
        "tags": [
          "Consent Groups"
        ]
      },
      "post": {
        "description": "Use this API to add Consent Groups as children of the specified Parent Consent Group.\n\n> 🗒 Things to Know\n> \n> - A Consent Group can only be added as a child to one Parent Consent Group.\n> - A Parent Consent Group can either have Consent Groups as children or data subjects as children within a given level in the hierarchy, not both. If Consent Groups are added as children to the Parent Consent Group, data subjects cannot be added to the Parent Consent Group at that given level.\n> - Consent Groups can support a hierarchical structure of up to 4 levels. However, once data subjects are added as children to a Parent Consent Group, no additional Consent Groups can be added to that hierarchical structure.",
        "operationId": "addConsentGroupsToConsentGroupUsingPOST",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups](/onetrust/reference/getconsentgrouplistusingget) API.",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupConsentGroupsRequest"
              }
            }
          },
          "description": "consentGroupConsentGroupsRequest",
          "required": true,
          "x-examples": {
            "Example 1-Add a child consent group to a parent consent group": {
              "consentGroupIds": [
                "1a6c1e65-aa4f-4d79-ac62-7fe905616f71"
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created\n\nConsent groups added to parent group successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "10345f1d-883f-4738-9221-0503ed0aa967",
                      "consentGroups": [
                        {
                          "consentGroupId": "1a6c1e65-aa4f-4d79-ac62-7fe905616f71",
                          "description": "Child consent group description",
                          "externalName": "child_consent_group",
                          "membershipType": "EMPTY",
                          "name": "Child consent group"
                        }
                      ],
                      "dataSubjects": [],
                      "description": "Parent consent group description",
                      "externalName": "parent_consent_group",
                      "membershipType": "CHILD_GROUPS",
                      "name": "Parent consent group",
                      "purposeRules": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Add Consent Groups to Parent Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}/data-subjects": {
      "post": {
        "description": "Use this API to add data subjects as children of the specified Parent Consent Group.\n\n> 🗒 Things to Know\n> \n> - A Parent Consent Group can either have Consent Groups as children or data subjects as children within a given level in the hierarchy, not both. If data subjects are added as children to the Parent Consent Group, Consent Groups cannot be added to the Parent Consent Group at that given level or any level below in the hierarchical structure.",
        "operationId": "addDataSubjectsToConsentGroupUsingPOST",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget)",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupDataSubjectsRequest"
              }
            }
          },
          "description": "Structure holding the Data Subjects to be added to the Consent Group",
          "required": true,
          "x-examples": {
            "application/json": {
              "dataSubjects": [
                {
                  "id": "54b9162c-0c47-425e-ae8c-999360184521"
                },
                {
                  "identifier": "example@onetrust.com"
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "bf1645e9-8ac4-4167-9102-a408df3f06d5",
                      "consentGroups": [],
                      "dataSubjects": [
                        {
                          "id": "e78a59a8-033f-40e9-9c5e-bd3e86754f2b",
                          "identifier": "example@onetrust.com",
                          "purposes": [
                            {
                              "effectiveStatus": "ACTIVE",
                              "id": "f824bb27-1cdb-4e7d-a761-8512bca0044a",
                              "status": "ACTIVE",
                              "version": 2
                            }
                          ]
                        }
                      ],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "DATA_SUBJECTS",
                      "name": "OneTrust Atlanta",
                      "purposeRules": [
                        {
                          "effectiveStatus": "ALWAYS_ACTIVE",
                          "enforcedStatus": "ALWAYS_ACTIVE",
                          "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Add Data Subjects to Parent Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}/data-subjects/{dataSubjectGuid}": {
      "delete": {
        "description": "Use this API to remove a single data subject as a child of the specified Parent Consent Group.\n\n> 🗒 Things to Know\n> \n> - Only one data subject can be removed per API call.",
        "operationId": "deleteDataSubjectsToConsentGroupUsingDELETE",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget)",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The UUID of the Data Subject to be deleted from Consent Group. `dataSubjectGuid` can be retrieved using [Get a paged list of Data Subjects](/onetrust/reference/getdatasubjectsusingget)",
            "in": "path",
            "name": "dataSubjectGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Remove Data Subject from Parent Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}/purpose-rules": {
      "post": {
        "description": "Use this API to add Purpose Rules to a Consent Group. These rules will dictate which Purposes will be overridden with the defined Enforced Status for data subjects within the given Consent Group.\n\n> 🗒 Things to Know\n> \n> - Each Purpose in a Consent Group has its own Purpose Rule which is comprised of an Enforced Status and Effective Status.\n>   - The Enforced Status is the Purpose Status that you want to apply for a particular Purpose.\n>   - The Effective Status is calculated using the Priority Scores across the entire Consent Group hierarchy for each Purpose.",
        "operationId": "addPurposeRulesToConsentGroupUsingPOST",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget) to add Purpose Rules",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupPurposeRulesRequest"
              }
            }
          },
          "description": "Structure holding the Purpose Rules to be added to the Consent Group",
          "required": true,
          "x-examples": {
            "application/json": {
              "purposeRules": [
                {
                  "enforcedStatus": "EXPIRED",
                  "purposeId": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2"
                },
                {
                  "enforcedStatus": "ALWAYS_ACTIVE",
                  "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "bf1645e9-8ac4-4167-9102-a408df3f06d5",
                      "consentGroups": [],
                      "dataSubjects": [],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "EMPTY",
                      "name": "OneTrust Atlanta",
                      "purposeRules": [
                        {
                          "effectiveStatus": "EXPIRED",
                          "enforcedStatus": "EXPIRED",
                          "purposeId": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2"
                        },
                        {
                          "effectiveStatus": "ALWAYS_ACTIVE",
                          "enforcedStatus": "ALWAYS_ACTIVE",
                          "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Add Purpose Rules to Consent Group",
        "tags": [
          "Consent Groups"
        ]
      },
      "put": {
        "description": "Use this API to update existing Purpose Rules within a Consent Group.",
        "operationId": "updatePurposeRulesToConsentGroupUsingPUT",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget)",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentGroupPurposeRulesRequest"
              }
            }
          },
          "description": "Structure holding the Purpose Rules to be edited to the Consent Group",
          "required": true,
          "x-examples": {
            "application/json": {
              "purposeRules": [
                {
                  "enforcedStatus": "EXPIRED",
                  "purposeId": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2"
                },
                {
                  "enforcedStatus": "ALWAYS_ACTIVE",
                  "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "consentGroupId": "bf1645e9-8ac4-4167-9102-a408df3f06d5",
                      "consentGroups": [],
                      "dataSubjects": [],
                      "description": "Consent for the company OneTrust, specifically for the Atlanta Office",
                      "externalName": "onetrust_atlanta",
                      "membershipType": "EMPTY",
                      "name": "OneTrust Atlanta",
                      "purposeRules": [
                        {
                          "effectiveStatus": "EXPIRED",
                          "enforcedStatus": "EXPIRED",
                          "purposeId": "742a76c8-cf4e-4a67-91bb-4fb0efb88ac2"
                        },
                        {
                          "effectiveStatus": "ALWAYS_ACTIVE",
                          "enforcedStatus": "ALWAYS_ACTIVE",
                          "purposeId": "f824bb27-1cdb-4e7d-a761-8512bca0044a"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Update Consent Group Purpose Rule",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/consent-groups/{consentGroupGuid}/purpose-rules/{purposeGuid}": {
      "delete": {
        "description": "Use this API to remove existing Purpose Rules from a Consent Group.",
        "operationId": "deleteConsentGroupPurposeRuleUsingDELETE",
        "parameters": [
          {
            "description": "The UUID of the Consent Group. `consentGroupGuid` can be retrieved using the [Get a paged view for consent groups API](/onetrust/reference/getconsentgrouplistusingget)",
            "in": "path",
            "name": "consentGroupGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The UUID of the Purpose to be removed from Consent Group Purpose Rules. `purposeId` can be retrieved using the [Get paged list of Purposes](/onetrust/reference/getpurposesusingget)",
            "in": "path",
            "name": "purposeGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Remove Purpose Rule from Consent Group",
        "tags": [
          "Consent Groups"
        ]
      }
    },
    "/api/consent/v2/datasubject-purposes/{purposeGuid}": {
      "delete": {
        "description": "Use this API for large scale deletion of a specific purpose from all data subjects.\n\n> 🗒 Things to Know\n> \n> - A data subject exclusion list is required to provide the specific data subjects from which the purpose should not be deleted. The **Consent DS Exclusion** import template within Global Settings in the OneTrust application can be used to create the data subject exclusion list and can be imported via Bulk Import in the application or via API.\n>   - Once the data subject exclusion list has been successfully imported, either an `importID` or `jobGuid` parameter value must be specified in the request body.\n>   - Data subject exclusion lists are valid during the next 30 days after submission.\n>   - To override the data subject exclusion list requirement, set the `deletePurposeFromAllDataSubjects` parameter value to `true`. By default, this parameter is set to `false`.\n> - Related data subject transactions and receipts will be also deleted after calling this API. Transactions can be maintained if the `retainTransactions` parameter is set to `true`.",
        "parameters": [
          {
            "description": "UUID of the Purpose to be deleted",
            "in": "path",
            "name": "purposeGuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDataSubjectByPurposeRequest"
              }
            }
          },
          "required": true,
          "x-examples": {
            "Example 1": "{\n  \"deletePurposeFromAllDataSubjects\": true\n}",
            "Example 2": "{\n  \"jobGuid\": \"a41d9211-1a98-4974-8c3d-3dede1de0eed\",\n  \"retainTransactions\": true,\n  \"deletePurposeFromAllDataSubjects\": false\n}",
            "Example 3": "{\n  \"importId\": \"000231\",\n  \"retainTransactions\": false,\n}"
          }
        },
        "responses": {
          "202": {
            "description": "DataSubject Profile Delete Request has been accepted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Delete Purpose from Data Subjects",
        "tags": [
          "Data Subjects V2"
        ]
      }
    },
    "/api/consent/v2/datasubjects": {
      "delete": {
        "description": "Use this API to delete data subjects. Deleting data subjects is a permanent action that should be exercised with caution.\n\n> 🗒 Things to Know\n> \n> - Data subjects can be deleted using any of the following values at a time:\n>   - List of Identifiers\n>   - List of Data Subject Identifier GUIDs\n>   - Date range between `fromCreatedDate` and `toCreatedDate` (the timespan must be 24 hours or less).\n>   - Date range between `fromInteractionDate` and `toInteractionDate` (the timespan must be 24 hours or less).\n> - When filtering by date range, created date and interaction date should be used separately. They should not be used at the same time.\n> - Up to 999 data subject identifiers can be deleted per API call.\n> - If a new data subject has to be deleted, it is recommended to wait at least 24 hours after its creation to ensure that all the data has been properly stored and synchronized before removal.\n> - Requests will be processed asynchronously and can be monitored in the View Activity option in the Data Subject list view within the application. If multiple calls are required, wait until each request processes before making another call.\n\n> 👍 \n> \n> The **Enable Data Subject Deletion** setting must be enabled within Global Settings in the OneTrust application in order to use this API. For more information, see [Deleting Data Subject Records](https://my.onetrust.com/s/article/UUID-73ac74f6-edc7-3344-e86e-e810660154e9?topicId=0TO1Q000000ItSSWA0).",
        "operationId": "DeleteDataSubjectProfileUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubjectDeleteRequest"
              }
            }
          },
          "description": "Structure holding the Data Subject which needs to be deleted using any one of the value at a time.\n* List of Identifiers\n* Date range between fromCreatedDate and toCreatedDate\n* Date range between fromInteractionDate and toInteractionDate\n* List of Data Subject Identifier GUIDs\n\n**Note:**\n1. Deleting Data Subjects is a permanent action that should be exercised with caution\n2. When filtering by date range, the Created Date and Interaction Date parameters should be used separately. They should not be used at the same time.\n3. **A maximum of 1000 data subject identifiers can be deleted per request**\n4. **Requests will be processed asynchronously and can be monitored in the View Activity option in the Data Subject list view within the application. If multiple calls are required, wait until each request processes before making another call**\n",
          "x-examples": {
            "Example": "{\n  \"identifiers\": [\"user1@domain.com\",\"user2@domain.com\"],\n  \"dataSubjectGuids\":[\"5a4ee07e-7f66-4dcf-bd42-ea0d266284bd\",\"3a4ee07e-7f66-4dcf-bd42-ea0d266284bd\"],\n  \"fromCreatedDate\":\"2020-06-22T03:55:40\",\n  \"toCreatedDate\":\"2020-06-23T20:55:40\",\n  \"fromInteractionDate\":\"2020-06-22T03:55:40\",\n  \"toInteractionDate\":\"2020-06-23T20:55:40\"\n  \"retainReceiptsTransactions\": true\n}"
          }
        },
        "responses": {
          "200": {
            "description": "Deletion Request has been accepted",
            "content": {
              "text/plain": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Delete Data Subjects",
        "tags": [
          "Data Subjects V2"
        ]
      }
    },
    "/api/consent/v2/receipts": {
      "post": {
        "description": "Use this API to retrieve a list of all receipts. Depending on the query or header parameter values passed in the request, the response will return specific details about receipts, including relevant information about Collection Point interactions, Purposes, and the associated Purpose Preferences and attributes.\n\n> 🗒 Things to Know\n> \n> - The timespan for the `fromDate` and `toDate` values must be 24 hours or less.\n> - The `includeArchived` parameter must be included to retrieve receipts created within the last 90 days. For receipts created more than 90 days ago, use either `includeArchived` and `identifier` or `includeArchived` and `receiptId`.\n> - If the `includeArchived` parameter is set to `true` and the number of records is greater than a page, `nextMarker` must be included in the next request body to paginate.\n> - The `requestContinuation` parameter is returned if more than one page of records is returned in the response. `requestContinuation` must be included in the next request body to paginate.\n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.     \n",
        "operationId": "getReceiptListDetailsUsingPOST",
        "parameters": [
          {
            "description": "UUID of the receipt.",
            "in": "query",
            "name": "receiptId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter receipts by data element name. Note that this request header must be used in conjunction with dataElementValue.",
            "in": "header",
            "name": "dataElementName",
            "required": false,
            "example": "FirstName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter receipts by data element value. Note that this request header must be used in conjunction with dataElementName.",
            "in": "header",
            "name": "dataElementValue",
            "required": false,
            "example": "Alice",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When set to true will include data subject data elements on the receipt payload.",
            "in": "query",
            "name": "includeDataElements",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Date from which to return records. Formats accepted are yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "To date to return records. Formats accepted are yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Data Subject Identifier filter. `identifier` can be obtained using the [Get list of datasubjects](/onetrust/reference/getdatasubjectsusingget) endpoint.",
            "in": "header",
            "name": "identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UUID of the Collection Point.",
            "in": "query",
            "name": "collectionPointGuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UUID of the Purpose. `purposeGuid` can be obtained using the [Get A Paged List Of Purposes](/onetrust/reference/getgroupedpurposesusingget) endpoint.",
            "in": "query",
            "name": "purposeGuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UUID of the Organization. `organizationId` can be obtained using the [Retrieve Organization  Structure](/onetrust/reference/organizationtreestructureusingget) endpoint.",
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N).",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of records per page (0..N).",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Sorting criteria in the format: property,direction (where direction is asc or desc). Supported properties: consentCreationDate, interactionDate, id.",
            "in": "query",
            "name": "sort",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "This parameter will fetch up to 1000 historical receipts per API call that are not yet stored in the Azure Cosmos DB or those that have reached their time-to-live (TTL) expiration of 90 days.",
            "in": "query",
            "name": "includeArchived",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The `isAnonymous` parameter will be ignored. Anonymous receipts can only be returned by using the `identifier` or `receiptId` parameter.",
            "in": "query",
            "name": "isAnonymous",
            "deprecated": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "This parameter will return consent strings stored in receipts. Note that it must be used in conjunction with an identifier or receiptId filter.",
            "in": "query",
            "name": "includeConsentStrings",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ContinuationToken"
        },
        "responses": {
          "200": {
            "description": "OK\n\nList of receipts retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "properties": {
                          "attributes": {
                            "properties": {
                              "additionalProp1": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "additionalProp2": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "additionalProp3": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "collectionPointName": {
                            "type": "string"
                          },
                          "collectionPointType": {
                            "type": "string"
                          },
                          "collectionPointUUID": {
                            "type": "string"
                          },
                          "collectionPointVersion": {
                            "type": "integer"
                          },
                          "consentCreationDate": {
                            "type": "string"
                          },
                          "consentString": {
                            "properties": {
                              "content": {
                                "description": "Content of the consent string",
                                "example": "CP8Lv4AP8Lv4AAcABBENAtEsAP_gAAAAAChQg1NX_H__bW9r8Xr3aft0eY1P99j77sQxBhfJE",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the consent string",
                                "enum": [
                                  "GPP",
                                  "TCFEU",
                                  "TCFCANADA"
                                ],
                                "example": "GPP",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "customPayload": {
                            "properties": {
                              "payload1": {
                                "type": "string"
                              },
                              "payload2": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "dataSubjectIdentifier": {
                            "type": "string"
                          },
                          "dataSubjectIdentifierHash": {
                            "type": "string"
                          },
                          "doubleOptIn": {
                            "type": "boolean"
                          },
                          "geolocation": {
                            "properties": {
                              "country": {
                                "description": "Country of the DataSubject",
                                "example": "US",
                                "type": "string"
                              },
                              "purposeIds": {
                                "items": {
                                  "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                              },
                              "state": {
                                "description": "State Code of the DataSubject",
                                "example": "GA",
                                "type": "string"
                              },
                              "stateName": {
                                "description": "State Name of the DataSubject",
                                "example": "Georgia",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "type": "string"
                          },
                          "interactionDate": {
                            "type": "string"
                          },
                          "isAnonymous": {
                            "type": "boolean"
                          },
                          "language": {
                            "type": "string"
                          },
                          "origin": {
                            "type": "string"
                          },
                          "otJwtVersion": {
                            "type": "integer"
                          },
                          "purposes": {
                            "items": {
                              "properties": {
                                "attributes": {
                                  "properties": {
                                    "additionalProp1": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "additionalProp2": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "additionalProp3": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "consentLifeSpan": {
                                  "type": "integer"
                                },
                                "customPreferences": {
                                  "items": {
                                    "properties": {
                                      "customPreferenceOptions": {
                                        "items": {
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "isDefault": {
                                              "type": "boolean"
                                            },
                                            "label": {
                                              "type": "string"
                                            },
                                            "order": {
                                              "type": "integer"
                                            },
                                            "transactionType": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "displayAs": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "languages": {
                                        "items": {
                                          "properties": {
                                            "default": {
                                              "type": "boolean"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "options": {
                                              "items": {
                                                "properties": {
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "isDefault": {
                                                    "type": "boolean"
                                                  },
                                                  "label": {
                                                    "type": "string"
                                                  },
                                                  "order": {
                                                    "type": "integer"
                                                  },
                                                  "transactionType": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "purposeNote": {
                                  "properties": {
                                    "isValidNote": {
                                      "type": "boolean"
                                    },
                                    "noteId": {
                                      "type": "string"
                                    },
                                    "noteLanguage": {
                                      "type": "string"
                                    },
                                    "noteText": {
                                      "type": "string"
                                    },
                                    "noteType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "purposeType": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "topics": {
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "integrationKey": {
                                        "type": "string"
                                      },
                                      "languages": {
                                        "items": {
                                          "properties": {
                                            "default": {
                                              "type": "boolean"
                                            },
                                            "language": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "transactionType": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "transactionType": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "test": {
                            "type": "boolean"
                          },
                          "unsubscribeAll": {
                            "description": "Status indicating whether a data subject has unsubscribed to all Purposes in a Preference Center. ",
                            "example": true,
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "empty": {
                      "type": "boolean"
                    },
                    "first": {
                      "type": "boolean"
                    },
                    "last": {
                      "type": "boolean"
                    },
                    "number": {
                      "type": "integer"
                    },
                    "numberOfElements": {
                      "description": "Number can vary from previous pages when reaching the last page",
                      "type": "integer"
                    },
                    "pageable": {
                      "properties": {
                        "offset": {
                          "type": "integer"
                        },
                        "pageNumber": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Number of elements requested in the call",
                          "type": "integer"
                        },
                        "paged": {
                          "type": "boolean"
                        },
                        "requestContinuation": {
                          "type": "string"
                        },
                        "sort": {
                          "properties": {
                            "empty": {
                              "type": "boolean"
                            },
                            "sorted": {
                              "type": "boolean"
                            },
                            "unsorted": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "unpaged": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "size": {
                      "description": "Number of elements returned in the call",
                      "type": "integer"
                    },
                    "sort": {
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        },
                        "sorted": {
                          "type": "boolean"
                        },
                        "unsorted": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "Example Response 1": {
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "attributes": null,
                          "collectionPointName": "pref33434",
                          "collectionPointType": "PREFERENCE_CENTER",
                          "collectionPointUUID": "b38669c7-df13-4bd6-90e2-a3fad1ad38ea",
                          "collectionPointVersion": 1,
                          "consentCreationDate": "2021-03-12T04:42:44.512314",
                          "customPayload": null,
                          "dataSubjectIdentifier": "test1@gmail.com",
                          "dataSubjectIdentifierHash": "99c7803eb3116be6e3f641f944d490d9df7000d4b7e0ec2ed1ef3515248ebcd9d0533a88fc084967dc940d464829ca0f2a68bdffeab4755952b6835ca68b404c",
                          "doubleOptIn": false,
                          "id": "631ec0fd-a65f-40d1-b21a-99d2ddcdf3f9",
                          "interactionDate": "2021-03-12T04:42:44.510954",
                          "isAnonymous": false,
                          "language": "en",
                          "origin": "PREFERENCE_CENTER",
                          "otJwtVersion": null,
                          "purposes": [
                            {
                              "attributes": null,
                              "consentLifeSpan": 0,
                              "customPreferences": [],
                              "description": "desc 1",
                              "externalReference": null,
                              "id": "1794f879-fee6-4f8b-825a-5988c087d160",
                              "name": "aj-purpose111",
                              "purposeNote": null,
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [],
                              "transactionType": "WITHDRAWN",
                              "version": 7
                            }
                          ],
                          "test": false,
                          "unsubscribeAll": true
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": false,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 1,
                        "paged": true,
                        "requestContinuation": "{\"token\":\"-RID:~CFcYALqunlMBAAAAAAAAAA==#RT:1#TRC:1#ISV:2#IEO:65567#QCF:3\",\"range\":{\"min\":\"\",\"max\":\"FF\"}}",
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 1,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      }
                    }
                  }
                }
              },
              "Example Response 2": {
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "attachments": null,
                          "attributes": {
                            "Dep1234": [
                              "1"
                            ],
                            "Gajendra 1": [
                              "A"
                            ],
                            "New attribute 29": [
                              "aaa"
                            ]
                          },
                          "collectionPointName": "wf-cp-pvlrs",
                          "collectionPointType": "WEB_FORM",
                          "collectionPointUUID": "94ecdb15-be97-4655-ad67-2206d4fc4f5a",
                          "collectionPointVersion": 6,
                          "consentCreationDate": "2021-11-23T11:33:00.422876",
                          "customPayload": null,
                          "dataSubjectIdentifier": "example1221@otprivacy.com",
                          "dataSubjectIdentifierHash": "0d1f82cba0144c8704b129e2d5dcd72c9c309a8d2455cbfcd72ef46d6aa3860c05e7ec704cd9c60f84fd87ce48931851b6f5092b66afd1fd6e8f0cdc588b6ea7",
                          "doubleOptIn": false,
                          "id": "26aba489-86c0-4dde-a948-6b5fb10c6add",
                          "interactionDate": "2021-11-23T11:33:00.422876",
                          "isAnonymous": false,
                          "language": null,
                          "organizationId": null,
                          "origin": null,
                          "otJwtVersion": null,
                          "purposes": [
                            {
                              "attributes": {
                                "City": [
                                  "Bangalore"
                                ],
                                "Country": [
                                  "India"
                                ],
                                "Without Des": [
                                  "asdf"
                                ]
                              },
                              "consentLifeSpan": 0,
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [],
                                  "displayAs": null,
                                  "id": "c5a463db-0207-4b30-8592-9c749533256e",
                                  "languages": [],
                                  "name": "Color"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "4ce3ae91-eccc-44f6-a7aa-c186c4ed7ce3",
                                      "isDefault": false,
                                      "label": "<5 lakhs",
                                      "order": 0,
                                      "transactionType": null
                                    },
                                    {
                                      "id": "04854962-7079-46eb-96b1-3aeffe9a2a3c",
                                      "isDefault": false,
                                      "label": "5 - 10 lakhs",
                                      "order": 1,
                                      "transactionType": null
                                    },
                                    {
                                      "id": "222f82b0-c406-4f20-a5d4-70464634b90e",
                                      "isDefault": false,
                                      "label": ">10 lakhs",
                                      "order": 2,
                                      "transactionType": null
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "0cd30049-3293-462e-8ad3-dd6a1fb56901",
                                  "languages": [],
                                  "name": "Price Range"
                                }
                              ],
                              "description": null,
                              "expiryDate": null,
                              "externalReference": null,
                              "id": "e5fbafc9-478e-451c-838a-d9bbd3df514d",
                              "name": "Car11",
                              "purposeAttachments": [],
                              "purposeNote": {
                                "isValidNote": true
                              },
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "c0d56f76-6cbd-44df-9284-0ac6214cf106",
                                  "integrationKey": "Car11_Model",
                                  "languages": [],
                                  "name": "Model",
                                  "transactionType": null
                                }
                              ],
                              "transactionId": "a7238e82-cd27-4140-9cde-07fad5fad560",
                              "transactionType": "CONFIRMED",
                              "version": 5
                            },
                            {
                              "attributes": {
                                "City": [
                                  "ds"
                                ],
                                "Country": [
                                  "sdfd"
                                ],
                                "Without Des": [
                                  "sdff"
                                ]
                              },
                              "consentLifeSpan": 0,
                              "customPreferences": [],
                              "description": null,
                              "expiryDate": null,
                              "externalReference": null,
                              "id": "89b054f9-985a-4873-b999-bf13845ea664",
                              "name": "1234",
                              "purposeAttachments": [],
                              "purposeNote": {
                                "isValidNote": true
                              },
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [],
                              "transactionId": "8e1f3b49-5989-4a7c-a4ce-924ab4dfed7c",
                              "transactionType": "CONFIRMED",
                              "version": 3
                            }
                          ],
                          "test": false,
                          "unsubscribeAll": false
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": false,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 1,
                        "paged": true,
                        "requestContinuation": "{\"key\":\"blob_request_continuation_token\",\"marker\":\"2!304!MDAwMTgyIWRhdGFzdWJqZWN0aW5kZXgvMGQxZjgyY2JhMDE0NGM4NzA0YjEyOWUyZDVkY2Q3MmM5YzMwOWE4ZDI0NTVjYmZjZDcyZWY0NmQ2YWEzODYwYzA1ZTdlYzcwNGNkOWM2MGY4NGZkODdjZTQ4OTMxODUxYjZmNTA5MmI2NmFmZDFmZDZlOGYwY2RjNTg4YjZlYTcvMzNkMDg2YjQtMTI2OC00NzNjLTkxOTktYzUzNTYyYTkzOTg4ITAwMDAyOCE5OTk5LTEyLTMxVDIzOjU5OjU5Ljk5OTk5OTlaIQ--\",\"previousPage\":0}",
                        "sort": {
                          "empty": false,
                          "sorted": true,
                          "unsorted": false
                        },
                        "unpaged": false
                      },
                      "size": 1,
                      "sort": {
                        "empty": false,
                        "sorted": true,
                        "unsorted": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Receipts",
        "tags": [
          "Receipts V2"
        ]
      }
    },
    "/api/consent/v2/transactions": {
      "post": {
        "description": "Use this API to retrieve a list of all consent transactions. The response will include information about each transaction, the corresponding consent date, and details of the Purposes and the associated Purpose Preferences that the data subject has interacted with.\n\n> 🗒 Things to Know\n> \n> - The timespan for the `fromDate` and `toDate` values must be 24 hours or less.\n",
        "operationId": "getTransactionsUsingPOST",
        "parameters": [
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property,direction (where direction is asc or desc). Supported properties: **consentCreationDate**.",
            "in": "query",
            "name": "sort",
            "required": false,
            "example": [
              "consentCreationDate,desc",
              "consentCreationDate,asc"
            ],
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Retrieve transactions recorded after the specified date. Formats accepted: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS",
            "in": "query",
            "name": "fromDate",
            "required": false,
            "example": [
              "2022-12-19T15:49:50",
              "2022-12-19"
            ],
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Retrieve transactions recorded up to the specified date. Formats accepted: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS",
            "in": "query",
            "name": "toDate",
            "required": false,
            "example": [
              "2021-12-19T15:49:50",
              "2021-12-19"
            ],
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "UUID of the Collection Point",
            "in": "query",
            "name": "collectionPointGuid",
            "example": "f312dd9b-58b4-4f34-b5ff-10b9b464bc4f",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ContinuationToken"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CosmosTransaction"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "attributes": {},
                          "autoGenerated": false,
                          "collectionPointAttributes": null,
                          "collectionPointUUID": "f312dd9b-58b4-4f34-b5ff-10b9b464bc4f",
                          "consentCreationDate": "2022-12-19T15:49:54.005544",
                          "customPreferences": [
                            {
                              "choices": [],
                              "id": "e1df7c1c-5567-4a51-a5fc-886730681792",
                              "options": [
                                "bdac1379-e47c-45ae-a3e0-848e864dc470",
                                "2040dba5-2069-4780-acca-444c65bc24f9",
                                "e21eabe3-a712-4417-8811-c61db7592c4d"
                              ]
                            }
                          ],
                          "expiryDate": null,
                          "guid": "c50d0577-bcc3-42b6-94d5-c2207468fecd",
                          "identifier": "gpburdell@onetrust.com",
                          "interactionDate": "2022-12-19T15:49:54.005544",
                          "purposeAttachments": [],
                          "purposeGuid": "c50d0577-bcc3-42b6-94d5-c2207468fecd",
                          "purposeNote": null,
                          "purposeVersion": 1,
                          "receiptId": "3c017f99-0eaa-4dff-85ab-f97983b5e95c",
                          "topics": [
                            {
                              "topicId": "0ffe940a-dcf3-4535-9e4e-fe65d27636b0",
                              "transactionType": null
                            },
                            {
                              "topicId": "188853ae-c960-42cc-bff9-6bbbc34d5db1",
                              "transactionType": null
                            },
                            {
                              "topicId": "191d8e7d-5e45-45ba-aa8d-31e2143a6c8e",
                              "transactionType": null
                            }
                          ],
                          "transactionGuid": "b8f39060-43ca-4ba8-ab1d-b61325b36137",
                          "transactionType": "CONFIRMED"
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": false,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 1,
                        "paged": true,
                        "requestContinuation": "{\"compositeToken\":\"{\\\"token\\\":\\\"+RID:iNFkAI-ei-4ULDsAAAAAAA==#RT:2#SRC:1#TRC:2#RTD:0Idx9i7ua9Rq4VL3LfZOBTMxMzMuMjMuMjpVMjY7NTo7NjQvNDUxNTI6AA==#ISV:2#IEO:65567#QCF:8#FPC:ATq1OgAAAAAANSw7AAAAAAA=\\\",\\\"range\\\":{\\\"min\\\":\\\"\\\",\\\"max\\\":\\\"FF\\\"}}\",\"orderByItems\":[{\"item\":\"2022-12-19T15:49:53.340419\"}],\"rid\":\"iNFkAI-ei-4ULDsAAAAAAA==\",\"inclusive\":true}",
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 1,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "Body Parameters Missing": {
                "examples": {
                  "response": {
                    "value": {
                      "errors": [
                        {
                          "code": "ERROR_GENERIC_OPERATION_FAILED",
                          "detail": "Request could not be parsed",
                          "title": "Operation Failed"
                        }
                      ],
                      "traceId": "a20658d1-4a43-4cf5-a66b-a6528960bc3a"
                    }
                  }
                }
              },
              "Query Size Greater than 50": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "[400] during [POST] to [http://consent-transaction.consent-trial-prod-admin-portal:8080/transactionsmanager/v2/transactions?collectionPointGuid=f312dd9b-58b4-4f34-b5ff-10b9b464bc4f&size=500&page=2&sort=consentCreationDate%2CDESC][TransactionClient#findCosmosTransactions(Pageable,ContinuationToken,String,String,UUID)]:[{\"errors\":[{\"title\":\"Page size cannot be greater than 50\",\"detail\":\"Page size cannot be greater than 50\",\"code\":\"ERROR_CONSENT_TRANSACTION_INVALID_REQUEST\"}],\"traceId\":\"2ff28540-f9a1-4c56-8728-679d17d8d0fe\"}]",
                      "timestamp": "2022-12-19T16:43:05.787759Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Transactions",
        "tags": [
          "Transactions V2"
        ]
      }
    },
    "/api/consentmanager/v1/collectionpoints": {
      "get": {
        "description": "Use this API to retrieve a list of all Collection Points. The response will include relevant details for each Collection Point, including purposes, notices, data elements, and more.\n",
        "operationId": "getCollectionPointsUsingGET",
        "parameters": [
          {
            "description": "Type of Collection Point.",
            "in": "query",
            "name": "collectionPointType",
            "required": false,
            "example": "API",
            "schema": {
              "type": "string",
              "enum": [
                "WEB_FORM",
                "API",
                "COOKIE"
              ]
            }
          },
          {
            "description": "Type of Consent.",
            "in": "query",
            "name": "consentType",
            "required": false,
            "example": "EXPLICIT",
            "schema": {
              "type": "string",
              "enum": [
                "EXPLICIT",
                "UNAMBIGUOUS",
                "FORMSUBMIT",
                "OPTINCHECKBOX",
                "OPTOUTCHECKBOX",
                "SINGLETRIGGER",
                "CONDITIONALTRIGGER",
                "COOKIEBANNER"
              ]
            }
          },
          {
            "description": "The unique identifier of the Data Element.",
            "in": "query",
            "name": "dataElementGuid",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Name of the collection point.",
            "in": "query",
            "name": "name",
            "required": false,
            "example": "Collection Point Test",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the Organization.",
            "in": "query",
            "name": "organizationId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Unique identifier of purpose.",
            "in": "query",
            "name": "purposeGuid",
            "required": false,
            "example": "987b1f51-a538-122e-afc4-6b383c28eeb3",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Collection point status.",
            "in": "query",
            "name": "status",
            "required": false,
            "example": "DRAFT",
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "ACTIVE",
                "RETIRED",
                "INACTIVE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK\n\nList of Collection Points retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCollectionPointDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Collection Points",
        "tags": [
          "Collection Points"
        ]
      },
      "post": {
        "description": "Use this API to create a new Collection Point. The Collection Point will be created with version **1** and **Draft** status.\n\n> 🗒 Things to Know\n> \n> - Data element name values support up to 750 characters. Data element types containing the word **Country** do not support the following characters: [<>();:'â€œ$#}{]\n> - If the `EnablePrimaryIdentifier` parameter is set to `true`, then the `PrimaryIdentifierType` parameter will be required in the API request body.\n> - When creating a Web Form Collection Point, the `HostedSDK` parameter value will be set to `true` by default, regardless of the value entered in the request body.\n> - One of the following parameters is required in the API request body: `PurposeId`, `PurposeIds`, or `PurposeIdsWithVersion`.\n>   - The `PurposeId` and `PurposeIds` parameters can be used to link an **Active** version of a purpose to a Collection Point.\n>   - The `PurposeIdsWithVersion` parameter can be used to link specific versions of a purpose (either in **Draft** or **Active** status) to a Collection Point.\n",
        "operationId": "createCollectionPointUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionPointCreateRequest"
              }
            }
          },
          "description": "Structure holding the values of the Collection Point to be created",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionPointDetailDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "ActivationDate": "2018-03-15T12:00:20.123Z",
                      "CanCreateNewVersion": true,
                      "CollectionPointType": "WEB_FORM",
                      "ConsentIntegration": false,
                      "ConsentType": "FORMSUBMIT",
                      "CreateDate": "2018-03-22T20:55:40.237Z",
                      "DataElements": [
                        "First Name",
                        "Last Name",
                        "Address"
                      ],
                      "Description": "Collecting data for Marketing and Promotion Purposes",
                      "DoubleOptIn": false,
                      "EnableNewConsentIntegration": true,
                      "FirstReceiptOn": "2018-05-12T11:23:25.243Z",
                      "HostedSDK": false,
                      "IABVendorId": 13,
                      "Id": "25d9ccac-db88-4d34-849c-3d602a629961",
                      "IdentifierDataElement": {
                        "CollectionPoints": 2,
                        "CreatedDate": "2019-12-30T10:52:30.974Z",
                        "Id": "21e0de87-d6ef-4b39-a54b-6d877698e3f6",
                        "IsIdentifier": false,
                        "Label": "Work Email",
                        "Languages": [
                          {
                            "Language": "en-us",
                            "Name": "Work Email"
                          },
                          {
                            "Language": "en-us",
                            "Name": "Work Email"
                          },
                          {
                            "Language": "en-us",
                            "Name": "Work Email"
                          },
                          {
                            "Language": "en-us",
                            "Name": "Work Email"
                          },
                          {
                            "Language": "en-us",
                            "Name": "Work Email"
                          }
                        ],
                        "NumberOfLanguages": 3,
                        "UpdatedDate": "2019-12-30T10:55:30.974Z",
                        "canEdit": false
                      },
                      "IsAuthenticationRequired": true,
                      "Language": "en-us",
                      "Languages": [
                        "en-us",
                        "fr"
                      ],
                      "LastActivityDate": "2020-01-10T18:12:13.543Z",
                      "LastSdkIntegrationDate": "2020-01-08T14:25:11.112Z",
                      "Name": "Web Form Collection Point",
                      "NoConsentTransactions": false,
                      "OrganizationId": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
                      "PreferenceCenter": {
                        "Id": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
                        "Name": "Email Communication Preferences",
                        "OrganizationName": "OneTrust",
                        "Template": "ENHANCED"
                      },
                      "PrivacyPolicyUrl": "https://www.onetrust.com/privacy-notice",
                      "Purposes": [
                        {
                          "CreatedDate": "2019-12-30T10:52:30.974Z",
                          "CustomPreferences": [
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            }
                          ],
                          "Description": "Collect customer emails for marketing purposes",
                          "Id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                          "Label": "Marketing Communications",
                          "LifeSpan": 7889238,
                          "NewVersionAvailable": true,
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            }
                          ],
                          "Type": "STANDARD",
                          "UpdatedDate": "2019-12-30T10:54:30.974Z",
                          "Version": 2
                        },
                        {
                          "CreatedDate": "2019-12-30T10:52:30.974Z",
                          "CustomPreferences": [
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            }
                          ],
                          "Description": "Collect customer emails for marketing purposes",
                          "Id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                          "Label": "Marketing Communications",
                          "LifeSpan": 7889238,
                          "NewVersionAvailable": true,
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            }
                          ],
                          "Type": "STANDARD",
                          "UpdatedDate": "2019-12-30T10:54:30.974Z",
                          "Version": 2
                        },
                        {
                          "CreatedDate": "2019-12-30T10:52:30.974Z",
                          "CustomPreferences": [
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                },
                                {
                                  "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "Label": "Weekly"
                                }
                              ],
                              "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "Name": "Email Frequency"
                            }
                          ],
                          "Description": "Collect customer emails for marketing purposes",
                          "Id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                          "Label": "Marketing Communications",
                          "LifeSpan": 7889238,
                          "NewVersionAvailable": true,
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            },
                            {
                              "CanDelete": true,
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "IntegrationKey": "Marketing-Communications_Car-Marketing",
                              "Name": "Car Marketing"
                            }
                          ],
                          "Type": "STANDARD",
                          "UpdatedDate": "2019-12-30T10:54:30.974Z",
                          "Version": 2
                        }
                      ],
                      "ReceiptCount": 563,
                      "RedirectUrl": "https://www.onetrust.com/",
                      "ResponsibleGroupId": "5466af43-ff42-4a39-8722-5a98e7981fc4",
                      "ResponsibleUserId": "bc4836e2-c117-461b-a7a2-2b268c037a97",
                      "SendConsentEmail": false,
                      "Status": "ACTIVE",
                      "SubjectIdentifier": "Email",
                      "Version": 2,
                      "WebFormUrl": "https://www.onetrust.com/"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create Collection Point",
        "tags": [
          "Collection Points"
        ]
      }
    },
    "/api/consentmanager/v1/collectionpoints/{collectionpointGuid}/token": {
      "get": {
        "description": "Use this API to retrieve the JSON Web Token (JWT) for a given Collection Point. The JWT returned in the response can be used as the `requestInformation` parameter value in the [Consent Receipts API](https://developer.onetrust.com/onetrust/reference/createconsentreceiptusingpost) in order to pass data subject consent transactions.\n",
        "operationId": "getTokenUsingGET",
        "parameters": [
          {
            "description": "Collection Point UUID",
            "in": "path",
            "name": "collectionpointGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Collection Point version",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "State of the Collection Point {ACTIVE|DRAFT|RETIRED|INACTIVE}",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "ACTIVE",
                "RETIRED",
                "INACTIVE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionPointTokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Collection Point Token",
        "tags": [
          "Collection Points"
        ]
      }
    },
    "/api/consentmanager/v1/collectionpoints/{collectionpointId}": {
      "put": {
        "description": "Use this API to update an existing Collection Point. Before calling this API, ensure that the Collection Point is in **Draft** status. If the Collection Point is in **Active** status, use the [Create New Collection Point Version](https://developer.onetrust.com/onetrust/reference/createversionusingpost) API to create a new version of the Collection Point.\n\n  > 🗒 Things to Know\n  > \n  > - One of the following parameters must be included in the API request body: `PurposeId`, `PurposeIds`, or `PurposeIdsWithVersion`.\n  >   - The `PurposeId` and `PurposeIds` parameters can be used to link an **Active** version of a purpose to a Collection Point.\n  >   - The `PurposeIdsWithVersion` parameter can be used to link specific versions of a purpose (either in **Draft** or **Active** status) to a Collection Point.\n",
        "operationId": "editCollectionPointUsingPUT",
        "parameters": [
          {
            "description": "Collection Point UUID",
            "in": "path",
            "name": "collectionpointId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The Collection Point version",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionPointEditRequest"
              }
            }
          },
          "description": "Structure holding the Collection Point values of the Collection Point to be edited",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Existing Collection Point",
        "tags": [
          "Collection Points"
        ]
      }
    },
    "/api/consentmanager/v1/collectionpoints/{collectionpointId}/disable": {
      "put": {
        "description": "Use this API to update the status of a Collection Point. \n  > 🗒 Things to Know\n    > \n    > - To disable the Collection Point, set the `value` query parameter to `true`. All versions of the Collection Point will be disabled from ingesting receipts.\n    > - To enable the Collection Point, set the `value` query parameter to `false`. The previous status of the Collection Point will be restored.\n    > - The following Collection Point types cannot be disabled: ADMIN_UPDATE and NOTIFICATION_OPT_OUT.\n",
        "operationId": "disableCollectionPointUsingPUT",
        "parameters": [
          {
            "description": "The UUID of the Collection Point to be disabled or enabled. `collectionPointId` can be obtained using [Get a paged list of Collection Points](/onetrust/reference/getcollectionpointsusingget)",
            "in": "path",
            "name": "collectionpointId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Value of the disable flag to update",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Update Collection Point Status",
        "tags": [
          "Collection Points"
        ]
      }
    },
    "/api/consentmanager/v1/custompreferences": {
      "get": {
        "description": "Use this API to retrieve a list of all Purpose Preferences. The response will include basic details such as the Purpose Preference name, languages, number of options, created date, and updated date.",
        "operationId": "getListUsingGET",
        "parameters": [
          {
            "description": "Results page to be retrieved (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. Example: ?sort=CreatedDate,asc",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCustomPreferenceGetDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Purpose Preferences",
        "tags": [
          "Purpose Preferences"
        ]
      },
      "post": {
        "description": "Use this API to create a new Purpose Preference. The Purpose Preference will be created with the details provided in the request body.",
        "operationId": "createCustomPreferenceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPreferenceCreateDto"
              }
            }
          },
          "description": "Structure holding the values of the Purpose Preference to be created",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPreferenceDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create Purpose Preference",
        "tags": [
          "Purpose Preferences"
        ]
      }
    },
    "/api/consentmanager/v1/custompreferences/{customPreferenceId}": {
      "get": {
        "description": "Use this API to retrieve a single Purpose Preference by its unique identifier along with details such as the Purpose Preference name, languages, number of options, created date, and updated date.",
        "operationId": "findByGuidUsingGET",
        "parameters": [
          {
            "description": "The UUID of the Purpose Preference to be retrieved",
            "in": "path",
            "name": "customPreferenceId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Parameter to include all of the Purpose Preference's translations (by default is set to false)",
            "in": "query",
            "name": "includeTranslations",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPreferenceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Purpose Preference",
        "tags": [
          "Purpose Preferences"
        ]
      },
      "put": {
        "description": "Use this API to edit a specific Purpose Preference. The Purpose Preference will be updated with the details provided in the request body.",
        "operationId": "editCustomPreferenceUsingPUT",
        "parameters": [
          {
            "description": "The UUID of the Purpose Preference to be edited",
            "in": "path",
            "name": "customPreferenceId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPreferenceDto"
              }
            }
          },
          "description": "Structure holding the values of the Purpose Preference to be edited",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPreferenceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Purpose Preference",
        "tags": [
          "Purpose Preferences"
        ]
      }
    },
    "/api/consentmanager/v1/datasubjects/dataelements": {
      "post": {
        "description": "Use this API to create a new data subject or update an existing data subject. The data subject will be created or updated with the details provided in the request body.\n\n> 🗒 Things to Know\n> \n> - The data subject primary identifier cannot be updated. However, additional identifiers can be added, updated, or deleted:\n>   - To add or update an additional identifier for a given data subject, set the `linked` parameter value to `true` and include a list of the additional identifiers within the `value` parameter.\n>   - To remove an additional identifier from a given data subject, set the `linked` parameter value to `true` and leave the `value` parameter empty. Removed identifiers will remain associated with the data subject as data elements.\n> - This API is not designed to be used in synchronous workflows and will not trigger integration events or reporting updates.",
        "operationId": "createOrUpdateDataSubjectUsingPOST",
        "parameters": [
          {
            "description": "The primary identifier of the Data Subject",
            "in": "header",
            "name": "dataSubjectIdentifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubjectCreateDTO"
              }
            }
          },
          "description": "Structure holding the values of the Data Elements to be added to the Data Subject",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectDetailDTO"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Data Subject's Data Elements",
        "tags": [
          "Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/datasubjects/merge": {
      "put": {
        "description": "Use this API to merge data subject records into a primary data subject record. The transactions and profile history captured across multiple data subject identifiers will be consolidated into the primary data subject record, containing all of the data subject's information.\n\n> 🗒 Things to Know\n> \n> - Data subjects indicated in the `additionalIdentifiers` parameter value will be deleted after being merged with the `primaryIdentifier`.\n> - Existing transactions for the `additionalIdentifiers` value will convert to the `primaryIdentifier`.\n> - Data elements will use the most recent updated value across all of the data subject identifiers.\n> - Receipts will remain under the data subject identifier from which they were generated.",
        "operationId": "mergeDataSubjectsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeDataSubjecstDTO"
              }
            }
          },
          "description": "Structure holding the List of Primary DataSubject Identifiers that needs to be merged to one Primary DataSubject Identifier",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted  Merge data subjects request has been accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "example": "Request has been accepted",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Deduplicate Data Subjects",
        "tags": [
          "Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/datasubjects/merge/{mergeRequestId}": {
      "post": {
        "description": "Use this API to merge duplicate data subjects in order to consolidate existing Purpose statuses captured across the different identifiers into a single data subject profile.\n\n> 🗒 Things to Know\n> \n> - The [Create Scheduled Export](https://developer.onetrust.com/onetrust/reference/schedulemergerequestusingpost) API can be used to create scheduled exports of duplicate data subjects.\n> - The [Generate Export of Duplicate Data Subjects](https://developer.onetrust.com/onetrust/reference/exportduplicatedatasubject) API can be used to generate exports that identify duplicate data subjects.\n\n> 👍 \n> \n> For more information, see [Merging Data Subjects](https://my.onetrust.com/s/article/UUID-87184a50-16e5-185a-36c2-2ca0b2e18372).",
        "operationId": "mergeDatasubjectUsingPOST",
        "parameters": [
          {
            "description": "The Guid of the merge request",
            "in": "path",
            "name": "mergeRequestId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {},
                "type": "object"
              }
            }
          },
          "description": "Request body should be empty json.",
          "x-examples": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Merge Request has been accepted",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/plain": {
                "examples": {
                  "response": {
                    "value": "Merge Request has been accepted"
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Deduplicate Data Subjects",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/datasubjects/profiles": {
      "get": {
        "description": "Use this API to retrieve a list of all data subjects. The response will include details for each data subject such as data elements, purposes, associated topics, and purpose preferences. The response will also include relevant information about the latest Collection Point interactions and receipt IDs, along with the current status of consent for the purposes and preferences they have interacted with.\n\n> 🗒 Things to Know\n> \n> - It is critical that all queries include `properties=ignoreCount`. Not including `ignoreCount` will significantly decrease performance. If you need the count, we advise to only include it in the initial query, and not for subsequent page calls.\n> - The values passed in the `properties` query parameter can change the response of this API. A fast response on large data sets can be obtained passing any of the following values: `linkTokens`, `ignoreCount`, `ignoreTopics`, `ignoreCustomPreferences`.\n> - This API is not designed to be used in synchronous workflows. As an alternative, the [Gets preferences for a Data Subject](https://developer.onetrust.com/onetrust/reference/getpreferencesusingget) API can be called.\n> - It is strongly recommended to pass the `requestContinuation` parameter returned in the response of this API in the next API request to paginate. Including it is crucial for better performance when dealing with multiple pages of data subject records. For more information, see [Understanding & Implementing Pagination](https://developer.onetrust.com/onetrust/reference/understanding-implementing-pagination).\n\n> 🚧 \n> \n> Please note that the FTC Do Not Call List is updated once daily and not updated in real time. As such, there may be a possibility that a consumer’s preferences may have changed and they may have opted out of receiving communication before the Do Not Call list gets refreshed. OneTrust is merely conveying information received from the FTC and is not responsible for compiling the lists.",
        "operationId": "getDataSubjectProfileUsingGET",
        "parameters": [
          {
            "description": "Restrict information to only Data Subjects related to a collection point id. `collectionPointGuid` can be obtained using [GET /v1/collectionpoints](/onetrust/reference/getcollectionpointsusingget)",
            "in": "query",
            "name": "collectionPointGuid",
            "required": false,
            "example": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Restrict information to only Data Subjects related to a collection point name. `collectionPointName` can be obtained using [GET /v1/collectionpoints](/onetrust/reference/getcollectionpointsusingget)",
            "in": "query",
            "name": "collectionPointName",
            "required": false,
            "example": "Marketing Collection Point",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records with Data Element name. Note that it must be used in conjunction with dataElementValue. `dataElementName` can be obtained from Data Subject details page.",
            "in": "header",
            "name": "dataElementName",
            "required": false,
            "example": "Work Email",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records with Data Element value. Note that it must be used in conjunction with dataElementName. `dataElementValue` can be obtainer from Data Subject details page.",
            "in": "header",
            "name": "dataElementValue",
            "required": false,
            "example": "example@otprivacy.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Restrict information to one Data Subject",
            "in": "header",
            "name": "identifier",
            "required": false,
            "example": "example@otprivacy.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include effective status of Data Subject Profiles (true/false)",
            "in": "query",
            "name": "includeEffectiveStatus",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Verify if data subject phone numbers are listed as Do Not Call by the FCC.",
            "in": "query",
            "name": "isDNCInclude",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Include Geolocation parameters of the DataSubject (true/false)",
            "in": "query",
            "name": "includeGeolocation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Do not use the `page` parameter, use `requestContinuation`. The `requestContinuation` parameter returned in the response can be used on a subsequent API call to retrieve the next set of data subjects. For more information, see [Understanding & Implementing Pagination](https://developer.onetrust.com/onetrust/reference/understanding-implementing-pagination).",
            "in": "query",
            "name": "page",
            "required": false,
            "deprecated": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "description": "Specify optional properties, any of: `linkTokens` return linkTokens, `ignoreCount` will not return a full record count, `ignoreTopics` will exclude Topics from Purposes, `ignoreCustomPreferences` will exclude Custom Preferences from Purposes. This is the preferred option for a fast response on large datasets, `includeAllPreferences` will include for all Topics and CustomPreferenceOptions attached to Purposes a boolean value specifying whether the Topic/CustomPreferenceOption has been consented to or not, `includeNotices` will include the privacy notices the data subject has consented to in each profile, eg: properties=linkTokens,ignoreCustomPreferences,includeAllPreferences",
            "in": "query",
            "name": "properties",
            "required": false,
            "example": "ignoreCount,ignoreTopics",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Restrict information to only Data Subjects related to a purpose. `purposeGuid` can be obtained from [GET/v2/purposes](/onetrust/reference/getgroupedpurposesusingget)",
            "in": "query",
            "name": "purposeGuid",
            "required": false,
            "example": "cbac5669-1445-4520-ba15-b1993902b295",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Restrict information to only Data Subjects related to a Linked Identity Group ID. `linkedIdentityGroupId` can be obtained from [GET /v2/linkedidentitygroups](/onetrust/reference/getlinkedidentitygroupsusingget). Note that `linkedIdentityGroupId` query parameter and Data Subject `identifier` header parameter both cannot be used at the same time.",
            "in": "query",
            "name": "linkedIdentityGroupId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Restrict information to changes based on the last transaction date for a purpose. Returns only the purposes for Data Subject that have been updated. Formats accepted `yyyy-MM-dd` or `yyyy-MM-ddTHH:mm:ss`. Note that the since and updatedSince parameters cannot be used at the same time.",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50,
              "default": 20
            }
          },
          {
            "description": "Sort by date type,direction. For instance lastTransactionDate,asc or lastTransactionDate,desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records that were last updated before the specified date. Operates on the data subject last updated date, and returns all data for the data subjects that have changed. Formats accepted 'yyyy-MM-dd' or 'yyyy-MM-ddTHH:mm:ss'. Note that the toDate parameter can be used in conjunction with the updatedSince parameter OR the since parameter. The updatedSince and since parameters cannot be used at the same time.",
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records that were last updated after the specified date. Operates on the data subject last updated date, and returns all data for the data subjects that have changed. Formats accepted 'yyyy-MM-dd' or 'yyyy-MM-ddTHH:mm:ss'. Note that the since and updatedSince parameters cannot be used at the same time.",
            "in": "query",
            "name": "updatedSince",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "RequestContinuation token which should be used to navigate to the next page.",
            "in": "header",
            "name": "requestContinuation",
            "required": false,
            "example": "AAEAMzVmZTVjMjQtYzhhNC00MmJhLTljNDAtMTI5NDM3MTFkZjU3VKcI8Grg2lpaWIkAGi4WnSp5mk+F1lhLpTJgeeh75Kg00PBuhehKwI5tRyhSHODn2k+yePkZiADD8o1RljdrAhxdOr8YbU4u+jtAs4dTlI/zHfIrJOLF5jWC3ITHeVpB8aowTZc03/FZFYg556+kBBGNzI2NeOCeEZ9/JeWvpaNiCXJS9Q==",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceDataSubjectProfileDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "DataElements": [
                            {
                              "DoNotCall": true,
                              "Name": "Work Email",
                              "Value": "example@otprivacy.com"
                            }
                          ],
                          "Id": "1b1f53d3-dc40-4288-abf1-74a4a4c33510",
                          "Identifier": "example@otprivacy.com",
                          "Language": "en-us",
                          "LastUpdatedDate": "2020-01-12T16:11:25.479Z",
                          "LinkToken": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
                          "Notices": [
                            {
                              "CollectionPoint": {
                                "Id": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
                                "Name": "Marketing Collection Point",
                                "Version": 1
                              },
                              "Guid": "1439b150-ef4c-444c-a20e-44622c8ccaf3",
                              "Id": "05e30742-7e6c-4916-a5a1-7742a14ee984",
                              "Name": "Marketing Notice",
                              "PrivacyNoticeVersion": {
                                "Id": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
                                "Name": "Marketing Notice",
                                "Version": 1
                              },
                              "Purposes": [
                                {
                                  "Id": "cbac5669-1445-4520-ba15-b1993902b295",
                                  "Name": "Marketing Communications"
                                }
                              ],
                              "Type": "EMBEDDED",
                              "Url": "www.onetrust.com"
                            }
                          ],
                          "Purposes": [
                            {
                              "ConsentDate": "2020-01-07T13:18:23.123Z",
                              "CustomPreferences": [
                                {
                                  "Id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                                  "Name": "Email Frequency",
                                  "Options": [
                                    {
                                      "Id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                      "IsConsented": true,
                                      "Name": "Weekly"
                                    }
                                  ]
                                }
                              ],
                              "ExpiryDate": "2020-01-07T13:18:23.123Z",
                              "FirstTransactionDate": "2020-01-05T11:34:30.974Z",
                              "Id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                              "LastReceiptId": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                              "LastTransactionCollectionPointId": "urn:uuid:ac5bed9d-e87e-f148-1c54-b724147b4b3a",
                              "LastTransactionCollectionPointVersion": 65899101,
                              "LastTransactionDate": "2020-01-12T16:11:25.479Z",
                              "Name": "Marketing Communications",
                              "PurposeNote": {
                                "IsValidNote": true,
                                "NoteId": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
                                "NoteLanguage": "en-US",
                                "NoteText": "I did not sign up for this.",
                                "NoteType": "UNSUBSCRIBE_REASON"
                              },
                              "Status": "ACTIVE",
                              "Topics": [
                                {
                                  "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                                  "IsConsented": true,
                                  "Name": "Car Marketing"
                                }
                              ],
                              "TotalTransactionCount": 3,
                              "Version": 2,
                              "WithdrawalDate": "2020-01-12T16:11:25.479Z"
                            }
                          ]
                        }
                      ],
                      "empty": true,
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 20,
                        "paged": true,
                        "requestContinuation": "AAEAMzVmZTVjMjQtYzhhNC00MmJhLTljNDAtMTI5NDM3MTFkZjU3VKcI8Grg2lpaWIkAGi4WnSp5mk+F1lhLpTJgeeh75Kg00PBuhehKwI5tRyhSHODn2k+yePkZiADD8o1RljdrAhxdOr8YbU4u+jtAs4dTlI/zHfIrJOLF5jWC3ITHeVpB8aowTZc03/FZFYg556+kBBGNzI2NeOCeEZ9/JeWvpaNiCXJS9Q==",
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 20,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Data Subjects",
        "tags": [
          "Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/datasubjects/purposes": {
      "get": {
        "deprecated": true,
        "description": "Gets a paged list of Purposes for a Data Subject identifier. We strongly suggest using GET [/datasubjects/profiles](https://developer.onetrust.com/onetrust/reference/getdatasubjectprofileusingget) instead, as this endpoint has been deprecated.",
        "operationId": "getDataSubjectPurposesByIdentifierUsingGET",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectByPurposeInformation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Purposes for a Data Subject",
        "tags": [
          "Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/export-duplicate-datasubject/{mergeRequestId}": {
      "get": {
        "description": "Use this API to generate an export of duplicate data subjects. Once generated, the Duplicate Data Subjects export will be sent to the user specified in the request as an .xlsx file and can be downloaded from the OneTrust application.\n\n> 🗒 Things to Know\n> \n> - The [Create Scheduled Export](https://developer.onetrust.com/onetrust/reference/schedulemergerequestusingpost) API can be used to create scheduled exports of duplicate data subjects.\n> - The [Merge Duplicate Data Subjects](https://developer.onetrust.com/onetrust/reference/mergedatasubjectusingpost) API can be used if data subjects should be merged upon review of the export.",
        "operationId": "exportduplicatedatasubject",
        "parameters": [
          {
            "description": "The GUID of the merge request.",
            "in": "path",
            "name": "mergeRequestId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "User GUID can be found in the URL path when viewing user details within the tenant.",
            "in": "header",
            "name": "userGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Service Call Failed"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Generate Export of Duplicate Data Subjects",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/linktokens": {
      "get": {
        "description": "Use this API to retrieve a list of link tokens. The response will return link tokens along with the corresponding data subject ID, created date, and expiry date. By default, the response will return link token details sorted in ascending order of created date.",
        "operationId": "getLinkTokensUsingGET",
        "parameters": [
          {
            "description": "Identifier of the data subject to which the email link token will be retrieved.",
            "in": "header",
            "name": "identifier",
            "required": false,
            "example": [
              "404-867-5309",
              "gpburdell@onetrust.com",
              "1b1f53d3-dc40-4288-abf1-74a4a4c33510"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page number of the result (0..N).",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "Date from which the records should be returned. The format is yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "since",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date to which the records should be returned. The format is yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "until",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2000,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK\n\nLink tokens retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageLinkTokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Data Subject Tokens",
        "tags": [
          "Magic Link Tokens"
        ]
      }
    },
    "/api/consentmanager/v1/preferencecenters/{prefcenterId}/datasubjects/preferences": {
      "delete": {
        "description": "Use this API to withdraw a data subject's consent for all Purposes within a Preference Center.\n\n> 🗒 Things to Know\n> \n> - The Notification Opt-Out Purpose will be excluded when calling this API.\n",
        "operationId": "withdrawPreferencesApiUsingDELETE",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Preference Center UUID",
            "in": "path",
            "name": "prefcenterId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectPreferencesResponseDto"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Withdraw Data Subject's Consent for All Purposes in a Preference Center",
        "tags": [
          "Preference Centers"
        ]
      },
      "get": {
        "description": "Use this API to retrieve a data subject's preferences within a Preference Center. The response will include the list of Purposes that the data subject interacted with in the specified Preference Center along with their current status.\n",
        "operationId": "getDataSubjectPurposesByIdentifierUsingGET_1",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter).",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter).",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Preference Center UUID.",
            "in": "path",
            "name": "prefcenterId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK\n\nConsent statuses retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferenceCenterPurposesByIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "message": "Cannot build a DataSubject without an Identifier",
                      "timestamp": "2022-12-14 19:57:02.573293+00:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Data Subject's Preferences in a Preference Center",
        "tags": [
          "Preference Centers"
        ]
      },
      "put": {
        "description": "Use this API to update the data subject's preferences within a Preference Center.\n\n> 🗒 Things to Know\n> \n> - Pascal case is required for all parameters. For example, use `DsDataElements` instead of `dsDataElements`.\n",
        "operationId": "updatePreferencesForDataSubjectApiUsingPUT",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Preference Center UUID",
            "in": "path",
            "name": "prefcenterId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubjectPreferencesRequestDto"
              }
            }
          },
          "description": "Data Subject preferences to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectPreferencesResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Data Subject's Preferences in a Preference Center",
        "tags": [
          "Preference Centers"
        ]
      }
    },
    "/api/consentmanager/v1/preferencecenters/{prefcenterId}/preferences": {
      "get": {
        "description": "Use this API to retrieve the schema of a Preference Center. The response will include details about the Preference Center such as settings, languages, and Purposes.\n\n> 🗒 Things to Know\n> \n> - This API can be used for Original, Enhanced, and Multi Page Preference Centers.\n",
        "operationId": "getPreferenceCenterByIdUsingGET",
        "parameters": [
          {
            "description": "Preference Center UUID",
            "in": "path",
            "name": "prefcenterId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Draft or published preference center",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PUBLISHED",
                "DRAFT"
              ],
              "default": "PUBLISHED"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferenceCenterDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Preference Center Schema",
        "tags": [
          "Preference Centers"
        ]
      }
    },
    "/api/consentmanager/v1/purposes": {
      "get": {
        "deprecated": true,
        "description": "Gets a paged list of Purposes. We strongly suggest using GET /v2/purposes instead, as this endpoint has been deprecated.",
        "operationId": "getPurposesUsingGET",
        "parameters": [
          {
            "description": "Results page you want to retrieve (0..N) - e.g. 3",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagePurposeDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Purposes",
        "tags": [
          "Purposes"
        ]
      },
      "post": {
        "description": "Use this this API to create a new Purpose. The new Purpose will be created in **Draft** status and version **1**.\n> 🗒 Things to Know\n> \n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "createPurposeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurposeCreateDto"
              }
            }
          },
          "description": "Structure holding the values of the Purpose to be created",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeDetailsDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "ConsentLifeSpan": 7889238,
                      "CustomPreferences": [],
                      "Description": "Collect customer emails for marketing purposes",
                      "EnableGeolocation": false,
                      "ExpiryDateType": "LAST_TRANSACTION_DATE",
                      "ExternalReference": null,
                      "Id": "ee2d1da1-51bc-4762-9f73-934e9d608a2f",
                      "Label": "Marketing Communications",
                      "Languages": null,
                      "Organizations": [
                        "b7d17fc8-889f-472e-8c74-f1169821e7e7"
                      ],
                      "ParentPurposeId": "d5d06047-c1f6-4dad-810b-3051b5350cbd",
                      "PurposeType": "STANDARD",
                      "RetireOnDate": null,
                      "Status": "DRAFT",
                      "Topics": [],
                      "Version": 1,
                      "attributeValues": {},
                      "attributes": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create Purpose",
        "tags": [
          "Purposes"
        ]
      }
    },
    "/api/consentmanager/v1/purposes/{purposeGuid}": {
      "post": {
        "description": "Use this API to create a new version of an existing Purpose that is currently in **Active** status. A new version of the Purpose will be created in **Draft** status while the **Active** version of the Purpose will remain unchanged.\n\n> 🗒 Things to Know\n> \n> - Once the Purpose is in **Draft** status, the [Update Purpose](https://developer.onetrust.com/onetrust/reference/editpurposeusingput) API can be used to edit the Purpose. Changes will only be visible once the new version of the Purpose is published.\n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.",
        "operationId": "createNewPurposeVersionUsingPOST",
        "parameters": [
          {
            "description": "Unique identifier identifying a Purpose",
            "in": "path",
            "name": "purposeGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeDetailsDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create New Purpose Version",
        "tags": [
          "Purposes"
        ]
      },
      "put": {
        "description": "Use this API to update an existing Purpose. Before calling this API, ensure that the Purpose is in **Draft** status. If the Purpose is in **Active** status, use the [Create New Purpose Version](https://developer.onetrust.com/onetrust/reference/createnewpurposeversionusingpost) API to create a new version of the Purpose.\n> 🗒 Things to Know\n> \n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.",
        "operationId": "editPurposeUsingPUT",
        "parameters": [
          {
            "description": "The unique identifier of the Purpose to be edited",
            "in": "path",
            "name": "purposeGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurposeDto"
              }
            }
          },
          "description": "Structure holding the values of the Purpose to be edited",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeDetailsDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Purpose",
        "tags": [
          "Purposes"
        ]
      }
    },
    "/api/consentmanager/v1/purposes/{purposeId}/datasubjects": {
      "get": {
        "description": "Use this API to retrieve a list of data subjects by Purpose. The response will include details for each data subject such as the last transaction date, the transaction status for that Purpose, and Purpose Preferences they have interacted with.\n\n> 🗒 Things to Know\n> \n> - This API can be used as an alternative to the [Get List of Data Subjects](https://developer.onetrust.com/onetrust/reference/getdatasubjectprofileusingget) API when data subject records for a specific Purpose are required.\n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "getDataSubjectsForPurposesUsingGET",
        "parameters": [
          {
            "description": "Last Transaction Date filter (yyyy-MM-dd'T'HH:mm:ss)",
            "in": "query",
            "name": "lastTransactionDate",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N) - e.g. 3",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "Unique identifier of a purpose. PurposeId can be obtained using the [GET\n/v2/purposes](/onetrust/reference/getgroupedpurposesusingget) endpoint",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Transaction Status filter: `ACTIVE` / `PENDING` / `WITHDRAWN` / `EXPIRED`",
            "in": "query",
            "name": "transactionStatus",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag to include the custom preferences: `true` / `false`",
            "in": "query",
            "name": "includeCustomPreferences",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDataSubjectForPurposeInformation"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "CustomPreferences": [
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "6d04093a-cfb6-420f-99fb-8e9ba28afcb0",
                                  "Name": "Skype"
                                },
                                {
                                  "Id": "46962ae8-418a-45c6-9999-a47620b87d94",
                                  "Name": "Email"
                                },
                                {
                                  "Id": "b66ca2e5-a0bc-4808-9e9a-ebabd5bbd3b1",
                                  "Name": "Text"
                                }
                              ],
                              "Id": "18709b50-e407-4102-8764-f60739bbe0e9",
                              "Name": "Media option"
                            },
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "2c6df6e6-cec0-4238-80c2-10ebba05b99f",
                                  "Name": "Monthly"
                                }
                              ],
                              "Id": "ce122aa0-9328-4150-8031-93099b53fa9a",
                              "Name": "Frequency option"
                            }
                          ],
                          "DataSubjectId": "example@otprivacy.com",
                          "FirstTransactionDate": "2020-01-06T10:54:30.974Z",
                          "LastTransactionDate": "2020-01-12T12:42:12.842Z",
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            }
                          ]
                        },
                        {
                          "DataSubjectId": "example@otprivacy.com",
                          "FirstTransactionDate": "2020-01-06T10:54:30.974Z",
                          "LastTransactionDate": "2020-01-12T12:42:12.842Z",
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            },
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            }
                          ]
                        },
                        {
                          "CustomPreferences": [
                            {
                              "CustomPreferenceOptions": [
                                {
                                  "Id": "6d04093a-cfb6-420f-99fb-8e9ba28afcb0",
                                  "Name": "Skype"
                                }
                              ],
                              "Id": "18709b50-e407-4102-8764-f60739bbe0e9",
                              "Name": "Media option"
                            }
                          ],
                          "DataSubjectId": "example@otprivacy.com",
                          "FirstTransactionDate": "2020-01-06T10:54:30.974Z",
                          "LastTransactionDate": "2020-01-12T12:42:12.842Z",
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            }
                          ]
                        },
                        {
                          "CustomPreferences": [],
                          "DataSubjectId": "example@otprivacy.com",
                          "FirstTransactionDate": "2020-01-06T10:54:30.974Z",
                          "LastTransactionDate": "2020-01-12T12:42:12.842Z",
                          "Status": "ACTIVE",
                          "Topics": [
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            },
                            {
                              "Id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "Name": "Car Marketing"
                            }
                          ]
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": true,
                      "number": -58614016,
                      "numberOfElements": -43799158,
                      "pageable": {
                        "offset": -68674607,
                        "pageNumber": -17070611,
                        "pageSize": 96747595,
                        "paged": true,
                        "sort": {
                          "empty": true,
                          "sorted": true,
                          "unsorted": true
                        },
                        "unpaged": true
                      },
                      "size": -9220042,
                      "sort": {
                        "empty": false,
                        "sorted": true,
                        "unsorted": true
                      },
                      "totalElements": -3121241,
                      "totalPages": -36812849
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get List of Data Subjects by Purpose",
        "tags": [
          "Purposes"
        ]
      }
    },
    "/api/consentmanager/v1/purposes/{purposeId}/publish": {
      "put": {
        "description": "Use this API to publish a Purpose. Before calling this API, ensure that the Purpose is in **Draft** status. The Purpose will be published with version **1** and **Active** status.\n\n> 🗒 Things to Know\n> \n> - The [Update Purpose](https://developer.onetrust.com/onetrust/reference/editpurposeusingput) API can be used to edit an existing Purpose before publishing.\n> - Once the Purpose is published, the previous version of the Purpose will be set to **Retired** status.\n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "publishPurposeUsingPUT",
        "parameters": [
          {
            "description": "Unique identifier identifying a Purpose",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The Purpose's version",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeDetailsDto"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Publish Purpose",
        "tags": [
          "Purposes"
        ]
      }
    },
    "/api/consentmanager/v1/purposes/{purposeId}/retire": {
      "put": {
        "description": "Use this API to set the retirement date for a specific Purpose. \n\n> 🗒 Things to Know\n> \n> - If the `date` query parameter is left empty, the date will be set to one day in the future by default.\n> - Data subjects who gave consent to the specified Purpose will be automatically updated after Purpose expiration. A summary of details about this transaction will appear on the Purposes and Receipts tabs of the Data Subject details screen in the OneTrust application for each profile associated to the Purpose. For more information, see [Managing Data Subjects](https://my.onetrust.com/s/article/UUID-3d2d8d5e-e9d7-ac43-4ee1-818a4c4e8932) and [Viewing Consent Receipts & Transactions](https://my.onetrust.com/s/article/UUID-17b03e29-c3b5-c5dc-a172-b2a180f9a826).\n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "setRetirementUsingPUT",
        "parameters": [
          {
            "description": "Date when a Purpose will expire. Format YYYY-MM-DD",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique identifier identifying a Purpose",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PurposeDetailsDto"
                  },
                  "type": "array"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Retire Purpose",
        "tags": [
          "Purposes"
        ]
      }
    },
    "/api/consentmanager/v1/receipt-list": {
      "get": {
        "deprecated": true,
        "description": "> ❗️ End of Support Notification\n> \n> As of September 1, 2024, these APIs are now deprecated. Any customers leveraging these APIs are encouraged to migrate to the [Receipts V2 API](https://developer.onetrust.com/onetrust/reference/getreceiptlistdetailsusingpost). For more information, see [OneTrust API Sunsetting & Deprecation Guidelines](https://developer.onetrust.com/onetrust/reference/onetrust-api-sunsetting-deprecation-guidelines).\n\nUse this API to retrieve a list of consent receipts for a given data subject.\n",
        "operationId": "getReceiptListUsingGET",
        "parameters": [
          {
            "description": "Data Subject Identifier filter",
            "in": "header",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptListDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Receipts by Data Subject",
        "tags": [
          "Receipts"
        ],
        "x-onetrust": {
          "release-status": "Deprecated",
          "release-status-link": "https://developer.onetrust.com/onetrust/changelog/onetrust-20240910-released"
        }
      }
    },
    "/api/consentmanager/v1/receipts": {
      "get": {
        "deprecated": true,
        "description": "> ❗️ End of Support Notification\n> \n> As of September 1, 2024, these APIs are now deprecated. Any customers leveraging these APIs are encouraged to migrate to the [Receipts V2 API](https://developer.onetrust.com/onetrust/reference/getreceiptlistdetailsusingpost). For more information, see [OneTrust API Sunsetting & Deprecation Guidelines](https://developer.onetrust.com/onetrust/reference/onetrust-api-sunsetting-deprecation-guidelines).\n\nUse this API to retrieve a list of consent receipts for a given data subject along with details such as the associated Purposes, Purpose Preferences, and attributes. The response will also include relevant information about the latest Collection Point interactions and the current status of consent.\n",
        "operationId": "getReceiptListDetailsUsingGET",
        "parameters": [
          {
            "description": "Data Subject Identifier filter. `identifier` can be obtained using the [Get list of datasubjects](/onetrust/reference/getdatasubjectsusingget) endpoint",
            "in": "header",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Optional parameter. If value is true then API response will include Non Given transactions.",
            "in": "query",
            "name": "includeNotgiven",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceReceiptInformationDetailDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "attributes": {},
                          "collectionPointName": "OptOut New API",
                          "collectionPointType": "API",
                          "collectionPointUUID": "2e8ad3a4-26ee-422b-9654-264707bf4178",
                          "collectionPointVersion": 1,
                          "consentCreationDate": "2021-04-07T10:31:58.660705",
                          "customPayload": null,
                          "dataSubjectIdentifier": "interactionDatePref2@otprivacy.com",
                          "dataSubjectIdentifierHash": "866bb869d2d5f7e26ffb385bb4664fa8658d6fa8c335fca025615176d3ce11b2698571f00bb1b9c94f1704b491063f444cff0a9b149e871421fa22ca291ed389",
                          "doubleOptIn": false,
                          "id": "a633b097-c0c1-4254-b3bf-ad52a62dd224",
                          "interactionDate": "2019-04-25T14:30:00.132",
                          "isAnonymous": false,
                          "language": null,
                          "origin": null,
                          "otJwtVersion": 1,
                          "purposes": [
                            {
                              "attributes": null,
                              "consentLifeSpan": 0,
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "305c33ea-d662-4c54-a750-ea24b8dabb58",
                                      "isDefault": false,
                                      "label": "option1",
                                      "order": 0
                                    },
                                    {
                                      "id": "9d8ed1b9-b14d-4f7c-83b6-53e6754bd838",
                                      "isDefault": false,
                                      "label": "option2",
                                      "order": 0
                                    },
                                    {
                                      "id": "beedd682-e1e0-4544-87bf-e671025b59dd",
                                      "isDefault": false,
                                      "label": "option3",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "72e27fe8-7c9c-4491-a63c-6d8f6448626f",
                                  "languages": null,
                                  "name": "ButtonMultiChoiceCF"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "060953d0-3e5e-4a8b-8d30-bcb1fe551472",
                                      "isDefault": false,
                                      "label": "Audit 11",
                                      "order": 0
                                    },
                                    {
                                      "id": "8c79ff6f-601a-4b1c-b9ea-0447a2b9914b",
                                      "isDefault": false,
                                      "label": "Audit 33",
                                      "order": 0
                                    },
                                    {
                                      "id": "cae12d7e-781d-43c6-abc3-773b0fde897c",
                                      "isDefault": false,
                                      "label": "Audit 38",
                                      "order": 0
                                    },
                                    {
                                      "id": "29de1797-2b86-4913-a67e-136bd2ac8911",
                                      "isDefault": false,
                                      "label": "Audit 57",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "3ed97fff-cac3-43a4-9e29-725c87e1320e",
                                  "languages": null,
                                  "name": "Audit"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "cd3f5454-438f-496e-8089-1ee08af9eeb1",
                                      "isDefault": false,
                                      "label": "opp1",
                                      "order": 0
                                    },
                                    {
                                      "id": "0b8fd1a3-4deb-4ae2-8096-698811699be4",
                                      "isDefault": false,
                                      "label": "opp2",
                                      "order": 0
                                    },
                                    {
                                      "id": "3c821dd2-85e0-41e8-b671-d823f439cfec",
                                      "isDefault": false,
                                      "label": "opp3",
                                      "order": 0
                                    },
                                    {
                                      "id": "202dec40-7df0-4f4e-9a96-d465989270df",
                                      "isDefault": false,
                                      "label": "opp4",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "eba69fae-4d2c-4a79-bc22-f173bdbf0c7b",
                                  "languages": null,
                                  "name": "custom1"
                                },
                                {
                                  "customPreferenceOptions": [],
                                  "displayAs": null,
                                  "id": "a3bb3b31-3c87-4f9f-a18d-eb5cf7cc0962",
                                  "languages": null,
                                  "name": "qwerty"
                                }
                              ],
                              "description": "desc",
                              "externalReference": null,
                              "id": "ba3fb4c0-7180-45f5-a9a9-3bd15a5fbbb5",
                              "name": "  two1-v3",
                              "purposeNote": null,
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "1769a745-2706-41d6-8dfe-e012c100d705",
                                  "integrationKey": "--two1-v3_New-Topic",
                                  "languages": null,
                                  "name": "New Topic"
                                },
                                {
                                  "id": "456e96e1-b581-42e5-ac53-77d963a9f7f5",
                                  "integrationKey": "--two1-v3_New-Topic-2",
                                  "languages": null,
                                  "name": "New Topic 2"
                                }
                              ],
                              "transactionType": "CONFIRMED",
                              "version": 10
                            }
                          ],
                          "receiptJwt": "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENXVnQ1RHNjAvSXVodkpOVTNGTW0vdz09IiwiYWxnIjoiSFM1MTIifQ.eyJtb2MiOiJBUEkiLCJzdWIiOiJFbWFpbCIsIm5vdGVzIjpudWxsLCJzeW5jR3JvdXAiOm51bGwsImlzcyI6bnVsbCwibGFuZ3VhZ2UiOm51bGwsInByb2Nlc3NWZXJzaW9uIjoxLCJhdXRoZW50aWNhdGlvblJlcXVpcmVkIjpmYWxzZSwiZHluYW1pY0NvbGxlY3Rpb25Qb2ludCI6ZmFsc2UsInByb2Nlc3NJZCI6IjJlOGFkM2E0LTI2ZWUtNDIyYi05NjU0LTI2NDcwN2JmNDE3OCIsImRzRGF0YUVsZW1lbnRzIjpbXSwiZG91YmxlT3B0SW4iOmZhbHNlLCJjb25zZW50VHlwZSI6IkNPTkRJVElPTkFMVFJJR0dFUiIsImlhdCI6IjIwMjEtMDQtMDdUMTA6MzE6NTguNjU5NzA1MSIsImN1c3RvbVBheWxvYWQiOm51bGwsImp0aSI6ImE2MzNiMDk3LWMwYzEtNDI1NC1iM2JmLWFkNTJhNjJkZDIyNCIsInBvbGljeV91cmkiOm51bGwsImlkZW50aWZpZXIiOiJpKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiptIiwiYXR0cmlidXRlVmFsdWVzIjp7fSwidGNTdHJpbmdWMiI6bnVsbCwicmVjb25maXJtQWN0aXZlUHVycG9zZSI6ZmFsc2UsImFsbG93Tm90R2l2ZW5Db25zZW50cyI6ZmFsc2UsIm5vdGljZXMiOltdLCJpc0Fub255bW91cyI6ZmFsc2UsInB1cnBvc2VzIjpbeyJJZCI6ImJhM2ZiNGMwLTcxODAtNDVmNS1hOWE5LTNiZDE1YTVmYmJiNSIsIlZlcnNpb24iOjEwLCJQcmVmZXJlbmNlcyI6W3siVG9waWNJZCI6IjE3NjlhNzQ1LTI3MDYtNDFkNi04ZGZlLWUwMTJjMTAwZDcwNSIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH0seyJUb3BpY0lkIjoiNDU2ZTk2ZTEtYjU4MS00MmU1LWFjNTMtNzdkOTYzYTlmN2Y1IiwiVHJhbnNhY3Rpb25UeXBlIjpudWxsfV0sIkN1c3RvbVByZWZlcmVuY2VzIjpbeyJJZCI6IjcyZTI3ZmU4LTdjOWMtNDQ5MS1hNjNjLTZkOGY2NDQ4NjI2ZiIsIk9wdGlvbnMiOlsiMzA1YzMzZWEtZDY2Mi00YzU0LWE3NTAtZWEyNGI4ZGFiYjU4IiwiOWQ4ZWQxYjktYjE0ZC00ZjdjLTgzYjYtNTNlNjc1NGJkODM4IiwiYmVlZGQ2ODItZTFlMC00NTQ0LTg3YmYtZTY3MTAyNWI1OWRkIl0sIkNob2ljZXMiOm51bGx9LHsiSWQiOiIzZWQ5N2ZmZi1jYWMzLTQzYTQtOWUyOS03MjVjODdlMTMyMGUiLCJPcHRpb25zIjpbIjA2MDk1M2QwLTNlNWUtNGE4Yi04ZDMwLWJjYjFmZTU1MTQ3MiIsIjhjNzlmZjZmLTYwMWEtNGIxYy1iOWVhLTA0NDdhMmI5OTE0YiIsImNhZTEyZDdlLTc4MWQtNDNjNi1hYmMzLTc3M2IwZmRlODk3YyIsIjI5ZGUxNzk3LTJiODYtNDkxMy1hNjdlLTEzNmJkMmFjODkxMSJdLCJDaG9pY2VzIjpudWxsfSx7IklkIjoiZWJhNjlmYWUtNGQyYy00YTc5LWJjMjItZjE3M2JkYmYwYzdiIiwiT3B0aW9ucyI6WyJjZDNmNTQ1NC00MzhmLTQ5NmUtODA4OS0xZWUwOGFmOWVlYjEiLCIwYjhmZDFhMy00ZGViLTRhZTItODA5Ni02OTg4MTE2OTliZTQiLCIzYzgyMWRkMi04NWUwLTQxZTgtYjY3MS1kODIzZjQzOWNmZWMiLCIyMDJkZWM0MC03ZGYwLTRmNGUtOWE5Ni1kNDY1OTg5MjcwZGYiXSwiQ2hvaWNlcyI6bnVsbH0seyJJZCI6ImEzYmIzYjMxLTNjODctNGY5Zi1hMThkLWViNWNmN2NjMDk2MiIsIk9wdGlvbnMiOltdLCJDaG9pY2VzIjpudWxsfV0sIlRyYW5zYWN0aW9uVHlwZSI6IkNPTkZJUk1FRCIsIlB1cnBvc2VOb3RlIjpudWxsfV0sInRlbmFudElkIjoiN2MxY2EyOGItMGI1Yi00MjJhLWJjNDAtZDM2YzI2MmE1MTYwIiwib3RKd3RWZXJzaW9uIjoxfQ.bt1bM5polAX_R-WPpXjrPZldydIlokNT_w3ofP1tKkEU_IOKYn0iiiuD1ncDAKmRBqrkNZJhgHzJeHydFFFjoQ",
                          "test": true
                        },
                        {
                          "attributes": {},
                          "collectionPointName": "OptOut New API",
                          "collectionPointType": "API",
                          "collectionPointUUID": "2e8ad3a4-26ee-422b-9654-264707bf4178",
                          "collectionPointVersion": 1,
                          "consentCreationDate": "2021-04-07T10:30:06.0818451",
                          "customPayload": null,
                          "dataSubjectIdentifier": "interactionDatePref2@otprivacy.com",
                          "dataSubjectIdentifierHash": "866bb869d2d5f7e26ffb385bb4664fa8658d6fa8c335fca025615176d3ce11b2698571f00bb1b9c94f1704b491063f444cff0a9b149e871421fa22ca291ed389",
                          "doubleOptIn": false,
                          "id": "b76c4b91-9553-4fa6-ac93-06c7a9bcda29",
                          "interactionDate": "2019-04-15T14:30:00.132",
                          "isAnonymous": false,
                          "language": null,
                          "origin": null,
                          "otJwtVersion": 1,
                          "purposes": [
                            {
                              "attributes": null,
                              "consentLifeSpan": 0,
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "305c33ea-d662-4c54-a750-ea24b8dabb58",
                                      "isDefault": false,
                                      "label": "option1",
                                      "order": 0
                                    },
                                    {
                                      "id": "9d8ed1b9-b14d-4f7c-83b6-53e6754bd838",
                                      "isDefault": false,
                                      "label": "option2",
                                      "order": 0
                                    },
                                    {
                                      "id": "beedd682-e1e0-4544-87bf-e671025b59dd",
                                      "isDefault": false,
                                      "label": "option3",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "72e27fe8-7c9c-4491-a63c-6d8f6448626f",
                                  "languages": null,
                                  "name": "ButtonMultiChoiceCF"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "060953d0-3e5e-4a8b-8d30-bcb1fe551472",
                                      "isDefault": false,
                                      "label": "Audit 11",
                                      "order": 0
                                    },
                                    {
                                      "id": "8c79ff6f-601a-4b1c-b9ea-0447a2b9914b",
                                      "isDefault": false,
                                      "label": "Audit 33",
                                      "order": 0
                                    },
                                    {
                                      "id": "cae12d7e-781d-43c6-abc3-773b0fde897c",
                                      "isDefault": false,
                                      "label": "Audit 38",
                                      "order": 0
                                    },
                                    {
                                      "id": "29de1797-2b86-4913-a67e-136bd2ac8911",
                                      "isDefault": false,
                                      "label": "Audit 57",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "3ed97fff-cac3-43a4-9e29-725c87e1320e",
                                  "languages": null,
                                  "name": "Audit"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "cd3f5454-438f-496e-8089-1ee08af9eeb1",
                                      "isDefault": false,
                                      "label": "opp1",
                                      "order": 0
                                    },
                                    {
                                      "id": "0b8fd1a3-4deb-4ae2-8096-698811699be4",
                                      "isDefault": false,
                                      "label": "opp2",
                                      "order": 0
                                    },
                                    {
                                      "id": "3c821dd2-85e0-41e8-b671-d823f439cfec",
                                      "isDefault": false,
                                      "label": "opp3",
                                      "order": 0
                                    },
                                    {
                                      "id": "202dec40-7df0-4f4e-9a96-d465989270df",
                                      "isDefault": false,
                                      "label": "opp4",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "eba69fae-4d2c-4a79-bc22-f173bdbf0c7b",
                                  "languages": null,
                                  "name": "custom1"
                                },
                                {
                                  "customPreferenceOptions": [],
                                  "displayAs": null,
                                  "id": "a3bb3b31-3c87-4f9f-a18d-eb5cf7cc0962",
                                  "languages": null,
                                  "name": "qwerty"
                                }
                              ],
                              "description": "desc",
                              "externalReference": null,
                              "id": "ba3fb4c0-7180-45f5-a9a9-3bd15a5fbbb5",
                              "name": "  two1-v3",
                              "purposeNote": null,
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "1769a745-2706-41d6-8dfe-e012c100d705",
                                  "integrationKey": "--two1-v3_New-Topic",
                                  "languages": null,
                                  "name": "New Topic"
                                },
                                {
                                  "id": "456e96e1-b581-42e5-ac53-77d963a9f7f5",
                                  "integrationKey": "--two1-v3_New-Topic-2",
                                  "languages": null,
                                  "name": "New Topic 2"
                                },
                                {
                                  "id": "91049939-b86a-4f1d-851b-b8f554c902b3",
                                  "integrationKey": "--two1-v3_Topic-3",
                                  "languages": null,
                                  "name": "Topic 3"
                                }
                              ],
                              "transactionType": "CONFIRMED",
                              "version": 10
                            }
                          ],
                          "receiptJwt": "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENXVnQ1RHNjAvSXVodkpOVTNGTW0vdz09IiwiYWxnIjoiSFM1MTIifQ.eyJtb2MiOiJBUEkiLCJzdWIiOiJFbWFpbCIsIm5vdGVzIjpudWxsLCJzeW5jR3JvdXAiOm51bGwsImlzcyI6bnVsbCwibGFuZ3VhZ2UiOm51bGwsInByb2Nlc3NWZXJzaW9uIjoxLCJhdXRoZW50aWNhdGlvblJlcXVpcmVkIjpmYWxzZSwiZHluYW1pY0NvbGxlY3Rpb25Qb2ludCI6ZmFsc2UsInByb2Nlc3NJZCI6IjJlOGFkM2E0LTI2ZWUtNDIyYi05NjU0LTI2NDcwN2JmNDE3OCIsImRzRGF0YUVsZW1lbnRzIjpbXSwiZG91YmxlT3B0SW4iOmZhbHNlLCJjb25zZW50VHlwZSI6IkNPTkRJVElPTkFMVFJJR0dFUiIsImlhdCI6IjIwMjEtMDQtMDdUMTA6MzA6MDYuMDc5ODQ5MiIsImN1c3RvbVBheWxvYWQiOm51bGwsImp0aSI6ImI3NmM0YjkxLTk1NTMtNGZhNi1hYzkzLTA2YzdhOWJjZGEyOSIsInBvbGljeV91cmkiOm51bGwsImlkZW50aWZpZXIiOiJpKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiptIiwiYXR0cmlidXRlVmFsdWVzIjp7fSwidGNTdHJpbmdWMiI6bnVsbCwicmVjb25maXJtQWN0aXZlUHVycG9zZSI6ZmFsc2UsImFsbG93Tm90R2l2ZW5Db25zZW50cyI6ZmFsc2UsIm5vdGljZXMiOltdLCJpc0Fub255bW91cyI6ZmFsc2UsInB1cnBvc2VzIjpbeyJJZCI6ImJhM2ZiNGMwLTcxODAtNDVmNS1hOWE5LTNiZDE1YTVmYmJiNSIsIlZlcnNpb24iOjEwLCJQcmVmZXJlbmNlcyI6W3siVG9waWNJZCI6IjE3NjlhNzQ1LTI3MDYtNDFkNi04ZGZlLWUwMTJjMTAwZDcwNSIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH0seyJUb3BpY0lkIjoiNDU2ZTk2ZTEtYjU4MS00MmU1LWFjNTMtNzdkOTYzYTlmN2Y1IiwiVHJhbnNhY3Rpb25UeXBlIjpudWxsfSx7IlRvcGljSWQiOiI5MTA0OTkzOS1iODZhLTRmMWQtODUxYi1iOGY1NTRjOTAyYjMiLCJUcmFuc2FjdGlvblR5cGUiOm51bGx9XSwiQ3VzdG9tUHJlZmVyZW5jZXMiOlt7IklkIjoiNzJlMjdmZTgtN2M5Yy00NDkxLWE2M2MtNmQ4ZjY0NDg2MjZmIiwiT3B0aW9ucyI6WyIzMDVjMzNlYS1kNjYyLTRjNTQtYTc1MC1lYTI0YjhkYWJiNTgiLCI5ZDhlZDFiOS1iMTRkLTRmN2MtODNiNi01M2U2NzU0YmQ4MzgiLCJiZWVkZDY4Mi1lMWUwLTQ1NDQtODdiZi1lNjcxMDI1YjU5ZGQiXSwiQ2hvaWNlcyI6bnVsbH0seyJJZCI6IjNlZDk3ZmZmLWNhYzMtNDNhNC05ZTI5LTcyNWM4N2UxMzIwZSIsIk9wdGlvbnMiOlsiMDYwOTUzZDAtM2U1ZS00YThiLThkMzAtYmNiMWZlNTUxNDcyIiwiOGM3OWZmNmYtNjAxYS00YjFjLWI5ZWEtMDQ0N2EyYjk5MTRiIiwiY2FlMTJkN2UtNzgxZC00M2M2LWFiYzMtNzczYjBmZGU4OTdjIiwiMjlkZTE3OTctMmI4Ni00OTEzLWE2N2UtMTM2YmQyYWM4OTExIl0sIkNob2ljZXMiOm51bGx9LHsiSWQiOiJlYmE2OWZhZS00ZDJjLTRhNzktYmMyMi1mMTczYmRiZjBjN2IiLCJPcHRpb25zIjpbImNkM2Y1NDU0LTQzOGYtNDk2ZS04MDg5LTFlZTA4YWY5ZWViMSIsIjBiOGZkMWEzLTRkZWItNGFlMi04MDk2LTY5ODgxMTY5OWJlNCIsIjNjODIxZGQyLTg1ZTAtNDFlOC1iNjcxLWQ4MjNmNDM5Y2ZlYyIsIjIwMmRlYzQwLTdkZjAtNGY0ZS05YTk2LWQ0NjU5ODkyNzBkZiJdLCJDaG9pY2VzIjpudWxsfSx7IklkIjoiYTNiYjNiMzEtM2M4Ny00ZjlmLWExOGQtZWI1Y2Y3Y2MwOTYyIiwiT3B0aW9ucyI6W10sIkNob2ljZXMiOm51bGx9XSwiVHJhbnNhY3Rpb25UeXBlIjoiQ09ORklSTUVEIiwiUHVycG9zZU5vdGUiOm51bGx9XSwidGVuYW50SWQiOiI3YzFjYTI4Yi0wYjViLTQyMmEtYmM0MC1kMzZjMjYyYTUxNjAiLCJvdEp3dFZlcnNpb24iOjF9.U9I12n2WUmJiwahSrUbfae9F-nZhdccLQsU9qpvgpxYGw9JrDT0KpFOOisey3jE7rcCbND2YFOv0rrW-3UfCGA",
                          "test": true
                        },
                        {
                          "attributes": {},
                          "collectionPointName": "OptOut New API",
                          "collectionPointType": "API",
                          "collectionPointUUID": "2e8ad3a4-26ee-422b-9654-264707bf4178",
                          "collectionPointVersion": 1,
                          "consentCreationDate": "2021-04-07T10:20:15.560082",
                          "customPayload": null,
                          "dataSubjectIdentifier": "interactionDatePref2@otprivacy.com",
                          "dataSubjectIdentifierHash": "866bb869d2d5f7e26ffb385bb4664fa8658d6fa8c335fca025615176d3ce11b2698571f00bb1b9c94f1704b491063f444cff0a9b149e871421fa22ca291ed389",
                          "doubleOptIn": false,
                          "id": "c60c8e99-a8bb-4de4-8ac2-0d2cdd135e77",
                          "interactionDate": "2019-04-02T04:30:00.132",
                          "isAnonymous": false,
                          "language": null,
                          "origin": null,
                          "otJwtVersion": 1,
                          "purposes": [
                            {
                              "attributes": null,
                              "consentLifeSpan": 0,
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "305c33ea-d662-4c54-a750-ea24b8dabb58",
                                      "isDefault": false,
                                      "label": "option1",
                                      "order": 0
                                    },
                                    {
                                      "id": "9d8ed1b9-b14d-4f7c-83b6-53e6754bd838",
                                      "isDefault": false,
                                      "label": "option2",
                                      "order": 0
                                    },
                                    {
                                      "id": "beedd682-e1e0-4544-87bf-e671025b59dd",
                                      "isDefault": false,
                                      "label": "option3",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "72e27fe8-7c9c-4491-a63c-6d8f6448626f",
                                  "languages": null,
                                  "name": "ButtonMultiChoiceCF"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "060953d0-3e5e-4a8b-8d30-bcb1fe551472",
                                      "isDefault": false,
                                      "label": "Audit 11",
                                      "order": 0
                                    },
                                    {
                                      "id": "8c79ff6f-601a-4b1c-b9ea-0447a2b9914b",
                                      "isDefault": false,
                                      "label": "Audit 33",
                                      "order": 0
                                    },
                                    {
                                      "id": "cae12d7e-781d-43c6-abc3-773b0fde897c",
                                      "isDefault": false,
                                      "label": "Audit 38",
                                      "order": 0
                                    },
                                    {
                                      "id": "29de1797-2b86-4913-a67e-136bd2ac8911",
                                      "isDefault": false,
                                      "label": "Audit 57",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "3ed97fff-cac3-43a4-9e29-725c87e1320e",
                                  "languages": null,
                                  "name": "Audit"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "cd3f5454-438f-496e-8089-1ee08af9eeb1",
                                      "isDefault": false,
                                      "label": "opp1",
                                      "order": 0
                                    },
                                    {
                                      "id": "0b8fd1a3-4deb-4ae2-8096-698811699be4",
                                      "isDefault": false,
                                      "label": "opp2",
                                      "order": 0
                                    },
                                    {
                                      "id": "3c821dd2-85e0-41e8-b671-d823f439cfec",
                                      "isDefault": false,
                                      "label": "opp3",
                                      "order": 0
                                    },
                                    {
                                      "id": "202dec40-7df0-4f4e-9a96-d465989270df",
                                      "isDefault": false,
                                      "label": "opp4",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "eba69fae-4d2c-4a79-bc22-f173bdbf0c7b",
                                  "languages": null,
                                  "name": "custom1"
                                },
                                {
                                  "customPreferenceOptions": [],
                                  "displayAs": null,
                                  "id": "a3bb3b31-3c87-4f9f-a18d-eb5cf7cc0962",
                                  "languages": null,
                                  "name": "qwerty"
                                }
                              ],
                              "description": "desc",
                              "externalReference": null,
                              "id": "ba3fb4c0-7180-45f5-a9a9-3bd15a5fbbb5",
                              "name": "  two1-v3",
                              "purposeNote": null,
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "1769a745-2706-41d6-8dfe-e012c100d705",
                                  "integrationKey": "--two1-v3_New-Topic",
                                  "languages": null,
                                  "name": "New Topic"
                                },
                                {
                                  "id": "456e96e1-b581-42e5-ac53-77d963a9f7f5",
                                  "integrationKey": "--two1-v3_New-Topic-2",
                                  "languages": null,
                                  "name": "New Topic 2"
                                },
                                {
                                  "id": "91049939-b86a-4f1d-851b-b8f554c902b3",
                                  "integrationKey": "--two1-v3_Topic-3",
                                  "languages": null,
                                  "name": "Topic 3"
                                },
                                {
                                  "id": "d4ae93c4-fafd-493a-af62-a78696cdfe90",
                                  "integrationKey": "--two1-v3_Topic-5",
                                  "languages": null,
                                  "name": "Topic 5"
                                }
                              ],
                              "transactionType": "CONFIRMED",
                              "version": 10
                            }
                          ],
                          "receiptJwt": "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENXVnQ1RHNjAvSXVodkpOVTNGTW0vdz09IiwiYWxnIjoiSFM1MTIifQ.eyJtb2MiOiJBUEkiLCJzdWIiOiJFbWFpbCIsIm5vdGVzIjpudWxsLCJzeW5jR3JvdXAiOm51bGwsImlzcyI6bnVsbCwibGFuZ3VhZ2UiOm51bGwsInByb2Nlc3NWZXJzaW9uIjoxLCJhdXRoZW50aWNhdGlvblJlcXVpcmVkIjpmYWxzZSwiZHluYW1pY0NvbGxlY3Rpb25Qb2ludCI6ZmFsc2UsInByb2Nlc3NJZCI6IjJlOGFkM2E0LTI2ZWUtNDIyYi05NjU0LTI2NDcwN2JmNDE3OCIsImRzRGF0YUVsZW1lbnRzIjpbXSwiZG91YmxlT3B0SW4iOmZhbHNlLCJjb25zZW50VHlwZSI6IkNPTkRJVElPTkFMVFJJR0dFUiIsImlhdCI6IjIwMjEtMDQtMDdUMTA6MjA6MTUuNTUzMDkxOCIsImN1c3RvbVBheWxvYWQiOm51bGwsImp0aSI6ImM2MGM4ZTk5LWE4YmItNGRlNC04YWMyLTBkMmNkZDEzNWU3NyIsInBvbGljeV91cmkiOm51bGwsImlkZW50aWZpZXIiOiJpKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiptIiwiYXR0cmlidXRlVmFsdWVzIjp7fSwidGNTdHJpbmdWMiI6bnVsbCwicmVjb25maXJtQWN0aXZlUHVycG9zZSI6ZmFsc2UsImFsbG93Tm90R2l2ZW5Db25zZW50cyI6ZmFsc2UsIm5vdGljZXMiOltdLCJpc0Fub255bW91cyI6ZmFsc2UsInB1cnBvc2VzIjpbeyJJZCI6ImJhM2ZiNGMwLTcxODAtNDVmNS1hOWE5LTNiZDE1YTVmYmJiNSIsIlZlcnNpb24iOjEwLCJQcmVmZXJlbmNlcyI6W3siVG9waWNJZCI6IjE3NjlhNzQ1LTI3MDYtNDFkNi04ZGZlLWUwMTJjMTAwZDcwNSIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH0seyJUb3BpY0lkIjoiNDU2ZTk2ZTEtYjU4MS00MmU1LWFjNTMtNzdkOTYzYTlmN2Y1IiwiVHJhbnNhY3Rpb25UeXBlIjpudWxsfSx7IlRvcGljSWQiOiI5MTA0OTkzOS1iODZhLTRmMWQtODUxYi1iOGY1NTRjOTAyYjMiLCJUcmFuc2FjdGlvblR5cGUiOm51bGx9LHsiVG9waWNJZCI6ImQ0YWU5M2M0LWZhZmQtNDkzYS1hZjYyLWE3ODY5NmNkZmU5MCIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH1dLCJDdXN0b21QcmVmZXJlbmNlcyI6W3siSWQiOiI3MmUyN2ZlOC03YzljLTQ0OTEtYTYzYy02ZDhmNjQ0ODYyNmYiLCJPcHRpb25zIjpbIjMwNWMzM2VhLWQ2NjItNGM1NC1hNzUwLWVhMjRiOGRhYmI1OCIsIjlkOGVkMWI5LWIxNGQtNGY3Yy04M2I2LTUzZTY3NTRiZDgzOCIsImJlZWRkNjgyLWUxZTAtNDU0NC04N2JmLWU2NzEwMjViNTlkZCJdLCJDaG9pY2VzIjpudWxsfSx7IklkIjoiM2VkOTdmZmYtY2FjMy00M2E0LTllMjktNzI1Yzg3ZTEzMjBlIiwiT3B0aW9ucyI6WyIwNjA5NTNkMC0zZTVlLTRhOGItOGQzMC1iY2IxZmU1NTE0NzIiLCI4Yzc5ZmY2Zi02MDFhLTRiMWMtYjllYS0wNDQ3YTJiOTkxNGIiLCJjYWUxMmQ3ZS03ODFkLTQzYzYtYWJjMy03NzNiMGZkZTg5N2MiLCIyOWRlMTc5Ny0yYjg2LTQ5MTMtYTY3ZS0xMzZiZDJhYzg5MTEiXSwiQ2hvaWNlcyI6bnVsbH0seyJJZCI6ImViYTY5ZmFlLTRkMmMtNGE3OS1iYzIyLWYxNzNiZGJmMGM3YiIsIk9wdGlvbnMiOlsiY2QzZjU0NTQtNDM4Zi00OTZlLTgwODktMWVlMDhhZjllZWIxIiwiMGI4ZmQxYTMtNGRlYi00YWUyLTgwOTYtNjk4ODExNjk5YmU0IiwiM2M4MjFkZDItODVlMC00MWU4LWI2NzEtZDgyM2Y0MzljZmVjIiwiMjAyZGVjNDAtN2RmMC00ZjRlLTlhOTYtZDQ2NTk4OTI3MGRmIl0sIkNob2ljZXMiOm51bGx9LHsiSWQiOiJhM2JiM2IzMS0zYzg3LTRmOWYtYTE4ZC1lYjVjZjdjYzA5NjIiLCJPcHRpb25zIjpbXSwiQ2hvaWNlcyI6bnVsbH1dLCJUcmFuc2FjdGlvblR5cGUiOiJDT05GSVJNRUQiLCJQdXJwb3NlTm90ZSI6bnVsbH1dLCJ0ZW5hbnRJZCI6IjdjMWNhMjhiLTBiNWItNDIyYS1iYzQwLWQzNmMyNjJhNTE2MCIsIm90Snd0VmVyc2lvbiI6MX0.Jez_ELhLyso1P0He123L2_BhlxBouVrawVI0oequJYmfg9IDM0c0wk5s4OfMMoOqdcwkH7FJGqdYTBMopfqSDQ",
                          "test": true
                        },
                        {
                          "attributes": {},
                          "collectionPointName": "OptOut New API",
                          "collectionPointType": "API",
                          "collectionPointUUID": "2e8ad3a4-26ee-422b-9654-264707bf4178",
                          "collectionPointVersion": 1,
                          "consentCreationDate": "2021-04-07T10:24:15.1696629",
                          "customPayload": null,
                          "dataSubjectIdentifier": "interactionDatePref2@otprivacy.com",
                          "dataSubjectIdentifierHash": "866bb869d2d5f7e26ffb385bb4664fa8658d6fa8c335fca025615176d3ce11b2698571f00bb1b9c94f1704b491063f444cff0a9b149e871421fa22ca291ed389",
                          "doubleOptIn": false,
                          "id": "dcbbc055-b26d-4197-b240-808b4d8cfb05",
                          "interactionDate": "2019-04-02T04:30:00.132",
                          "isAnonymous": false,
                          "language": null,
                          "origin": null,
                          "otJwtVersion": 1,
                          "purposes": [
                            {
                              "attributes": null,
                              "consentLifeSpan": 0,
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "305c33ea-d662-4c54-a750-ea24b8dabb58",
                                      "isDefault": false,
                                      "label": "option1",
                                      "order": 0
                                    },
                                    {
                                      "id": "9d8ed1b9-b14d-4f7c-83b6-53e6754bd838",
                                      "isDefault": false,
                                      "label": "option2",
                                      "order": 0
                                    },
                                    {
                                      "id": "beedd682-e1e0-4544-87bf-e671025b59dd",
                                      "isDefault": false,
                                      "label": "option3",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "72e27fe8-7c9c-4491-a63c-6d8f6448626f",
                                  "languages": null,
                                  "name": "ButtonMultiChoiceCF"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "060953d0-3e5e-4a8b-8d30-bcb1fe551472",
                                      "isDefault": false,
                                      "label": "Audit 11",
                                      "order": 0
                                    },
                                    {
                                      "id": "8c79ff6f-601a-4b1c-b9ea-0447a2b9914b",
                                      "isDefault": false,
                                      "label": "Audit 33",
                                      "order": 0
                                    },
                                    {
                                      "id": "cae12d7e-781d-43c6-abc3-773b0fde897c",
                                      "isDefault": false,
                                      "label": "Audit 38",
                                      "order": 0
                                    },
                                    {
                                      "id": "29de1797-2b86-4913-a67e-136bd2ac8911",
                                      "isDefault": false,
                                      "label": "Audit 57",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "3ed97fff-cac3-43a4-9e29-725c87e1320e",
                                  "languages": null,
                                  "name": "Audit"
                                },
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "0b8fd1a3-4deb-4ae2-8096-698811699be4",
                                      "isDefault": false,
                                      "label": "opp2",
                                      "order": 0
                                    },
                                    {
                                      "id": "3c821dd2-85e0-41e8-b671-d823f439cfec",
                                      "isDefault": false,
                                      "label": "opp3",
                                      "order": 0
                                    },
                                    {
                                      "id": "202dec40-7df0-4f4e-9a96-d465989270df",
                                      "isDefault": false,
                                      "label": "opp4",
                                      "order": 0
                                    }
                                  ],
                                  "displayAs": null,
                                  "id": "eba69fae-4d2c-4a79-bc22-f173bdbf0c7b",
                                  "languages": null,
                                  "name": "custom1"
                                },
                                {
                                  "customPreferenceOptions": [],
                                  "displayAs": null,
                                  "id": "a3bb3b31-3c87-4f9f-a18d-eb5cf7cc0962",
                                  "languages": null,
                                  "name": "qwerty"
                                }
                              ],
                              "description": "desc",
                              "externalReference": null,
                              "id": "ba3fb4c0-7180-45f5-a9a9-3bd15a5fbbb5",
                              "name": "  two1-v3",
                              "purposeNote": null,
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "1769a745-2706-41d6-8dfe-e012c100d705",
                                  "integrationKey": "--two1-v3_New-Topic",
                                  "languages": null,
                                  "name": "New Topic"
                                },
                                {
                                  "id": "456e96e1-b581-42e5-ac53-77d963a9f7f5",
                                  "integrationKey": "--two1-v3_New-Topic-2",
                                  "languages": null,
                                  "name": "New Topic 2"
                                },
                                {
                                  "id": "91049939-b86a-4f1d-851b-b8f554c902b3",
                                  "integrationKey": "--two1-v3_Topic-3",
                                  "languages": null,
                                  "name": "Topic 3"
                                },
                                {
                                  "id": "d4ae93c4-fafd-493a-af62-a78696cdfe90",
                                  "integrationKey": "--two1-v3_Topic-5",
                                  "languages": null,
                                  "name": "Topic 5"
                                }
                              ],
                              "transactionType": "CONFIRMED",
                              "version": 10
                            }
                          ],
                          "receiptJwt": "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENXVnQ1RHNjAvSXVodkpOVTNGTW0vdz09IiwiYWxnIjoiSFM1MTIifQ.eyJtb2MiOiJBUEkiLCJzdWIiOiJFbWFpbCIsIm5vdGVzIjpudWxsLCJzeW5jR3JvdXAiOm51bGwsImlzcyI6bnVsbCwibGFuZ3VhZ2UiOm51bGwsInByb2Nlc3NWZXJzaW9uIjoxLCJhdXRoZW50aWNhdGlvblJlcXVpcmVkIjpmYWxzZSwiZHluYW1pY0NvbGxlY3Rpb25Qb2ludCI6ZmFsc2UsInByb2Nlc3NJZCI6IjJlOGFkM2E0LTI2ZWUtNDIyYi05NjU0LTI2NDcwN2JmNDE3OCIsImRzRGF0YUVsZW1lbnRzIjpbXSwiZG91YmxlT3B0SW4iOmZhbHNlLCJjb25zZW50VHlwZSI6IkNPTkRJVElPTkFMVFJJR0dFUiIsImlhdCI6IjIwMjEtMDQtMDdUMTA6MjQ6MTUuMTY2NjUxMiIsImN1c3RvbVBheWxvYWQiOm51bGwsImp0aSI6ImRjYmJjMDU1LWIyNmQtNDE5Ny1iMjQwLTgwOGI0ZDhjZmIwNSIsInBvbGljeV91cmkiOm51bGwsImlkZW50aWZpZXIiOiJpKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiptIiwiYXR0cmlidXRlVmFsdWVzIjp7fSwidGNTdHJpbmdWMiI6bnVsbCwicmVjb25maXJtQWN0aXZlUHVycG9zZSI6ZmFsc2UsImFsbG93Tm90R2l2ZW5Db25zZW50cyI6ZmFsc2UsIm5vdGljZXMiOltdLCJpc0Fub255bW91cyI6ZmFsc2UsInB1cnBvc2VzIjpbeyJJZCI6ImJhM2ZiNGMwLTcxODAtNDVmNS1hOWE5LTNiZDE1YTVmYmJiNSIsIlZlcnNpb24iOjEwLCJQcmVmZXJlbmNlcyI6W3siVG9waWNJZCI6IjE3NjlhNzQ1LTI3MDYtNDFkNi04ZGZlLWUwMTJjMTAwZDcwNSIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH0seyJUb3BpY0lkIjoiNDU2ZTk2ZTEtYjU4MS00MmU1LWFjNTMtNzdkOTYzYTlmN2Y1IiwiVHJhbnNhY3Rpb25UeXBlIjpudWxsfSx7IlRvcGljSWQiOiI5MTA0OTkzOS1iODZhLTRmMWQtODUxYi1iOGY1NTRjOTAyYjMiLCJUcmFuc2FjdGlvblR5cGUiOm51bGx9LHsiVG9waWNJZCI6ImQ0YWU5M2M0LWZhZmQtNDkzYS1hZjYyLWE3ODY5NmNkZmU5MCIsIlRyYW5zYWN0aW9uVHlwZSI6bnVsbH1dLCJDdXN0b21QcmVmZXJlbmNlcyI6W3siSWQiOiI3MmUyN2ZlOC03YzljLTQ0OTEtYTYzYy02ZDhmNjQ0ODYyNmYiLCJPcHRpb25zIjpbIjMwNWMzM2VhLWQ2NjItNGM1NC1hNzUwLWVhMjRiOGRhYmI1OCIsIjlkOGVkMWI5LWIxNGQtNGY3Yy04M2I2LTUzZTY3NTRiZDgzOCIsImJlZWRkNjgyLWUxZTAtNDU0NC04N2JmLWU2NzEwMjViNTlkZCJdLCJDaG9pY2VzIjpudWxsfSx7IklkIjoiM2VkOTdmZmYtY2FjMy00M2E0LTllMjktNzI1Yzg3ZTEzMjBlIiwiT3B0aW9ucyI6WyIwNjA5NTNkMC0zZTVlLTRhOGItOGQzMC1iY2IxZmU1NTE0NzIiLCI4Yzc5ZmY2Zi02MDFhLTRiMWMtYjllYS0wNDQ3YTJiOTkxNGIiLCJjYWUxMmQ3ZS03ODFkLTQzYzYtYWJjMy03NzNiMGZkZTg5N2MiLCIyOWRlMTc5Ny0yYjg2LTQ5MTMtYTY3ZS0xMzZiZDJhYzg5MTEiXSwiQ2hvaWNlcyI6bnVsbH0seyJJZCI6ImViYTY5ZmFlLTRkMmMtNGE3OS1iYzIyLWYxNzNiZGJmMGM3YiIsIk9wdGlvbnMiOlsiMGI4ZmQxYTMtNGRlYi00YWUyLTgwOTYtNjk4ODExNjk5YmU0IiwiM2M4MjFkZDItODVlMC00MWU4LWI2NzEtZDgyM2Y0MzljZmVjIiwiMjAyZGVjNDAtN2RmMC00ZjRlLTlhOTYtZDQ2NTk4OTI3MGRmIl0sIkNob2ljZXMiOm51bGx9LHsiSWQiOiJhM2JiM2IzMS0zYzg3LTRmOWYtYTE4ZC1lYjVjZjdjYzA5NjIiLCJPcHRpb25zIjpbXSwiQ2hvaWNlcyI6bnVsbH1dLCJUcmFuc2FjdGlvblR5cGUiOiJDT05GSVJNRUQiLCJQdXJwb3NlTm90ZSI6bnVsbH1dLCJ0ZW5hbnRJZCI6IjdjMWNhMjhiLTBiNWItNDIyYS1iYzQwLWQzNmMyNjJhNTE2MCIsIm90Snd0VmVyc2lvbiI6MX0.ZXnVzA431N5RU8orQxBG2h0Ro7hGDJo1F5dFIAFfYufmF5BZytNYcGYmVkCpiqhJW90rQcTOrLyb5-qpO0geNQ",
                          "test": true
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 4,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 50,
                        "paged": true,
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 50,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      },
                      "totalElements": 4,
                      "totalPages": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Receipt Details by Data Subject",
        "tags": [
          "Receipts"
        ],
        "x-onetrust": {
          "release-status": "Deprecated",
          "release-status-link": "https://developer.onetrust.com/onetrust/changelog/onetrust-20240910-released"
        }
      }
    },
    "/api/consentmanager/v1/receipts/{id}": {
      "get": {
        "deprecated": true,
        "description": "> ❗️ End of Support Notification\n> \n> As of September 1, 2024, these APIs are now deprecated. Any customers leveraging these APIs are encouraged to migrate to the [Receipts V2 API](https://developer.onetrust.com/onetrust/reference/getreceiptlistdetailsusingpost). For more information, see [OneTrust API Sunsetting & Deprecation Guidelines](https://developer.onetrust.com/onetrust/reference/onetrust-api-sunsetting-deprecation-guidelines).\n\nUse this API to retrieve a single receipt by its unique identifier. The response will return information such as the receipt interaction date along with details of the Purposes that the data subject has interacted with, and their corresponding statuses.\n",
        "operationId": "findReceiptUsingGET",
        "parameters": [
          {
            "description": "The unique identifier identifying the Receipt. `id` can be obtained using the [Gets a list of Receipts](/onetrust/reference/getreceiptlistusingget) endpoint",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Optional parameter. If value is true then API response will include Non Given transactions.",
            "in": "query",
            "name": "includeNotgiven",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptInformationDetailDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "collectionPointName": "Web Form Collection Point",
                      "collectionPointType": "WEB_FORM",
                      "collectionPointUUID": "25d9ccac-db88-4d34-849c-3d602a629961",
                      "collectionPointVersion": 2,
                      "consentCreationDate": "2019-12-30T10:52:30.974Z",
                      "customPayload": "[object Object]",
                      "dataSubjectIdentifier": "example@otprivacy.com",
                      "dataSubjectIdentifierHash": "ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff",
                      "doubleOptIn": true,
                      "id": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
                      "isAnonymous": true,
                      "language": "en-us",
                      "origin": "OneTrust",
                      "otJwtVersion": 1,
                      "purposes": [
                        {
                          "consentLifeSpan": 7889238,
                          "customPreferences": [
                            {
                              "customPreferenceOptions": [
                                {
                                  "id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                  "label": "Weekly"
                                }
                              ],
                              "displayAs": "BUTTONS",
                              "id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                              "languages": [
                                {
                                  "default": true,
                                  "description": "Options for different frequencies to receive emails",
                                  "language": "en-us",
                                  "name": "Email Frequency",
                                  "options": [
                                    {
                                      "id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                      "label": "Weekly"
                                    }
                                  ]
                                }
                              ],
                              "name": "Email Frequency"
                            }
                          ],
                          "description": "Collect customer emails for marketing purposes",
                          "id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                          "name": "Marketing Communications",
                          "purposeNote": {
                            "isValidNote": true,
                            "noteId": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
                            "noteLanguage": "en-US",
                            "noteText": "I did not sign up for this.",
                            "noteType": "UNSUBSCRIBE_REASON"
                          },
                          "purposeType": "STANDARD",
                          "status": "ACTIVE",
                          "topics": [
                            {
                              "id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                              "integrationKey": "Marketing-Communications_Car-Marketing",
                              "languages": [
                                {
                                  "default": true,
                                  "language": "en-us",
                                  "name": "Car Marketing"
                                }
                              ],
                              "name": "Car Marketing"
                            }
                          ],
                          "transactionType": "CONFIRMED",
                          "version": 2
                        }
                      ],
                      "receiptJwt": "AABmODM2OGM0ZC1mMmUwLTQ2MGYtYjQyOC03ZTQyZjQ1MWI3MGVJovwdqc7MU+49lOy",
                      "test": true,
                      "unsubscribeAll": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Receipt",
        "tags": [
          "Receipts"
        ],
        "x-onetrust": {
          "release-status": "Deprecated",
          "release-status-link": "https://developer.onetrust.com/onetrust/changelog/onetrust-20240910-released"
        }
      }
    },
    "/api/consentmanager/v1/scheduled-jobs/merge-request": {
      "get": {
        "description": "Use this API to retrieve a list of all scheduled exports of duplicate data subjects. The response will include the merge request ID along with the associated merge request name, export frequency, and export status.",
        "operationId": "getPagedMergeRequestUsingGET",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/MergeRequestDetailDto"
                      },
                      "type": "array"
                    },
                    "empty": {
                      "type": "boolean"
                    },
                    "first": {
                      "type": "boolean"
                    },
                    "last": {
                      "type": "boolean"
                    },
                    "number": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "numberOfElements": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageable": {
                      "$ref": "#/components/schemas/Pageable"
                    },
                    "size": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "sort": {
                      "$ref": "#/components/schemas/Sort"
                    },
                    "totalElements": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "totalPages": {
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "title": "PageMergeRequestDetailDto",
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "customDataElementNames": [
                            "Mobile"
                          ],
                          "duplicateDataSubjectCount": 0,
                          "jobFrequency": "DAILY",
                          "jobStatus": "COMPLETED",
                          "mergeCondition": "ANY",
                          "mergeRequestId": "d0b14749-e9be-4e9f-9a29-4ccd74987c30",
                          "mergeRequestName": "Find Duplicate By Email",
                          "totalDataSubjectCount": 0
                        }
                      ],
                      "empty": false,
                      "first": false,
                      "last": false,
                      "number": 1,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 1,
                        "pageNumber": 1,
                        "pageSize": 1,
                        "paged": true,
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 1,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      },
                      "totalElements": 35,
                      "totalPages": 35
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get List of Scheduled Exports",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      },
      "post": {
        "description": "Use this API to create a scheduled export of duplicate data subjects.\n\n> 🗒 Things to Know\n> \n> - Once the scheduled export is created, you can retrieve the file using the [Generate Export of Duplicate Data Subjects](https://developer.onetrust.com/onetrust/reference/exportduplicatedatasubject) API.",
        "operationId": "scheduleMergeRequestUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleMergeRequestDto"
              }
            }
          },
          "x-examples": {
            "Example 1-Merge duplicate data subjects": {
              "customDataElementNames": [
                "Mobile"
              ],
              "jobFrequency": "DAILY",
              "mergeCondition": "ANY",
              "mergeRequestName": "Find Duplicate Data Subject By Email Id"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\n\nJob scheduled successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleMergeResponseDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "mergeRequestId": "369fad1b-fa3b-4e29-b3bc-c6d452e7856b",
                      "message": "Merge Request for finding duplicate data subject has been accepted."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Create Scheduled Export of Duplicate Data Subjects",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/scheduled-jobs/merge-request/{mergeRequestGuid}": {
      "delete": {
        "description": "Use this API to delete a scheduled export of duplicate data subjects.",
        "operationId": "deleteMergeRequestUsingDELETE",
        "parameters": [
          {
            "description": "The Guid of the merge request to be canceled",
            "in": "path",
            "name": "mergeRequestGuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Delete Scheduled Export",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      },
      "get": {
        "description": "Use this API to retrieve details of a specific scheduled export of duplicate data subjects. The response will include the associated merge request name, export frequency, and export status.",
        "operationId": "getMergeRequestUsingGET",
        "parameters": [
          {
            "description": "The Guid of the merge request to be retrieved",
            "in": "path",
            "name": "mergeRequestGuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequestDetailDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "summary": "Get Scheduled Export",
        "tags": [
          "Deduplicate Data Subjects"
        ]
      }
    },
    "/api/consentmanager/v1/transactions/withdraw/fordatasubject": {
      "put": {
        "description": "Use this API to withdraw consent on behalf of a data subject for a specific Purpose. The data subject identifier must be included either in the `identifier` query or header parameter, preferably passed in the header.\n",
        "operationId": "withdrawTransactionBehalfOfDatasubjectUsingPUT",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "User withdrawing consent on behalf of data subject",
            "in": "query",
            "name": "withdrawnBy",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithdrawOnBehalfOfRequest"
              }
            }
          },
          "description": "Structure holding the values of the withdrawal request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionWithdrawResult"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Withdraw Consent on Behalf of a Data Subject",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/consentmanager/v1/transactions/withdraw/purpose/{purposeId}": {
      "get": {
        "description": "Use this API to withdraw a data subject's consent for a specific Purpose. The data subject identifier must be included either in the `identifier` query or header parameter, preferably passed in the header.\n\n> 🗒 Things to Know\n> \n> - This API is not designed to be used in synchronous workflows. As an alternative, the [Create Consent Receipts ](https://developer.onetrust.com/onetrust/reference/createconsentreceiptusingpost)API can be called.\n",
        "operationId": "withdrawTransactionByPurposeAndIdentifierUsingGET",
        "parameters": [
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Data Subject Identifier (prefer the header parameter)",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Identifier for Purpose",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionWithdrawResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Withdraw Data Subject's Consent",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/consentmanager/v2/collectionpoints": {
      "get": {
        "description": "Use this API to retrieve a list of all Collection Points or retrieve a single Collection Point using  the `id` query parameter. By default, the response will return details of all versions of a Collection Point with the Active version listed first, but can be filtered using the `status` query parameter.\n",
        "operationId": "getCollectionPointsUsingGET_1",
        "parameters": [
          {
            "description": "Unique identifier of collection point",
            "in": "query",
            "name": "id",
            "required": false,
            "example": "987b1f51-a538-122e-afc4-6b383c28eeb3",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the Organization",
            "in": "query",
            "name": "organizationId",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Sorting criteria in the format: version(,asc|desc). Default sort order is desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Collection Point status",
            "in": "query",
            "name": "status",
            "required": false,
            "example": "DRAFT",
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "ACTIVE",
                "RETIRED",
                "INACTIVE"
              ]
            }
          },
          {
            "description": "Collection Point version",
            "in": "query",
            "name": "version",
            "required": false,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionPointDtoGetV2Response"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "activationDate": "2020-11-09T21:48:42.277",
                          "canCreateNewVersion": false,
                          "collectionPointType": "WEB_FORM",
                          "consentIntegration": false,
                          "consentType": "OPTINCHECKBOX",
                          "createDate": "2020-10-19T08:57:38.293",
                          "createdBy": "D452EC68-71C4-4935-9F17-5FD054365805",
                          "dataElements": [],
                          "description": "desc",
                          "doubleOptIn": true,
                          "enableNewConsentIntegration": false,
                          "firstReceiptOn": "2020-10-20T05:20:45.233",
                          "hostedSDK": false,
                          "iabVendorId": null,
                          "id": "6e79b302-85c5-4eb1-b917-18a42317d066",
                          "identifierDataElement": {
                            "dataElementFields": {
                              "dataElementOptions": [],
                              "dataElementType": "USER_INPUT",
                              "displayAs": "NONE"
                            },
                            "guid": "a16abb13-f885-4361-9c06-bb6261bef5c4",
                            "isIdentifier": false,
                            "label": "Email",
                            "languages": [],
                            "numberOfLanguages": 0
                          },
                          "isAuthenticationRequired": false,
                          "jwtToken": {
                            "token": "eyJhbGciOiJSUzUxMiJ9.eyJvdEp3dFZlcnNpb24iOjEsInByb2Nlc3NJZCI6IjZlNzliMzAyLTg1YzUtNGViMS1iOTE3LTE4YTQyMzE3ZDA2NiIsInByb2Nlc3NWZXJzaW9uIjo4LCJpYXQiOiIyMDIwLTEwLTE5VDA4OjU3OjM4LjI5MyIsIm1vYyI6IldFQl9GT1JNIiwic3ViIjoiRW1haWwiLCJpc3MiOm51bGwsInRlbmFudElkIjoiNmQ3NjE3MjctOTZjYi00OGMzLTljMDYtNDNmMTQ2YjM1ZTI3IiwiZGVzY3JpcHRpb24iOiJkZXNjIiwiY29uc2VudFR5cGUiOiJPUFRJTkNIRUNLQk9YIiwiZG91YmxlT3B0SW4iOnRydWUsInJlY29uZmlybUFjdGl2ZVB1cnBvc2UiOmZhbHNlLCJhdXRoZW50aWNhdGlvblJlcXVpcmVkIjpmYWxzZSwicG9saWN5X3VyaSI6bnVsbCwiYWxsb3dOb3RHaXZlbkNvbnNlbnRzIjpmYWxzZSwicHVycG9zZXMiOlt7ImlkIjoiYmZkNDJlY2EtOTI2Yi00NmRjLTkyMjAtYWJlOGRjNDVkOTI3IiwidmVyc2lvbiI6OSwidG9waWNzIjpbeyJpZCI6IjAwZGM4MzYxLTRlYmItNGYxOS1hZjJkLTJkNDk5OTA5NWQ5MSJ9XSwiY3VzdG9tUHJlZmVyZW5jZXMiOlt7ImlkIjoiZmQ5NDA3YjEtYTcxMC00ODcyLWJlNWItNDRkNGY2NzRkNTY5IiwiaXNSZXF1aXJlZCI6dHJ1ZSwib3B0aW9ucyI6WyJiN2JkM2Y2OC1jMGM0LTQ4ODYtYTI2NS1hN2Y5MTA1MTUxY2EiLCIyYjFkZmYwYy05OTA1LTQ2ZDktOTFlYi0wNTY0MDk4YjhmMmYiLCJmMzIyNjMyYi1lYmJhLTQxZDctYmIxOC03YjkwN2NhNTdiYzMiXX0seyJpZCI6IjNkMGE4OTg5LTVlMTAtNGEzYi05MWYzLWFhODU5ZDdiODAzOCIsImlzUmVxdWlyZWQiOmZhbHNlLCJvcHRpb25zIjpbIjUyMWU5MDk1LTg5ZDctNDI1My1hZDdhLTVjZTcxMzhkZjM4ZSIsImQ3MmQxMjM3LTlkZTAtNDhhNi04MGUxLTM4NzQyOTk5MTlhOSJdfSx7ImlkIjoiMGE0NmVlODAtOTgxYi00N2IzLWFkYmYtNTMwYzgwMWJkMDIyIiwiaXNSZXF1aXJlZCI6ZmFsc2UsIm9wdGlvbnMiOlsiNGM4NDQ0YWItZWM2ZC00OWEyLWE2OTItYzU4MTM4YTRkYzExIl19LHsiaWQiOiI3YmFiNTBiNC1kMmM1LTQ5OWQtOTY5Yy0zOTNjYTI1ZjM1MjkiLCJpc1JlcXVpcmVkIjpmYWxzZSwib3B0aW9ucyI6WyJjZGZhZDgyMC0zYzBhLTQxMTEtODA3NS04NWU1NDUzMTA0NDUiLCJiMTgwZTAwYS1kNjMyLTRhYzYtYWQzYi1hZjk2NmI0NWJlMzUiXX1dfSx7ImlkIjoiZmZmN2E4MjItM2YwMy00MzdiLWJhMmUtY2JhYzk4ZDI1YTY1IiwidmVyc2lvbiI6MSwidG9waWNzIjpbeyJpZCI6ImY1MWYyMzU5LTQ3YjEtNGVjOC05MzMzLWYxMzk2ODBkOGQzYSJ9XSwiY3VzdG9tUHJlZmVyZW5jZXMiOltdfSx7ImlkIjoiYzczNGViZDctYjY3Mi00NWFmLWIwNjUtOGVhZDIzNjZjOWM4IiwidmVyc2lvbiI6MywidG9waWNzIjpbeyJpZCI6Ijg1MTkwNjA1LTYyNDAtNDg1Zi1iNzAwLTZkNGM2YWJlODQ4YyJ9LHsiaWQiOiI5ZTI1MmU2MS0zMWVmLTQ4OGEtYmViZS1kNzc5N2I4OGUwMjkifV0sImN1c3RvbVByZWZlcmVuY2VzIjpbeyJpZCI6ImUzYTJlMWUyLWQ1NzMtNDhmYy1hMzBlLTdlOTJjOWU1NzVlNCIsImlzUmVxdWlyZWQiOmZhbHNlLCJvcHRpb25zIjpbIjNiNDBiNGI2LWQyZGMtNDY4NC1iZWJkLTcwZDQxYmNlNzEyMyIsImFhZmJhMGM4LTNmNDQtNDI4Yy04MTE4LTY1NjhmMjU0MGM3YSIsIjFiYTM5YjdiLTkyN2UtNGExMi04OWYzLTI3ZmM5MjA1NWEwNyJdfV19XSwibm90aWNlcyI6W3sidXJsIjpudWxsLCJwcml2YWN5Tm90aWNlR3VpZCI6IjhhNDQ1YmQ2LWJjNzMtNDM2OC04ZGIwLTAyNmRjOTE0NmYzMyJ9LHsidXJsIjoiaHR0cHM6Ly9teS5vbmV0cnVzdC5jb20vIiwicHJpdmFjeU5vdGljZUd1aWQiOiJlOWNlYmVjNS05NjYxLTRmOWEtODNhMi0xN2NmODEwMDM1YmMifSx7InVybCI6Imh0dHBzOi8vbXkub25ldHJ1c3QuY29tLyIsInByaXZhY3lOb3RpY2VHdWlkIjpudWxsfSx7InVybCI6bnVsbCwicHJpdmFjeU5vdGljZUd1aWQiOiI2Njk0ODYxZS03OGEwLTQ4NDYtYjJlZi0wMmI4MjQ1MmE0M2MifSx7InVybCI6bnVsbCwicHJpdmFjeU5vdGljZUd1aWQiOiI2ZGE1YmY4Yi1iZDZlLTQ3NDktYmQxMy0wMzYwODYyMzQ2ZTkifV0sImRzRGF0YUVsZW1lbnRzIjpbXX0.FC2Sokhf64USmqoKzcDaT2Shqy-cS7edTpjWRsybRlU1kLpPeQvHRmGx0OJ4vej_nCOUKiW5CgWarDqDK7mPHfKu_Ap0WtktHQtgCwXfG2-_0Old8hABLuTbNBJhagoy9hs-nOtdKpUmQcitlWm68neK3wU4YrIf9LYtMpR7J0UpoK0ybCgvbJPY8zkTRFT9UxZgqaxYhdWOTjszzRYaeYWWPjvAftpCBbH58pS1xB1q4U0L2s74YM3NQ4X0pjjZF69pfjNGmtc-t22GZsCfsxZdXHelAfyTxz8NjbnHCmBj7pSgK21JNlEnXZDKPSdwJdLp_B8oslrGaCYUetlEag"
                          },
                          "language": "fr",
                          "languages": [
                            "fr"
                          ],
                          "lastActivityDate": "2020-11-09T19:00:00",
                          "lastModifiedBy": "D452EC68-71C4-4935-9F17-5FD054365805",
                          "lastSdkIntegrationDate": null,
                          "name": "french cp",
                          "noConsentTransactions": false,
                          "noticesWithVersions": [
                            {
                              "id": "4d731204-4c33-44fd-900c-cbe99e1fce6d",
                              "name": "Test-New-Notice",
                              "privacyNoticeGuid": "8a445bd6-bc73-4368-8db0-026dc9146f33",
                              "privacyNoticeVersion": {},
                              "purposes": [],
                              "type": "EMBEDDED",
                              "url": null
                            },
                            {
                              "id": "f36f8e25-badb-4c7e-892f-6d1ca53a3504",
                              "name": "tep",
                              "privacyNoticeGuid": "e9cebec5-9661-4f9a-83a2-17cf810035bc",
                              "privacyNoticeVersion": {},
                              "purposes": [],
                              "type": "LINKED",
                              "url": "https://my.onetrust.com/"
                            },
                            {
                              "id": "d4841544-b710-4b51-98fb-51d1319057dc",
                              "name": "test",
                              "privacyNoticeGuid": null,
                              "privacyNoticeVersion": null,
                              "purposes": [],
                              "type": "LINKED",
                              "url": "https://my.onetrust.com/"
                            },
                            {
                              "id": "f9070be5-72cc-4e9f-a026-0e3e3b7e0d1d",
                              "name": "lang dd migration test",
                              "privacyNoticeGuid": "6694861e-78a0-4846-b2ef-02b82452a43c",
                              "privacyNoticeVersion": {},
                              "purposes": [
                                {}
                              ],
                              "type": "EMBEDDED",
                              "url": null
                            },
                            {
                              "id": "9b323a49-1f35-4a1d-8a2e-d951eff61e97",
                              "name": "HIPAA health notice",
                              "privacyNoticeGuid": "6da5bf8b-bd6e-4749-bd13-0360862346e9",
                              "privacyNoticeVersion": {},
                              "purposes": [
                                {}
                              ],
                              "type": "EMBEDDED",
                              "url": null
                            }
                          ],
                          "organizationId": "5366ef2f-17e0-4eda-98ea-efd51512a83a",
                          "preferenceCenter": {},
                          "privacyPolicyUrl": null,
                          "publishedBy": "D452EC68-71C4-4935-9F17-5FD054365805",
                          "purposes": [
                            {
                              "consentLifeSpan": 0,
                              "description": "1926",
                              "id": "bfd42eca-926b-46dc-9220-abe8dc45d927",
                              "label": "paok-purpose v8",
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "version": 9
                            },
                            {
                              "consentLifeSpan": 0,
                              "description": "test",
                              "id": "fff7a822-3f03-437b-ba2e-cbac98d25a65",
                              "label": "prod purpose",
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "version": 1
                            },
                            {
                              "consentLifeSpan": 0,
                              "description": "ABC",
                              "id": "c734ebd7-b672-45af-b065-8ead2366c9c8",
                              "label": "NewPurpose",
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "version": 3
                            }
                          ],
                          "receiptCount": 37,
                          "reconfirmActivePurpose": false,
                          "redirectUrl": null,
                          "responsibleGroupId": null,
                          "responsibleUserId": null,
                          "sendConsentEmail": false,
                          "showWarning": false,
                          "status": "RETIRED",
                          "subjectIdentifier": "Email",
                          "version": 8,
                          "warningReasons": [],
                          "webFormUrl": null
                        }
                      ],
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 1,
                      "size": 20,
                      "sort": {},
                      "totalElements": 1,
                      "totalPages": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Collection Points",
        "tags": [
          "Collection Points V2"
        ]
      }
    },
    "/api/consentmanager/v2/collectionpoints/{collectionPointGuid}/version": {
      "post": {
        "description": "Use this API to create a new version of an existing Collection Point that is currently in **Active** status. A new version of the Collection Point will be created in **Draft** status while the Active version of the Collection Point will remain unchanged. \n\n  > 🗒 Things to Know\n  > \n  > - Once the Collection Point is in **Draft** status, the [Update Existing Collection Point](https://developer.onetrust.com/onetrust/reference/editcollectionpointusingput) API can be used to edit the Collection Point. Changes will only be visible once the new version of the Collection Point is published.\n",
        "operationId": "createVersionUsingPOST",
        "parameters": [
          {
            "description": "collectionPointGuid",
            "in": "path",
            "name": "collectionPointGuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionPointDtoV2"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create New Collection Point Version",
        "tags": [
          "Collection Points V2"
        ]
      }
    },
    "/api/consentmanager/v2/datasubjects": {
      "get": {
        "description": "Use this API to retrieve a list of all data subjects. The response will include details for each data subject such as the associated data elements, data subject ID, and data subject identifier. By default, the response will return data subject details sorted in descending order of last modified date.\n\n> 🗒 Things to Know\n> \n> - This API is not designed to be used in synchronous workflows. As an alternative, the [Gets preferences for a Data Subject](https://developer.onetrust.com/onetrust/reference/getpreferencesusingget) API can be called.\n\n> 🚧 \n> \n> Please note that the FTC Do Not Call List is updated once daily and not updated in real time. As such, there may be a possibility that a consumer’s preferences may have changed and they may have opted out of receiving communication before the Do Not Call list gets refreshed. OneTrust is merely conveying information received from the FTC and is not responsible for compiling the lists.",
        "operationId": "getDataSubjectsUsingGET",
        "parameters": [
          {
            "description": "Filter Data Subject records with Data Element name.",
            "in": "header",
            "name": "dataElementName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records with id value. Cannot be used in conjunction with identifier header",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Filter Data Subject records with Data Element value. Note that it must be used in conjunction with dataElementName.",
            "in": "header",
            "name": "dataElementValue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Restrict information to one Data Subject.",
            "in": "header",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records with language.",
            "in": "query",
            "name": "language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "Specify optional properties, any of: `linkTokens` will return Email Link Tokens, `ignoreCount` will not return a full record count, `ignoreDefaultSort` will not sort on last modified date  eg: properties=linkTokens,ignoreCount,ignoreDefaultSort",
            "in": "query",
            "name": "properties",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Verify if data subject phone numbers are listed as Do Not Call by the FCC; dataElementsMetaData will replace dataElements in the response.",
            "in": "query",
            "name": "isDNCInclude",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2000,
              "default": 20
            }
          },
          {
            "description": "Filter Data Subject records that were last updated on or after the specified date. The format accepted is yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "updatedSince",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subject records that were last updated before the specified date.  The accepted format is 'yyyy-MM-dd' or 'yyyy-MM-ddTHH:mm:ss'. Note: Passing 'yyyy-MM-dd' will default time to 00:00:00. For example: '2022-02-02' is the same as '2022-02-02T00:00:00'. To see all records between 02/02/2022 to 02/03/2022, the user must pass updatedSince '2022-02-02T00:00:00' and updatedUntil '2022-02-03T23:59:59'.",
            "in": "query",
            "name": "updatedUntil",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "In order to filter Data Subject records without Purpose Transactions, this property should be set to true; default value is false.",
            "in": "query",
            "name": "includeDataSubjectsWithOutPurposeTransactions",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceDataSubjectDtoV2"
                }
              },
              "Example 1 - Retrieve list of DatSubjects": {
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "createdDate": "2022-01-11T12:31:11.033",
                          "dataElements": {
                            "@1 Phone": "+919460660000",
                            "DEforPhone": "+12012001527",
                            "number 1": "123456"
                          },
                          "id": "631ec0fd-a65f-40d1-b21a-99d2ddcdf3f9",
                          "identifier": "test@ot.com",
                          "identifierType": "Email",
                          "language": "qamode",
                          "lastUpdatedDate": "2022-01-11T21:56:43.607",
                          "linkToken": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
                          "testDataSubject": false
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 20,
                        "paged": true,
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 20,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      },
                      "totalElements": 1,
                      "totalPages": 1,
                      "unfilteredTotalElements": 0
                    }
                  }
                }
              },
              "isDNcInclude-example": {
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "createdDate": "2022-01-11T12:31:11.033",
                          "dataElementsMetaData": [
                            {
                              "name": "number 1",
                              "value": "123456"
                            },
                            {
                              "doNotCall": true,
                              "name": "DEforPhone",
                              "value": "+12012001527"
                            }
                          ],
                          "empty": false,
                          "first": true,
                          "id": "a99da8e5-619d-419e-9d93-2694477e7852",
                          "identifier": "test@ot.com",
                          "identifierType": "Email",
                          "language": "qamode",
                          "last": true,
                          "lastUpdatedDate": "2022-01-11T21:56:43.607",
                          "linkToken": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZMKGzJQ=",
                          "number": 0,
                          "numberOfElements": 1,
                          "pageable": {
                            "offset": 0,
                            "pageNumber": 0,
                            "pageSize": 20,
                            "paged": true,
                            "sort": {
                              "empty": true,
                              "sorted": false,
                              "unsorted": true
                            },
                            "unpaged": false
                          },
                          "size": 20,
                          "sort": {
                            "empty": true,
                            "sorted": false,
                            "unsorted": true
                          },
                          "testDataSubject": false,
                          "totalElements": 1,
                          "totalPages": 1,
                          "unfilteredTotalElements": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Data Subjects",
        "tags": [
          "Data Subjects V2"
        ]
      }
    },
    "/api/consentmanager/v2/datasubjects/profiles": {
      "delete": {
        "description": "Use this API to delete up to 100 purposes from one data subject or to delete one purpose from up to 100 data subjects.",
        "operationId": "deleteDataSubjectProfilesUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePurposeFromDataSubject"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK\n\nSuccessfully Deleted purposes from DataSubjects"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Delete Purposes from Data Subject",
        "tags": [
          "Data Subjects V2"
        ]
      }
    },
    "/api/consentmanager/v2/datasubjects/search": {
      "post": {
        "description": "Use this API to search for data subjects by criteria.",
        "operationId": "searchDataSubjectsPostUsingPOST",
        "parameters": [
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2000,
              "default": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSubjectSearchDto"
              }
            }
          },
          "description": "Data subject search criteria"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SliceDataSubjectDtoV2"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Search Data Subjects",
        "tags": [
          "Data Subjects V2"
        ]
      }
    },
    "/api/consentmanager/v2/linkedidentitygroups": {
      "get": {
        "description": "Use this API to retrieve a list of all Data Subject Groups. The response will include the Data Subject Group ID, number of data subjects, and details of the primary data subjects in the group.",
        "operationId": "getLinkedIdentityGroupsUsingGET",
        "parameters": [
          {
            "description": "Results page you want to retrieve (0..N) - e.g. 3",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "In order to retrieve a list of Linked Identity Groups whose primary identifier is equal to the primaryDataSubjectIdentifier header value",
            "in": "header",
            "name": "primaryDataSubjectIdentifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "In order to retrieve a list of Linked Identity Groups whose primary identifier type is equal to the primaryDataSubjectIdentifierType header value",
            "in": "header",
            "name": "primaryDataSubjectIdentifierType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of Linked Identity Group records retrieved per page - e.g. 20",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Optionally include information about the organizations associated with linked identity groups",
            "in": "query",
            "name": "displayOrganizations",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageLinkedIdentityGroupDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "createdDate": "2022-07-27T15:33:58.967",
                          "groupName": "404-867-5309",
                          "id": "f151efd2-f5f7-46a0-b880-3b88291542de",
                          "isPrimary": true,
                          "key": null,
                          "lastModifiedDate": "2022-07-27T15:33:58.967",
                          "numberOfDataSubjects": 2,
                          "organizations": [],
                          "primaryDataSubjectId": "2db8877a-d118-49bf-9f68-afdfbc1ca4aa",
                          "primaryDataSubjectIdentifier": "404-867-5309",
                          "primaryDataSubjectIdentifierType": "Mobile",
                          "primaryDataSubjects": [
                            {
                              "id": "2db8877a-d118-49bf-9f68-afdfbc1ca4aa",
                              "identifier": "404-867-5309",
                              "identifierType": "Mobile"
                            }
                          ]
                        },
                        {
                          "createdDate": "2022-07-15T18:18:41.267",
                          "groupName": "George P. Burdell",
                          "id": "a8346599-31f5-40be-a6e7-9575d39aa662",
                          "isPrimary": true,
                          "key": null,
                          "lastModifiedDate": "2022-07-15T18:18:41.267",
                          "numberOfDataSubjects": 2,
                          "organizations": [],
                          "primaryDataSubjectId": "49aeb7a6-9888-44c5-801a-ab8f869b5ed7",
                          "primaryDataSubjectIdentifier": "gpburdell@onetrust.com",
                          "primaryDataSubjectIdentifierType": "Email",
                          "primaryDataSubjects": [
                            {
                              "id": "49aeb7a6-9888-44c5-801a-ab8f869b5ed7",
                              "identifier": "gpburdell@onetrust.com",
                              "identifierType": "Email"
                            }
                          ]
                        }
                      ],
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 2,
                      "size": 20,
                      "sort": {},
                      "totalElements": 2,
                      "totalPages": 1,
                      "unfilteredTotalElements": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Data Subject Groups",
        "tags": [
          "Data Subject Groups"
        ]
      },
      "post": {
        "description": "Use this API to create a new Data Subject Group.\n\n> 🗒 Things to Know\n> \n> - Data Subject Groups must contain at least one primary data subject identifier and two data subjects.",
        "operationId": "createLinkedIdentityGroupUsingPOST",
        "requestBody": {
          "$ref": "#/components/requestBodies/LinkedIdentityGroupRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedIdentityGroupDto_detailView"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Create Data Subject Group",
        "tags": [
          "Data Subject Groups"
        ]
      }
    },
    "/api/consentmanager/v2/linkedidentitygroups/{linkedIdentityGroupId}": {
      "delete": {
        "description": "Use this API to delete an existing Data Subject Group.",
        "operationId": "deleteUsingDELETE",
        "parameters": [
          {
            "description": "Unique identifier identifying a Linked Identity Group",
            "in": "path",
            "name": "linkedIdentityGroupId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Delete Data Subject Group",
        "tags": [
          "Data Subject Groups"
        ]
      },
      "get": {
        "description": "Use this API to retrieve a single Data Subject Group by its unique identifier along with details such as the Data Subject Group ID and the list of data subjects within its group.",
        "operationId": "getLinkedIdentityGroupUsingGET",
        "parameters": [
          {
            "description": "Unique identifier identifying a Linked Identity Group",
            "in": "path",
            "name": "linkedIdentityGroupId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Optionally include information about the organizations associated with linked identity groups",
            "in": "query",
            "name": "displayOrganizations",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedIdentityGroupDto_detailView"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Data Subject Group",
        "tags": [
          "Data Subject Groups"
        ]
      },
      "put": {
        "description": "Use this API to update an existing Data Subject Group.\n\n> 🗒 Things to Know\n> \n> - Data Subject Groups must contain at least one primary data subject identifier and two data subjects.\n> - To update the Data Subject Group name, use the `groupName` parameter and enter a new name different from the one already in use.",
        "operationId": "updateLinkedIdentityGroupUsingPUT",
        "parameters": [
          {
            "description": "Unique identifier identifying a Linked Identity Group",
            "in": "path",
            "name": "linkedIdentityGroupId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/LinkedIdentityGroupRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedIdentityGroupDto_detailView"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT"
            ]
          }
        ],
        "summary": "Update Data Subject Group",
        "tags": [
          "Data Subject Groups"
        ]
      }
    },
    "/api/consentmanager/v2/preferencecenterpage/{preferencecenterpageid}/schema": {
      "get": {
        "description": "Use this API to retrieve the schema for a specific page within a Multi Page Preference Center. The response will include the structure of the specified page within the Preference Center, including the sections, Purposes, and Data Elements.\n",
        "operationId": "getPreferenceCenterPageSchemaUsingGET",
        "parameters": [
          {
            "description": "Unique identifier identifying a Preference Center Page. `preferencecenterpageid` can be obtained using the [GET /v2/preferencecenters/{preferencecenterid}/schema](/onetrust/reference/getrootschemausingget) endpoint",
            "in": "path",
            "name": "preferencecenterpageid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The State of the Preference Center",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PUBLISHED",
                "DRAFT"
              ],
              "default": "PUBLISHED"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferenceCenterPageDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "displaySubscribeSettings": true,
                      "displayUnsubscribeAll": true,
                      "id": "96ca2a11-2c46-4254-a1f4-7b59bbf5a190",
                      "isHidden": false,
                      "languages": [
                        {
                          "isDefault": true,
                          "language": "en-us",
                          "name": "Preferences"
                        }
                      ],
                      "navigationEnabled": false,
                      "order": 0,
                      "sections": [
                        {
                          "customDataElements": [
                            {
                              "dataElementOptions": [],
                              "dataElementType": "DATE_PICKER",
                              "displayAs": "NONE",
                              "hidden": false,
                              "id": "d23a2186-850e-42ac-a400-11e5b124ac99",
                              "languages": [],
                              "name": "Your Birthday",
                              "order": 1,
                              "readOnly": false
                            },
                            {
                              "dataElementOptions": [],
                              "dataElementType": "COUNTRY",
                              "displayAs": "NONE",
                              "hidden": false,
                              "id": "02e3da1b-0a04-4c7b-bece-4a1adc123d67",
                              "languages": [],
                              "name": "Your Country",
                              "order": 2,
                              "readOnly": false
                            }
                          ],
                          "elements": [
                            {
                              "id": "d389f882-9b01-4e31-b9da-c71c401f7781",
                              "languages": [
                                {
                                  "content": "<p>Please select the types of clothing you are interested in hearing more about.</p>",
                                  "isDefault": true,
                                  "language": "en-us"
                                }
                              ],
                              "order": 0
                            }
                          ],
                          "id": "eabe7c44-e66d-40c6-90c7-ac98b26e9c3d",
                          "identifierType": "Email",
                          "isHeaderHidden": false,
                          "isSubscriptionSettings": false,
                          "languages": [
                            {
                              "isDefault": true,
                              "language": "en-us",
                              "name": "Clothing"
                            }
                          ],
                          "order": 0,
                          "purposes": [
                            {
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "f71d61b4-a938-4466-aad2-a3e6dc1f5609",
                                      "label": "Red",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Red"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "1574d675-3a21-4d12-bd62-ff80d0ef79b5",
                                      "label": "Striped",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Striped"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "b92625a2-867c-42b0-9c85-d4acb872948c",
                                      "label": "Pink",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Pink"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "5c823fdb-b379-46c9-9914-3df3e1214409",
                                      "label": "Green",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Green"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Colors of shirts available ",
                                  "displayAs": "BUTTONS",
                                  "id": "7bcbb62f-110a-40a6-8373-5abd90378b5a",
                                  "languages": [
                                    {
                                      "description": "Colors of shirts available ",
                                      "isDefault": true,
                                      "language": "en-us",
                                      "name": "Shirt Colors"
                                    }
                                  ],
                                  "name": "Shirt Colors",
                                  "required": false,
                                  "selectionType": "MULTI_CHOICE"
                                }
                              ],
                              "description": "Types of Shirts",
                              "id": "bcb18434-725b-4d76-8742-2fbe3ce2cf95",
                              "label": "Shirts",
                              "languages": [
                                {
                                  "description": "Types of Shirts",
                                  "isDefault": true,
                                  "language": "en-us",
                                  "name": "Shirts"
                                }
                              ],
                              "order": 4,
                              "topics": [],
                              "version": 1,
                              "visibility": "VISIBLE_TO_ALL"
                            },
                            {
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "e6f65f4a-7e94-47c3-99b7-95b2712590e2",
                                      "label": "Blue",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Blue"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "8570332c-7d1b-4814-9e7d-1b0758388491",
                                      "label": "Black",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Black"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "73edfeb9-fe24-4351-a055-a242291f1f06",
                                      "label": "White",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "White"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Colors of Jeans",
                                  "displayAs": "BUTTONS",
                                  "id": "8343e3fc-2e7e-4ae5-9882-9759b3a1c0b3",
                                  "languages": [
                                    {
                                      "description": "Colors of Jeans",
                                      "isDefault": true,
                                      "language": "en-us",
                                      "name": "Jean Colors"
                                    }
                                  ],
                                  "name": "Jean Colors",
                                  "required": false,
                                  "selectionType": "MULTI_CHOICE"
                                }
                              ],
                              "description": "Types of Jeans",
                              "id": "60047e2d-c63d-48b3-a55b-622ef7d26201",
                              "label": "Jeans",
                              "languages": [
                                {
                                  "description": "Types of Jeans",
                                  "isDefault": true,
                                  "language": "en-us",
                                  "name": "Jeans"
                                }
                              ],
                              "order": 5,
                              "topics": [],
                              "version": 1,
                              "visibility": "VISIBLE_TO_ALL"
                            },
                            {
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "59042353-c961-478a-8f80-eb8f3d7c0bf2",
                                      "label": "Nike",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Nike"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "b9ad16ab-1750-4fbf-80a6-8f0934e4e91f",
                                      "label": "Adidas",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Adidas"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "e7c1f5ca-0517-4369-a26b-ebff45ec0441",
                                      "label": "New Balance",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "New Balance"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "0cbc704e-4e1e-4014-a464-5405c9987930",
                                      "label": "Reebok",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Reebok"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Select a shoe brand.",
                                  "displayAs": "BUTTONS",
                                  "id": "b449e93f-2b44-418d-a08e-9e99b7e3ade4",
                                  "languages": [
                                    {
                                      "description": "Select a shoe brand.",
                                      "isDefault": true,
                                      "language": "en-us",
                                      "name": "Shoes Brands"
                                    }
                                  ],
                                  "name": "Shoes Brands",
                                  "required": false,
                                  "selectionType": "MULTI_CHOICE"
                                }
                              ],
                              "description": "Types of Shoes",
                              "id": "8a247f27-79f8-4e2a-8a91-b0bbe8c002ff",
                              "label": "Shoes",
                              "languages": [
                                {
                                  "description": "Types of Shoes",
                                  "isDefault": true,
                                  "language": "en-us",
                                  "name": "Shoes"
                                }
                              ],
                              "order": 6,
                              "topics": [],
                              "version": 1,
                              "visibility": "VISIBLE_TO_ALL"
                            }
                          ]
                        },
                        {
                          "customDataElements": [],
                          "elements": [
                            {
                              "id": "dbf6ebe0-bc83-45e3-a601-08836041139c",
                              "languages": [
                                {
                                  "content": "<p>Please select the accessories you are interested in hearing more about.</p>",
                                  "isDefault": true,
                                  "language": "en-us"
                                }
                              ],
                              "order": 0
                            }
                          ],
                          "id": "af9d3c19-5dd7-4e37-9a0a-b5f22e0b5f90",
                          "identifierType": "Mobile",
                          "isHeaderHidden": false,
                          "isSubscriptionSettings": false,
                          "languages": [
                            {
                              "isDefault": true,
                              "language": "en-us",
                              "name": "Accessories"
                            }
                          ],
                          "order": 1,
                          "purposes": [
                            {
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "3b961998-bd60-4fa0-8066-fc41ebeafabc",
                                      "label": "Patek Phillipe",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Patek Phillipe"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "218f5e03-7885-4428-842e-899c99d552fe",
                                      "label": "AP",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "AP"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "b0eef4c6-4554-4d54-8008-2f5cbfa4c3a7",
                                      "label": "Rolex",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Rolex"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "b714a690-67a6-4085-9b27-59ff7bf70487",
                                      "label": "Omega",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Omega"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Select a watch brand.",
                                  "displayAs": "BUTTONS",
                                  "id": "aa60ace9-d0ee-452a-bc8c-26dab61a9a3c",
                                  "languages": [
                                    {
                                      "description": "Select a watch brand.",
                                      "isDefault": true,
                                      "language": "en-us",
                                      "name": "Watch Brands"
                                    }
                                  ],
                                  "name": "Watch Brands",
                                  "required": false,
                                  "selectionType": "MULTI_CHOICE"
                                }
                              ],
                              "description": "Types of Watches",
                              "id": "bfecfd65-aaa9-4fcc-a41b-de071d50bb24",
                              "label": "Watches",
                              "languages": [
                                {
                                  "description": "Types of Watches",
                                  "isDefault": true,
                                  "language": "en-us",
                                  "name": "Watches"
                                }
                              ],
                              "order": 1,
                              "topics": [],
                              "version": 6,
                              "visibility": "VISIBLE_TO_ALL"
                            },
                            {
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "05fe27b5-8253-4693-9294-5078a3c75685",
                                      "label": "White",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "White"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "71cf1641-d73c-4a68-9f51-a33cc0187ca9",
                                      "label": "Pink",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Pink"
                                        }
                                      ]
                                    },
                                    {
                                      "id": "362869a8-6c10-4024-8b34-099afcdfdf13",
                                      "label": "Black",
                                      "languages": [
                                        {
                                          "isDefault": true,
                                          "language": "en-us",
                                          "name": "Black"
                                        }
                                      ]
                                    }
                                  ],
                                  "description": "Select the color hat.",
                                  "displayAs": "BUTTONS",
                                  "id": "482f54ad-d259-4096-b2f1-33a164713571",
                                  "languages": [
                                    {
                                      "description": "Select the color hat.",
                                      "isDefault": true,
                                      "language": "en-us",
                                      "name": "Hat Colors"
                                    }
                                  ],
                                  "name": "Hat Colors",
                                  "required": false,
                                  "selectionType": "MULTI_CHOICE"
                                }
                              ],
                              "description": "Types of Hats",
                              "id": "fc234c93-02c1-4cc3-b11f-2bab88783a13",
                              "label": "Hats",
                              "languages": [
                                {
                                  "description": "Types of Hats",
                                  "isDefault": true,
                                  "language": "en-us",
                                  "name": "Hats"
                                }
                              ],
                              "order": 2,
                              "topics": [],
                              "version": 1,
                              "visibility": "VISIBLE_TO_ALL"
                            }
                          ]
                        },
                        {
                          "customDataElements": [],
                          "elements": [],
                          "id": "fbd54ce6-9583-4181-8b7b-570449103dca",
                          "identifierType": "",
                          "isHeaderHidden": false,
                          "isSubscriptionSettings": true,
                          "languages": [],
                          "order": 2,
                          "purposes": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found\n\nPossible reasons for error:\n\n> 1. Cannot find preference center page with id : {Preference center page id}\n>\n> This can be resolved by verifying and passing correct preference center page uuid"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Preference Center Page Schema",
        "tags": [
          "Preference Centers V2"
        ]
      }
    },
    "/api/consentmanager/v2/preferencecenters": {
      "get": {
        "description": "Use this API to retrieve a list of all Preference Centers. The response will include details for each Preference Center along with the corresponding Preference Center ID, created date, and published date.\n",
        "operationId": "getPreferenceCentersUsingGET",
        "parameters": [
          {
            "description": "Results page you want to retrieve (0..N)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "name": "sort",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagePreferenceCenterSummaryDtoV2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Preference Centers",
        "tags": [
          "Preference Centers V2"
        ]
      }
    },
    "/api/consentmanager/v2/preferencecenters/{preferencecenterid}/schema": {
      "get": {
        "description": "Use this API to retrieve the root schema for a Multi Page Preference Center. The response will include the root structure of the Preference Center, including the settings, languages, and configured pages.\n",
        "operationId": "getRootSchemaUsingGET",
        "parameters": [
          {
            "description": "Unique identifier identifying a Preference Center. `preferencecenterid` can be obtained using the [GET /v2/preferencecenters](/onetrust/reference/getrootschemausingget) endpoint",
            "in": "path",
            "name": "preferencecenterid",
            "required": true,
            "example": "ce02f619-49c9-471c-b5ef-ad99d58fefd9",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The State of the Preference Center",
            "in": "query",
            "name": "state",
            "example": "DRAFT",
            "schema": {
              "type": "string",
              "enum": [
                "PUBLISHED",
                "DRAFT"
              ],
              "default": "PUBLISHED"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedPreferenceCenterDto"
                },
                "examples": {
                  "response": {
                    "value": {
                      "autoCheckTopics": true,
                      "defaultLanguage": "en-us",
                      "displayNotificationPurpose": false,
                      "displayPageLevelSubscribeSettings": true,
                      "displaySubscribeSettings": true,
                      "displayUnsubscribeAll": true,
                      "enableMultipleIdentities": true,
                      "languages": [
                        {
                          "isDefault": true,
                          "language": "en-us"
                        }
                      ],
                      "notificationPurpose": {
                        "customPreferences": [],
                        "description": "Opting out will stop notifications acknowledging consent or changing consent preferences from being sent. Does not impact notices which request confirmation of consent.",
                        "id": "ff5a3df6-7166-4768-9424-af48d4cce842",
                        "label": "Send Notifications about Changes to Preferences",
                        "languages": [
                          {
                            "description": "Opting out will stop notifications acknowledging consent or changing consent preferences from being sent. Does not impact notices which request confirmation of consent.",
                            "isDefault": true,
                            "language": "en-us",
                            "name": "Send Notifications about Changes to Preferences"
                          }
                        ],
                        "order": null,
                        "topics": [],
                        "version": 1,
                        "visibility": null
                      },
                      "pages": [
                        {
                          "displaySubscribeSettings": true,
                          "displayUnsubscribeAll": true,
                          "id": "96ca2a11-2c46-4254-a1f4-7b59bbf5a190",
                          "languages": [
                            {
                              "isDefault": true,
                              "language": "en-us",
                              "name": "Preferences"
                            }
                          ],
                          "navigationEnabled": false,
                          "order": 0
                        }
                      ],
                      "preferenceCenterSettings": {
                        "languages": {
                          "en-us": {
                            "changePreferencesLabel": "Change Preferences",
                            "reasonsLabel": "Unsubscribe Reason",
                            "reasonsMessage": "We are so sad to see you go! Please indicate the reason for your unsubscription and we will work to improve our service.",
                            "reasonsTitle": "Unsubscribe Successful",
                            "subscriptionSettingsLabel": "Settings for Subscription",
                            "title": "Your Preferences",
                            "topicsLabel": "Topics",
                            "undoChangesLabel": "Undo Changes",
                            "unsubscribeAllLabel": "Unsubscribe All",
                            "unsubscribeSuccessLabel": "You have successfully unsubscribed.",
                            "updateErrorLabel": "Sorry, something went wrong. Please try again.",
                            "updateSuccessLabel": "Thank you! Your preferences have been submitted. Please allow a few minutes for these to be updated."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden\n"
          },
          "404": {
            "description": "Not Found\n\nPossible reasons for error:\n> 1. Cannot find preference center with id : {Preference center UUID}\n>\n> This can be resolved by verifying and passing correct preference center uuid",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Preference Center Root Schema",
        "tags": [
          "Preference Centers V2"
        ]
      }
    },
    "/api/consentmanager/v2/purposes": {
      "get": {
        "description": "Use this API to retrieve a list of Purpose versions. The response will include details for each Purpose version along with the corresponding Purpose ID, created date, and published date.\n> 🗒 Things to Know\n> \n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "getGroupedPurposesUsingGET",
        "parameters": [
          {
            "description": "In order to include retired versions for each Purposes this property should be set to true; default value is false",
            "in": "query",
            "name": "includeRetired",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "In order to retrieve only the latest version of each Purpose this property should be set to true; default value is false",
            "in": "query",
            "name": "latestVersion",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "In order to retrieve custom preference for each version of Purposes\nthis property should be set to true; default value is false",
            "in": "query",
            "name": "includeCustomPreferences",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "In order to retrieve topics for each version of Purposes this\nproperty should be set to true; default value is false",
            "in": "query",
            "name": "includeTopics",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "The `status` query parameter filters the highest version of purposes by the status and also `status` query parameter accepts multiple `status` values in url as mentioned in the below example. Possible values of status parameter are- `{ACTIVE|DRAFT|RETIRED}`.Note that the status and organization parameters cannot be used in conjunction.\n\nExample: `v2/purposes?status=ACTIVE&status=DRAFT&status=RETIRED`",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Results page you want to retrieve (0..N) - e.g. 3",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "description": "The number of elements to be returned in a page.\n(Note: The maximum size value may differ by API and is subject to change. If a number greater than the maximum is requested, the API will return the maximum allowed value.)\n",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 20
            }
          },
          {
            "description": "To filter the purposes by the organization their `ACTIVE` version is linked to, set the `organization` request parameter to the corresponding unique identifier.\n\nExample: `v2/purposes?organization=71c11a00-ec91-45d3-b8ed-9199d263ff35`",
            "in": "query",
            "name": "organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To sort the purposes by their creation date in ascending or descending order, set the `createdDate` query parameter  to `asc` or `desc`.\n\nExample: `v2/purposes?sort=createdDate,desc`",
            "in": "query",
            "name": "createdDate",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "To sort the purposes by the date when they were last updated in ascending or descending order, set the `lastModifiedDate` query parameter  to `asc` or `desc`.\n\nExample: `v2/purposes?sort=lastModifiedDate,desc`",
            "in": "query",
            "name": "lastModifiedDate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagePurposeVersionsGroupedByGuid"
                }
              },
              "Example": {
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "attributes": {
                            "Country": [
                              "US"
                            ]
                          },
                          "createdDate": "2021-04-30T11:51:01.663Z",
                          "lastModifiedDate": "2021-04-30T11:55:30.650Z",
                          "publishedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                          "publishedDate": "2021-04-30T11:55:09.143Z",
                          "purposeId": "98bb6860-b688-4964-a7dc-48c537b12848",
                          "versions": [
                            {
                              "consentLifeSpan": 0,
                              "createdBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "createdDate": "2021-04-30T11:55:30.650Z",
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "a482d871-d32f-4311-be63-ffa88edba859",
                                      "label": "Option 1"
                                    },
                                    {
                                      "id": "5aea26b8-f180-4f4b-a29c-506ca649dadf",
                                      "label": "Option 2"
                                    }
                                  ],
                                  "displayAs": "BUTTONS",
                                  "id": "283b375c-d405-45c4-bc6f-85abc5430456",
                                  "languages": [
                                    {
                                      "default": true,
                                      "description": "Language Description",
                                      "language": "string",
                                      "name": "Language Name",
                                      "options": [
                                        {
                                          "id": "5aea26b8-f180-4f4b-a29c-506ca649dadf",
                                          "label": "Option A"
                                        },
                                        {
                                          "id": "a482d871-d32f-4311-be63-ffa88edba859",
                                          "label": "Option B"
                                        }
                                      ]
                                    }
                                  ],
                                  "name": "Custom Preference 1"
                                }
                              ],
                              "description": "Purpose Description",
                              "detail": "https://hostname/consentmanager/v2/purposes/98bb6860-b688-4964-a7dc-48c537b12848?version=3",
                              "label": "Purpose Name version 3",
                              "lastModifiedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "lastModifiedDate": "2021-04-30T11:55:30.650Z",
                              "organizations": [
                                "5989d3ca-407c-4f44-8d77-3f363ceae6a0"
                              ],
                              "parentPurposeId": null,
                              "publishedBy": null,
                              "publishedDate": null,
                              "purposeType": "STANDARD",
                              "status": "DRAFT",
                              "topics": [
                                {
                                  "canDelete": true,
                                  "id": "bc6cbe10-8736-4e9a-b434-ad7d93dc31ab",
                                  "integrationKey": "integrationKey_key_Topic-1",
                                  "languages": [
                                    {
                                      "default": true,
                                      "language": "en-us",
                                      "name": "Topic 1"
                                    }
                                  ],
                                  "name": "Topic 1",
                                  "transactionType": null
                                }
                              ],
                              "version": 3
                            },
                            {
                              "consentLifeSpan": 0,
                              "createdBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "createdDate": "2021-04-30T11:53:49.003Z",
                              "customPreferences": [
                                {
                                  "customPreferenceOptions": [
                                    {
                                      "id": "a482d871-d32f-4311-be63-ffa88edba859",
                                      "label": "Option 1"
                                    },
                                    {
                                      "id": "5aea26b8-f180-4f4b-a29c-506ca649dadf",
                                      "label": "Option 2"
                                    }
                                  ],
                                  "displayAs": "BUTTONS",
                                  "id": "283b375c-d405-45c4-bc6f-85abc5430456",
                                  "languages": [
                                    {
                                      "default": true,
                                      "description": "Language Description",
                                      "language": "string",
                                      "name": "Language Name",
                                      "options": [
                                        {
                                          "id": "5aea26b8-f180-4f4b-a29c-506ca649dadf",
                                          "label": "Option A"
                                        },
                                        {
                                          "id": "a482d871-d32f-4311-be63-ffa88edba859",
                                          "label": "Option B"
                                        }
                                      ]
                                    }
                                  ],
                                  "name": "Custom Preference 1"
                                }
                              ],
                              "description": "Purpose Description",
                              "detail": "https://hostname/consentmanager/v2/purposes/98bb6860-b688-4964-a7dc-48c537b12848?version=2",
                              "label": "Purpose Name version 2",
                              "lastModifiedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "lastModifiedDate": "2021-04-30T11:55:09.180Z",
                              "organizations": [
                                "5989d3ca-407c-4f44-8d77-3f363ceae6a0"
                              ],
                              "parentPurposeId": null,
                              "publishedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "publishedDate": "2021-04-30T11:55:09.143Z",
                              "purposeType": "STANDARD",
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "canDelete": false,
                                  "id": "bc6cbe10-8736-4e9a-b434-ad7d93dc31ab",
                                  "integrationKey": "integrationKey_key_Topic-1",
                                  "languages": [
                                    {
                                      "default": true,
                                      "language": "en-us",
                                      "name": "Topic 1"
                                    }
                                  ],
                                  "name": "Topic 1",
                                  "transactionType": null
                                }
                              ],
                              "version": 2
                            },
                            {
                              "consentLifeSpan": 0,
                              "createdBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "createdDate": "2021-04-30T11:51:01.663Z",
                              "customPreferences": [],
                              "description": "Purpose Description",
                              "detail": "https://hostname/consentmanager/v2/purposes/98bb6860-b688-4964-a7dc-48c537b12848?version=1",
                              "label": "Purpose Name version 1",
                              "lastModifiedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "lastModifiedDate": "2021-04-30T11:55:09.180Z",
                              "organizations": [
                                "5989d3ca-407c-4f44-8d77-3f363ceae6a0"
                              ],
                              "parentPurposeId": null,
                              "publishedBy": "29366168-CF22-44FF-A9E0-1ADCCECE824B",
                              "publishedDate": "2021-04-30T11:53:01.340Z",
                              "purposeType": "STANDARD",
                              "status": "RETIRED",
                              "topics": [],
                              "version": 1
                            }
                          ]
                        }
                      ],
                      "first": true,
                      "last": true,
                      "number": 0,
                      "numberOfElements": 1,
                      "size": 20,
                      "sort": {},
                      "totalElements": 1,
                      "totalPages": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Purpose Versions",
        "tags": [
          "Purposes V2"
        ]
      }
    },
    "/api/consentmanager/v2/purposes/{purposeId}": {
      "get": {
        "description": "Use this API to retrieve a single Purpose by its unique identifier along with the associated attributes, Purpose Preferences, and created date.\n> 🗒 Things to Know\n> \n> - This API returns Purpose descriptions inside `<p>` and `</p> `HTML tags. These can be sanitized depending on your formatting needs.\n",
        "operationId": "getPurposeDetailUsingGET",
        "parameters": [
          {
            "description": "Unique identifier identifying a Purpose",
            "in": "path",
            "name": "purposeId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "The status of the Purpose to be retrieved {ACTIVE|DRAFT} - by default ACTIVE is returned",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Version number of the Purpose to be retrieved - e.g. 2",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeDetailDtoV2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Purpose",
        "tags": [
          "Purposes V2"
        ]
      }
    },
    "/rest/api/consent/v1/receipts/cross-device": {
      "delete": {
        "description": "Use this API to delete cross device consents and the related receipts. This API is designed for users with a CRO license. However, users with both UCPM and CRO licenses, can use the [Delete Data Subjects](https://developer.onetrust.com/onetrust/reference/deletedatasubjectprofileusingdelete) API to delete CRO data subject identifiers.\n\n> 🗒 Things to Know\n> \n> - A maximum of 1000 data subject identifiers can be deleted per request. \n> - Requests will be processed asynchronously.",
        "operationId": "CrossDeviceConsentUsingDELETE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossDeviceConsentDeleteRequest"
              }
            }
          },
          "x-examples": {
            "Example": "{\n  \"identifiers\": [\"user1@domain.com\",\"user2@domain.com\"]\n}"
          }
        },
        "responses": {
          "200": {
            "description": "Request accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "COOKIES"
            ]
          }
        ],
        "summary": "Delete Cross Device Consents and Receipts",
        "tags": [
          "Consent Rate Optimization"
        ]
      }
    },
    "/rest/api/preferences/v1/attachments": {
      "post": {
        "description": "Use this API to upload and store files which contain written consent of data subjects' transactions.\n\n> 🗒 Things to Know\n> \n> - The size of uploaded files must be less than 4MB.\n> \n> - The following file formats are allowed: .pdf, .jpeg, .jpg, and .png.\n> \n> - The `RefID` parameter returned within the response body can be used to attach file references to incoming data subject consents using the [Create Consent Receipts](https://developer.onetrust.com/onetrust/reference/createconsentreceiptusingpost) API.\n> \n> - File references can be attached to a given data subject or data subject purpose by using the `attachments` or `PurposeAttachments` parameters in the [Create Consent Receipts](https://developer.onetrust.com/onetrust/reference/createconsentreceiptusingpost) API respectively.",
        "operationId": "uploadConsentAttachments",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "The actual file that needs to be uploaded.",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentAttachmentResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "ContentType": "image/jpeg",
                      "FileSize": 86112,
                      "Filename": "test.png",
                      "QualifiedName": "4a78b69d-2416-4def-ba88-0d987f5c5b20/attachments/d5531cc8-ad17-48b7-bad0-d19cca001de0/test.jpeg",
                      "RefId": "bf0c70aa-285d-44ca-80c4-7acd0b4d657d"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Service Call Failed"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Upload Consent Attachment",
        "tags": [
          "Consent Attachments"
        ]
      }
    },
    "/rest/api/preferences/v1/attachments-reference/{attachmentId}": {
      "delete": {
        "description": "Use this API to remove a specific file reference attached to a given data subject.\n\n> 🗒 Things to Know\n> \n> - The `attachmentId` parameter value corresponds to the `RefId` parameter value returned after uploading a file using the [Upload Attachments](https://developer.onetrust.com/onetrust/reference/uploadconsentattachments) API.",
        "operationId": "removeGivenConsentAttachmentRefs",
        "parameters": [
          {
            "description": "Unique referenceId `refId` UUID of the file which has to removed from Data Subject.",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Datasubject identifier",
            "in": "header",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAttachmentRefResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "identifier": "example@otprivacy.com",
                      "statusMessage": "Attachment references deletion Request has been accepted for processing."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Remove Consent Attachment",
        "tags": [
          "Consent Attachments"
        ]
      }
    },
    "/rest/api/preferences/v1/attachments/{attachmentId}": {
      "get": {
        "description": "Use this API to download a specific file reference attached to a given data subject. The file will be downloaded in .zip format.\n\n > 🗒 Things to Know\n > \n > - The `attachmentId` parameter value corresponds to the `RefId` parameter value returned after uploading a file using the [Upload Consent Attachment](https://developer.onetrust.com/onetrust/reference/uploadconsentattachments) API.",
        "operationId": "downloadGivenConsentAttachments",
        "parameters": [
          {
            "description": "Unique `refId` UUID of the file to be downloaded.",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "description": "Datasubject identifier",
            "in": "header",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Service Call Failed"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Download Consent Attachment",
        "tags": [
          "Consent Attachments"
        ]
      }
    },
    "/rest/api/preferences/v1/datasubjects/{identifier}/attachment-references": {
      "delete": {
        "description": "Use this API to remove all file references attached to a given data subject.",
        "operationId": "removeAllConsentAttachmentRefs",
        "parameters": [
          {
            "description": "Datasubject identifier",
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAttachmentRefResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "identifier": "example@otprivacy.com",
                      "statusMessage": "Attachment references deletion request has been accepted for processing."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Remove All Consent Attachments",
        "tags": [
          "Consent Attachments"
        ]
      }
    },
    "/rest/api/preferences/v1/datasubjects/{identifier}/attachments": {
      "get": {
        "description": "Use this API to retrieve all available file references attached to a given data subject. The files will be downloaded in .zip format.",
        "operationId": "downloadConsentAttachments",
        "parameters": [
          {
            "description": "Datasubject identifier",
            "in": "path",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Service Call Failed"
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Download All Consent Attachments",
        "tags": [
          "Consent Attachments"
        ]
      }
    },
    "/rest/api/preferences/v3/datasubject-profiles": {
      "get": {
        "description": "> ❗️ Migration Recommendation\n> \n> Please, do not adopt this API if you have not already done so. Continue to use the [Get List of Data Subjects](https://developer.onetrust.com/onetrust/reference/getdatasubjectprofileusingget) V1 API or request access to have Data Subjects V4 APIs enabled.\n\nUse this API to retrieve a list of all data subjects. Depending on the query or header parameter values passed in the request, the response will return specific details about data subjects, including relevant information about the latest Collection Point update.\n\n> 🗒 Things to Know\n> \n> - This API can also be used to retrieve the magic link token as `linkToken` in the response.\n> \n> - The `identifier` header parameter can be used to return information for a single data subject.\n> \n> - This API is designed to remain available during maintenance periods.\n>\n> - This API is not designed to be used in workflows.",
        "operationId": "getV3DatasubjectProfilesUsingPOST",
        "parameters": [
          {
            "description": "Filter Data Subjects by data element name.",
            "in": "header",
            "name": "dataElementName",
            "required": false,
            "example": "FirstName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter Data Subjects by data element value.",
            "in": "header",
            "name": "dataElementValue",
            "required": false,
            "example": "Alice",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date from which to return records. Formats accepted are yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "updatedSince",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Date until which to return records. Formats accepted are yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "in": "query",
            "name": "updatedUntil",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Data Subject Identifier filter.",
            "in": "header",
            "name": "identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "RequestContinuation token which should be used to navigate to the next page.",
            "in": "header",
            "name": "requestContinuation",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UUID of the Collection Point.",
            "in": "query",
            "name": "collectionPointGuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UUID of the Purpose. `purposeGuid` can be obtained using the [Get A Paged List Of Purposes](/onetrust/reference/getgroupedpurposesusingget) endpoint.",
            "in": "query",
            "name": "purposeGuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of records per page up to 2000 records per page. If a value above 2000 is used, only the first 2000 records will be returned.",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2000,
              "default": 20
            }
          },
          {
            "description": "Sorting criteria in the format: property,direction (where direction is asc or desc). Supported properties: lastUpdatedDate, createdDate.",
            "in": "query",
            "name": "sort",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK\n\nList of Data Subjects retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "properties": {
                          "collectionPointUUID": {
                            "description": "GUID of collection point.",
                            "example": "a13530ad-d1ce-4b0e-802e-3af1118710b4",
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "Data Subject created date.",
                            "example": "2023-06-20T15:59:32.06644698",
                            "type": "integer"
                          },
                          "dsAttachments": {
                            "items": {
                              "properties": {
                                "attachmentId": {
                                  "description": "Attachment ID in GUID format.",
                                  "example": "a13530ad-d1ce-4b0e-802e-3af1118710b9",
                                  "type": "string"
                                },
                                "dataElements": {
                                  "items": {
                                    "properties": {
                                      "doNotCall": {
                                        "type": "string"
                                      },
                                      "linked": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of data element.",
                                        "example": "state",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Value of data element.",
                                        "example": "Arizona",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "fileName": {
                                  "description": "Name of file.",
                                  "example": "consent.png",
                                  "type": "string"
                                },
                                "uploadDate": {
                                  "description": "File upload date.",
                                  "example": "2022-03-10T05:59:07.251412",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "description": "Data Subject Id in GUID format.",
                            "example": "a78a34c2-a292-4c6e-ba7c-29a05fd671ab",
                            "type": "string"
                          },
                          "identifier": {
                            "description": "Data Subject Identifier.",
                            "example": "gpburdell@onetrust.com",
                            "type": "string"
                          },
                          "language": {
                            "example": "en-US",
                            "type": "string"
                          },
                          "lastUpdatedDate": {
                            "description": "Data Subject last updated date.",
                            "example": "2023-06-20T15:59:32.06644698",
                            "type": "string"
                          },
                          "latestGeolocation": {
                            "description": "Provides geolocation information for a data subject if they have given consent to a purpose with geolocation tracking enabled",
                            "properties": {
                              "country": {
                                "description": "Country of the DataSubject",
                                "example": "US",
                                "type": "string"
                              },
                              "dataSubjectId": {
                                "description": "Unique Identifier identifying a Data Subject",
                                "example": "633ba071-61b0-485f-81a0-a2245777b432",
                                "type": "string"
                              },
                              "receiptGuid": {
                                "description": "Unique Identifier of the Receipt for which Geolocation parameters were sent",
                                "example": "788ba071-61b0-485f-81a0-a2245777b432",
                                "type": "string"
                              },
                              "state": {
                                "description": "State Code of the DataSubject",
                                "example": "GA",
                                "type": "string"
                              },
                              "stateName": {
                                "description": "State Name of the DataSubject",
                                "example": "Georgia",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "linkToken": {
                            "description": "The Data Subject magic link token",
                            "example": "gKI48JkUNysPULgg36MpweZbZ3/f/nQd1QdoI3hUbAU=",
                            "type": "string"
                          },
                          "purposes": {
                            "items": {
                              "properties": {
                                "attributes": {
                                  "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
                                  "properties": {
                                    "additionalProp1": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "additionalProp2": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "additionalProp3": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "consentDate": {
                                  "description": "The Date the Data Subject consented to this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "customPreferences": {
                                  "items": {
                                    "description": "A list containing the Purpose Custom Preferences.",
                                    "properties": {
                                      "customPreferenceOptions": {
                                        "items": {
                                          "properties": {
                                            "id": {
                                              "description": "Unique Identifier identifying the Custom Preference.",
                                              "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "The Custom Preference name.",
                                              "example": "Email Frequency",
                                              "type": "string"
                                            },
                                            "options": {
                                              "description": "List containing the Custom Preference Options.",
                                              "items": {
                                                "properties": {
                                                  "id": {
                                                    "description": "Unique Identifier identifying a Custom Preference Option.",
                                                    "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "description": "The Option name.",
                                                    "example": "Weekly",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "expiryDate": {
                                  "description": "The Date the Data Subject consent expires for this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "firstTransaction": {
                                  "description": "The Date the first transaction was recorded against this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "geolocation": {
                                  "description": "Provides geolocation information for a data subject if they have given consent to a purpose with geolocation tracking enabled",
                                  "properties": {
                                    "country": {
                                      "description": "Country of the DataSubject.",
                                      "example": "US",
                                      "type": "string"
                                    },
                                    "dataSubjectId": {
                                      "description": "Unique Identifier identifying a Data Subject.",
                                      "example": "633ba071-61b0-485f-81a0-a2245777b432",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "receiptGuid": {
                                      "description": "Unique Identifier of the Receipt for which Geolocation parameters were sent.",
                                      "example": "788ba071-61b0-485f-81a0-a2245777b432",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "State Code of the DataSubject.",
                                      "example": "GA",
                                      "type": "string"
                                    },
                                    "stateName": {
                                      "description": "State Name of the DataSubject.",
                                      "example": "Georgia",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "lastInteractionDate": {
                                  "description": "Date/Time of the most recent Data Subject interaction for this Purpose Receipt API.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "lastReceiptId": {
                                  "description": "Unique Identifier identifying a Receipt.",
                                  "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                                  "type": "string"
                                },
                                "lastTransactionCollectionPointId": {
                                  "description": "The collection point the last transaction was recorded against this Purpose.",
                                  "example": "a13530ad-d1ce-4b0e-802e-3af1118710b4",
                                  "type": "string"
                                },
                                "lastTransactionCollectionPointVersion": {
                                  "description": "The collection point version the last transaction was recorded against this Purpose.",
                                  "example": 1,
                                  "type": "integer"
                                },
                                "lastTransactionDate": {
                                  "description": "The Date the last transaction was recorded against this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "lastUpdatedDate": {
                                  "description": "The collection point version the last transaction was recorded against this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The Purpose name.",
                                  "example": "Marketing Communications",
                                  "type": "string"
                                },
                                "purposeAttachments": {
                                  "description": "Documents attached to Purpose.",
                                  "items": {
                                    "properties": {
                                      "attachmentId": {
                                        "description": "Attachment ID in GUID format.",
                                        "example": "a13530ad-d1ce-4b0e-802e-3af1118710b9",
                                        "type": "string"
                                      },
                                      "fileName": {
                                        "description": "Name of file.",
                                        "example": "consent.png",
                                        "type": "string"
                                      },
                                      "uploadDate": {
                                        "description": "File upload date.",
                                        "example": "2022-03-10T05:59:07.251412",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "purposeNote": {
                                  "description": "Note for a purpose.",
                                  "properties": {
                                    "isValidNote": {
                                      "description": "Flag indicating if the note is a valid reason template.",
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "noteId": {
                                      "description": "Unique identifier of the reason template.",
                                      "example": "be6b8dac-e757-4230-b575-9ae21e3e4ad7",
                                      "type": "string"
                                    },
                                    "noteLanguage": {
                                      "description": "The type of the note.",
                                      "example": "en",
                                      "type": "string"
                                    },
                                    "noteText": {
                                      "description": "The actual text of the note.",
                                      "example": "Note",
                                      "type": "string"
                                    },
                                    "noteType": {
                                      "description": "Type of Note.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "topics": {
                                  "description": "A list containing the Purpose Topics.",
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "description": "A list containing the Purpose Topics.",
                                        "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "A list containing the Purpose Topics.",
                                        "example": "Car Marketing",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "totalTransactionCount": {
                                  "description": "The total number of Transactions recorded against this Purpose.",
                                  "example": 3,
                                  "type": "integer"
                                },
                                "withdrawalDate": {
                                  "description": "The Date the withdrawal transaction was recorded against this Purpose.",
                                  "example": "2020-01-05T11:34:30.974Z",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "testDataSubject": {
                            "description": "Boolean value true or false if test data subject then true else false.",
                            "example": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "empty": {
                      "type": "boolean"
                    },
                    "first": {
                      "type": "boolean"
                    },
                    "last": {
                      "type": "boolean"
                    },
                    "number": {
                      "type": "integer"
                    },
                    "numberOfElements": {
                      "description": "Number can vary from previous pages when reaching the last page",
                      "type": "integer"
                    },
                    "pageable": {
                      "properties": {
                        "offset": {
                          "type": "integer"
                        },
                        "pageNumber": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Number of elements requested in the call",
                          "type": "integer"
                        },
                        "paged": {
                          "type": "boolean"
                        },
                        "requestContinuation": {
                          "type": "string"
                        },
                        "sort": {
                          "properties": {
                            "empty": {
                              "type": "boolean"
                            },
                            "sorted": {
                              "type": "boolean"
                            },
                            "unsorted": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "unpaged": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "size": {
                      "description": "Number of elements returned in the call",
                      "type": "integer"
                    },
                    "sort": {
                      "properties": {
                        "empty": {
                          "type": "boolean"
                        },
                        "sorted": {
                          "type": "boolean"
                        },
                        "unsorted": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "totalElements": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "content": [
                        {
                          "LinkToken": "gKI48JkUNysPULgg36MpweZbZ3/f/nQd1QdoI3hUbAU=",
                          "createdDate": "2022-08-01T20:46:06.877",
                          "dataElements": [
                            {
                              "linked": false,
                              "name": "Email",
                              "value": "gpburdell@onetrust.com"
                            },
                            {
                              "linked": false,
                              "name": "FirstName",
                              "value": "George"
                            },
                            {
                              "linked": false,
                              "name": "LastName",
                              "value": "Burdell"
                            }
                          ],
                          "id": "a78a34c2-a292-4c6e-ba7c-29a05fd671ab",
                          "identifier": "gpburdell@onetrust.com",
                          "language": "en-US",
                          "lastUpdatedDate": "2023-06-20T15:59:32.06644698",
                          "purposes": [
                            {
                              "attributes": {
                                "Dealership": [
                                  "OneTrust Auto World"
                                ]
                              },
                              "consentDate": "2023-06-20T15:00:26.343",
                              "customPreferences": [
                                {
                                  "id": "e1df7c1c-5567-4a51-a5fc-886730681792",
                                  "name": "Email Frequency",
                                  "options": [
                                    {
                                      "Id": "bdac1379-e47c-45ae-a3e0-848e864dc470",
                                      "name": "Daily"
                                    }
                                  ]
                                }
                              ],
                              "expiryDate": "2023-09-19T22:26:44.551976093",
                              "firstTransactionDate": "2022-08-01T20:46:06.8",
                              "id": "c50d0577-bcc3-42b6-94d5-c2207468fecd",
                              "lastInteractionDate": "2023-06-20T15:00:26.343",
                              "lastReceiptId": "ef0debc6-5870-421c-b42b-567681dbfa66",
                              "lastTransactionCollectionPointId": "00000000-0000-0000-0000-000000000000",
                              "lastTransactionCollectionPointVersion": 1,
                              "lastTransactionDate": "2023-06-20T14:59:26.551976093",
                              "lastUpdatedDate": "2023-06-20T15:00:26.343",
                              "name": "Marketing Communications",
                              "purposeNote": {
                                "isValidNote": true,
                                "noteId": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
                                "noteLanguage": "en-us",
                                "noteText": "I did not sign up for this.",
                                "noteType": "UNSUBSCRIBE_REASON"
                              },
                              "status": "ACTIVE",
                              "topics": [
                                {
                                  "id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                                  "isConsented": true,
                                  "name": "Car Marketing"
                                }
                              ],
                              "totalTransactionCount": 30476,
                              "version": 10,
                              "withdrawalDate": "2023-06-20T14:57:35.88"
                            }
                          ],
                          "testDataSubject": false
                        }
                      ],
                      "empty": false,
                      "first": true,
                      "last": false,
                      "number": 0,
                      "numberOfElements": 1,
                      "pageable": {
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 1,
                        "paged": true,
                        "requestContinuation": "{\"token\":\"-RID:~iNFkALatnk6BhB4AAAAAAA==#RT:1#TRC:1#ISV:2#IEO:65567#QCF:8\",\"range\":{\"min\":\"\",\"max\":\"FF\"}}",
                        "sort": {
                          "empty": true,
                          "sorted": false,
                          "unsorted": true
                        },
                        "unpaged": false
                      },
                      "size": 1,
                      "sort": {
                        "empty": true,
                        "sorted": false,
                        "unsorted": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get List of Data Subjects",
        "tags": [
          "Data Subjects V3"
        ]
      }
    },
    "/rest/api/preferences/v3/datasubjects/profile": {
      "get": {
        "description": "> ❗️ Migration Recommendation\n> \n> Please, do not adopt this API if you have not already done so. Continue to use the [Get List of Data Subjects](https://developer.onetrust.com/onetrust/reference/getdatasubjectprofileusingget) V1 API or request access to have Data Subjects V4 APIs enabled.\n\nUse this API to retrieve a single data subject using the `identifer` header parameter.\n\n> 🗒 Things to Know\n> \n> - This API can also be used to retrieve the magic link token as `linkToken` in the response.\n> - This API will remain available during maintenance periods.\n> - This API is not designed to be used in workflows.",
        "operationId": "getV3DatasubjectsProfileUsingGet",
        "parameters": [
          {
            "description": "Data subject to return details for. Example- johndoe@onetrust.com",
            "in": "header",
            "name": "identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Includes the data subject's instant link token in the response that is used to login to the preference center.",
            "in": "query",
            "name": "includeInstantLinkToken",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Includes whether the data subject's phone numbers are on the FTC Do Not Call registry or not.",
            "in": "query",
            "name": "isDNCInclude",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK\n\n\nResponse body contains a single data subject's profile, including purposes, preferences and data elements.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSubjectProfileDtoV3"
                },
                "examples": {
                  "response": {
                    "value": {
                      "dataSubjectProfile": {
                        "additionalIdentifierInstantLinkTokens": {
                          "portal_id_001": [
                            "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENX_01",
                            "eyJraWQiOiJobUxKWjJmbDBvc2VDMXk5REIvRDJLaUFBaXlaQzF4d2pldzJ5ekxUSmFORFFTbjFVdENWclRLbkhLbnUzNFZENX_02"
                          ]
                        },
                        "createdDate": "2020-01-12T16:11:25.479Z",
                        "dataElements": [
                          {
                            "linked": false,
                            "name": "Work Email",
                            "value": "example@otprivacy.com"
                          },
                          {
                            "linked": true,
                            "name": "Portal ID",
                            "value": "portal_id_001"
                          }
                        ],
                        "id": "1b1f53d3-dc40-4288-abf1-74a4a4c33510",
                        "identifier": "example@otprivacy.com",
                        "language": "en-us",
                        "lastUpdatedDate": "2020-01-12T16:11:25.479Z",
                        "latestGeolocation": {
                          "country": "USA",
                          "dataSubjectId": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                          "receiptGuid": "b1071397-bec1-4218-a884-3916ad52a14a",
                          "state": "GA",
                          "stateName": "Georgia"
                        },
                        "linkToken": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
                        "notices": [
                          {
                            "collectionPoint": {
                              "id": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
                              "name": "Entity Name",
                              "version": 1
                            },
                            "guid": "1439b150-ef4c-444c-a20e-44622c8ccaf3",
                            "id": "05e30742-7e6c-4916-a5a1-7742a14ee984",
                            "name": "Marketing Notice",
                            "privacyNoticeVersion": {
                              "id": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
                              "name": "Entity Name",
                              "version": 1
                            },
                            "purposes": [
                              {
                                "id": "cbac5669-1445-4520-ba15-b1993902b295",
                                "name": "Entity Name"
                              }
                            ],
                            "type": "EMBEDDED",
                            "url": "www.onetrust.com"
                          }
                        ],
                        "purposes": [
                          {
                            "attributes": {
                              "property1": [
                                "string"
                              ],
                              "property2": [
                                "string"
                              ]
                            },
                            "consentDate": "2020-01-07T13:18:23.123Z",
                            "customPreferences": [
                              {
                                "id": "c4a57a38-3774-45ad-9fa4-dbc545542232",
                                "name": "Email Frequency",
                                "options": [
                                  {
                                    "id": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                                    "isConsented": true,
                                    "name": "Weekly"
                                  }
                                ]
                              }
                            ],
                            "expiryDate": "2020-01-07T13:18:23.123Z",
                            "firstTransactionDate": "2020-01-05T11:34:30.974Z",
                            "geolocation": {
                              "country": "USA",
                              "dataSubjectId": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
                              "receiptGuid": "b1071397-bec1-4218-a884-3916ad52a14a",
                              "state": "GA",
                              "stateName": "Georgia"
                            },
                            "groupEffectiveStatus": [
                              {
                                "effectiveStatus": "ACTIVE",
                                "groupId": "f2229953-b4b5-4042-8cb9-b78038cc4c46"
                              }
                            ],
                            "id": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                            "lastInteractionDate": "2020-01-05T11:34:30.974Z",
                            "lastReceiptId": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
                            "lastTransactionCollectionPointId": "04a2213c-00c4-46cd-a530-adc67fd1f8fd",
                            "lastTransactionCollectionPointVersion": 0,
                            "lastTransactionDate": "2020-01-12T16:11:25.479Z",
                            "lastUpdatedDate": "2020-01-05T11:34:30.974Z",
                            "name": "Marketing Communications",
                            "purposeNote": {
                              "isValidNote": true,
                              "noteId": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
                              "noteLanguage": "en-US",
                              "noteText": "I did not sign up for this.",
                              "noteType": "UNSUBSCRIBE_REASON"
                            },
                            "status": "ACTIVE",
                            "topics": [
                              {
                                "id": "497c4383-2c61-4906-aed0-660e3fd03ef0",
                                "isConsented": true,
                                "name": "Car Marketing"
                              }
                            ],
                            "totalTransactionCount": 3,
                            "version": 2,
                            "withdrawalDate": "2020-01-12T16:11:25.479Z"
                          }
                        ],
                        "testDataSubject": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "429": {
            "description": "Too Many Requests\nFor more information, see [API Rate Limits](https://developer.onetrust.com/onetrust/reference/rate-limits-overview).",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds after which requests will be allowed again.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-period": {
                "description": "The unit of time for which the rate limit applies.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "HOUR",
                    "MINUTE"
                  ]
                }
              },
              "ot-ratelimit-event-id": {
                "description": "The unique identifier for the rate-limiting event.",
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "ot-request-made": {
                "description": "The number of requests made within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "ot-requests-allowed": {
                "description": "The number of requests allowed within the specified period.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CONSENT",
              "CONSENT_READ"
            ]
          }
        ],
        "summary": "Get Data Subject",
        "tags": [
          "Data Subjects V3"
        ]
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Collection Points"
    },
    {
      "name": "Collection Points V2"
    },
    {
      "name": "Consent Attachments"
    },
    {
      "name": "Consent Groups"
    },
    {
      "name": "Consent Rate Optimization"
    },
    {
      "name": "Data Subject Groups"
    },
    {
      "name": "Data Subjects"
    },
    {
      "name": "Data Subjects V2"
    },
    {
      "name": "Data Subjects V3"
    },
    {
      "name": "Magic Link Tokens"
    },
    {
      "name": "Merge Duplicate Data Subjects"
    },
    {
      "name": "Preference Centers"
    },
    {
      "name": "Preference Centers V2"
    },
    {
      "name": "Purpose Preferences"
    },
    {
      "name": "Purposes"
    },
    {
      "name": "Purposes V2"
    },
    {
      "name": "Receipts"
    },
    {
      "name": "Receipts V2"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Transactions V2"
    }
  ],
  "x-onetrust": {
    "links": {
      "Consent & Preference Management Knowledge Base": "https://my.onetrust.com/s/topic/0TO3q000000kIWOGA2/consent-management"
    },
    "spec-label": "Swagger 2"
  },
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": false
  },
  "servers": [
    {
      "url": "https://customer.my.onetrust.com"
    }
  ],
  "components": {
    "requestBodies": {
      "ContinuationToken": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContinuationToken"
            }
          }
        },
        "required": true
      },
      "LinkedIdentityGroupRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LinkedIdentityGroupRequest"
            }
          }
        },
        "description": "request",
        "required": true
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://{$$.env.host}/api/access/v1/oauth/token",
            "scopes": {
              "CONSENT": "Consent Scope gives the user access to read/write operations",
              "CONSENT_READ": "Consent Read Scope gives the user read-only access"
            }
          }
        }
      }
    },
    "schemas": {
      "AdvancedPreferenceCenterDto": {
        "properties": {
          "autoCheckTopics": {
            "description": "Boolean flag that denotes if auto check topics feature is enabled for the Preference center",
            "example": false,
            "type": "boolean"
          },
          "defaultLanguage": {
            "description": "The default language of the preference center",
            "example": "en",
            "type": "string"
          },
          "displayNotificationPurpose": {
            "description": "Boolean flag that denotes if Notification purpose needs to be displayed on the Preference center",
            "example": false,
            "type": "boolean"
          },
          "displayPageLevelSubscribeSettings": {
            "description": "Boolean flag that denotes if Subscribe settings section is allowed to be configured specific to each Preference center page",
            "example": false,
            "type": "boolean"
          },
          "displaySubscribeSettings": {
            "description": "Boolean flag that denotes if Subscribe settings section needs to be displayed for the Preference center",
            "example": false,
            "type": "boolean"
          },
          "displayUnsubscribeAll": {
            "description": "Boolean flag that denotes if Unsubscribe-All section needs to be displayed for the Preference center",
            "example": false,
            "type": "boolean"
          },
          "enableMultipleIdentities": {
            "description": "Boolean flag that denotes if Multi-Identity is enabled for the Preference center",
            "example": false,
            "type": "boolean"
          },
          "languages": {
            "description": "A list of translations for the preference center",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "notificationPurpose": {
            "$ref": "#/components/schemas/PCPurposeDto"
          },
          "pages": {
            "description": "A list of all the attached Pages to the Preference center",
            "items": {
              "$ref": "#/components/schemas/PreferenceCenterPageDto"
            },
            "type": "array"
          },
          "preferenceCenterSettings": {
            "description": "A list of labels and their translations for the preference center",
            "type": "object"
          }
        },
        "title": "AdvancedPreferenceCenterDto",
        "type": "object"
      },
      "CollectionPointCreateRequest": {
        "properties": {
          "AllowMultipleIdentifierTypes": {
            "description": "Allow the Collection Point to generate data subjects with more than one identifier. Note: this feature is under preview for `API` and `HOSTED_WEB_FORM` Collection Points only",
            "example": false,
            "type": "boolean"
          },
          "CollectionPointType": {
            "description": "The type of the Collection Point",
            "enum": [
              "WEB_FORM",
              "API",
              "COOKIE",
              "NOTIFICATION_OPT_OUT",
              "ADMIN_UPDATE"
            ],
            "example": "WEB_FORM",
            "type": "string"
          },
          "ConsentIntegration": {
            "description": "Setting to fire the Data Subject Consent Updated integrations event. Note: we recommend using the `EnableNewConsentIntegration` setting to fire the Data Subject Profile Updated event instead",
            "example": false,
            "type": "boolean"
          },
          "ConsentType": {
            "description": "Consent type of the Collection Point",
            "enum": [
              "FORMSUBMIT",
              "EXPLICIT",
              "UNAMBIGUOUS",
              "OPTINCHECKBOX",
              "OPTOUTCHECKBOX",
              "SINGLETRIGGER",
              "CONDITIONALTRIGGER",
              "COOKIEBANNER",
              "UNCHECKOPTOUT",
              "CHECKOPTOUT"
            ],
            "example": "FORMSUBMIT",
            "type": "string"
          },
          "DOISendConfirmationEmail": {
            "description": "Double Opt In child setting to send the confirmation email or not. Note: the confirmation link is included in the Data Subject Profile Updated integrations event, which can be used to send custom email or sms messages",
            "example": false,
            "type": "boolean"
          },
          "DataElements": {
            "description": "A list containing the Data Elements that are collected",
            "example": [
              "First Name",
              "Last Name",
              "Work Email"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the Collection Point",
            "example": "Collecting data for Marketing and Promotion Purposes",
            "type": "string"
          },
          "DoiEmailToParent": {
            "description": "When enabling the parental consent feature and double opt in emails, emails will be sent to the parent identifier by default instead of the child identifier. For more information about this preview feature see this [article](https://my.onetrust.com/s/article/UUID-f247abdd-fc02-413f-f5b8-17bff9dca4fa?topicId=0TO1Q000000ItSSWA0)",
            "example": false,
            "type": "boolean"
          },
          "DoubleOptIn": {
            "description": "Whether Double Opt In (email confirmation) is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "EnableGeoLocationForDataElements": {
            "description": "Setting to capture Data Subject's geolocation if they provide consent with a specific data element. Note the geolocation feature is currently under preview",
            "example": false,
            "type": "boolean"
          },
          "EnableGeolocation": {
            "description": "Setting to capture Data Subject's geolocation if they provide consent with a specific purpose. Note the geolocation feature is currently under preview",
            "example": false,
            "type": "boolean"
          },
          "EnableNewConsentIntegration": {
            "description": "Setting to fire the Data Subject Profile Updated integrations event. For more information see this [article](https://my.onetrust.com/s/article/UUID-58e8b9fb-0e47-5aca-713b-c2f26102d60c)",
            "example": false,
            "type": "boolean"
          },
          "EnablePrimaryIdentifier": {
            "description": "Setting to enable primary identifier. If this parameter is set to true then \"PrimaryIdentifierType\" is required.",
            "example": false,
            "type": "boolean"
          },
          "EnablePublishEvent": {
            "description": "Setting to fire the Collection Point Published integrations event. For more information see this [article](https://my.onetrust.com/s/article/UUID-58e8b9fb-0e47-5aca-713b-c2f26102d60c)",
            "example": false,
            "type": "boolean"
          },
          "HostedSDK": {
            "description": "Whether the SDK settings are published to external storage for quicker integration. This is enabled by default for all web form type collection points",
            "example": false,
            "type": "boolean"
          },
          "IABVendorId": {
            "description": "The IAB Vendor Id. Used for legacy mobile Collection Points",
            "example": 13,
            "format": "int32",
            "type": "integer"
          },
          "IdentifierDataElementId": {
            "description": "Unique identifier for the Data Element. Note: this can be found in the url path when viewing Data Element details under the Consent & Preference Management module",
            "example": "7912bfe1-37dd-4180-8b99-963e80f3e125",
            "format": "uuid",
            "type": "string"
          },
          "IdentifierTypes": {
            "description": "Used in conjunction with the `AllowMultipleIdentifierTypes` setting. The List of Data Subject identifiers that can be used for the Collection Point",
            "example": "Email, Mobile",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "IsAuthenticationRequired": {
            "description": "Setting to require authentication for a collection point. For more information see this [article](https://my.onetrust.com/s/article/UUID-b359a104-1900-9ac9-7765-ee08c8047f1d?topicId=0TO3q000000kIUHGA2)",
            "example": false,
            "type": "boolean"
          },
          "IsDynamicCollectionPoint": {
            "description": "Whether this is a dynamic collection point or not. For more information see this [article](https://my.onetrust.com/s/article/UUID-358c7e03-1d60-ff3b-e443-25d4283c7ac3?topicId=0TO3q000000kIWXGA2)",
            "example": false,
            "type": "boolean"
          },
          "Language": {
            "description": "The Collection Point default language code",
            "example": "en-us",
            "type": "string"
          },
          "Languages": {
            "description": "List containing the Collection Point translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Name": {
            "description": "Name of the Collection Point",
            "example": "Web Form Collection Point",
            "type": "string"
          },
          "NewSdkIntegrationEnabled": {
            "description": "Whether new sdk integration is enabled or not. SDK can be loaded in the <head> and a new script is no longer required for each form",
            "example": false,
            "type": "boolean"
          },
          "NoConsentTransactions": {
            "description": "Whether no consent transactions can be recorded against the collection point. For more information about consent transaction types and purpose statuses see this [article](https://my.onetrust.com/s/article/UUID-d4ed05a9-a999-f2cb-8272-610a5817b43f?topicId=0TO1Q000000bHgoWAE)",
            "example": false,
            "type": "boolean"
          },
          "OrganizationId": {
            "description": "The unique Identifier of the Organization associated with the Collection Point. Note: this can be found in the url path when viewing Organization details under global settings",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
            "format": "uuid",
            "type": "string"
          },
          "OverrideActivePurpose": {
            "description": "Used in conjunction with the double opt in reconfirmation and purpose expiration features. This setting is enabled by default and can be turned off if it is desired for a purpose to remain in active status until expired if a data subject does not reconfirm their consent",
            "example": true,
            "type": "boolean"
          },
          "ParentIdentifierTypes": {
            "description": "The List of parent Data Subject identifier types for the Collection Point. Note: this setting is used with the Consent on Behalf and Multiple Data Subject Identifiers preview features",
            "example": "Email, Mobile",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "PreferenceCenterGuid": {
            "description": "Unique identifier for a Preference Center to associate with this Collection Point",
            "example": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
            "format": "uuid",
            "type": "string"
          },
          "PrimaryIdentifierType": {
            "description": "The primary Data Subject identifier of the Collection Point.",
            "example": "Email",
            "type": "string"
          },
          "PrivacyPolicyUrl": {
            "description": "URL that redirects to a Privacy Policy associated with this Collection Point",
            "example": "https://www.onetrust.com/privacy-notice",
            "type": "string"
          },
          "PurposeId": {
            "description": "Comma-separated list of Purpose unique identifiers. Will default to the most recent purpose version. It is recommended to use the `PurposeIdsWithVersion` field and specify the desired version",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46,a6d68a29-a185-40e8-ac4c-5656d4856b0a",
            "type": "string"
          },
          "PurposeIds": {
            "description": "List of Purpose unique identifiers. Will default to the most recent purpose version. It is recommended to use the `PurposeIdsWithVersion` field and specify the desired version",
            "example": [
              "f2229953-b4b5-4042-8cb9-b78038cc4c46",
              "a6d68a29-a185-40e8-ac4c-5656d4856b0a"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "PurposeIdsWithVersion": {
            "description": "A list containing the Id of Purpose along with Version",
            "items": {
              "$ref": "#/components/schemas/IdVersionPairDto"
            },
            "type": "array"
          },
          "ReconfirmActivePurpose": {
            "description": "Used in conjunction with the double opt in feature. Will treat a returning data subject the same as a new one, and trigger the confirmation email event when re-consenting to the same purpose",
            "example": false,
            "type": "boolean"
          },
          "RedirectUrl": {
            "description": "Used in Double Opt In confirmation email to redirect the Data Subject to another website after confirming their consent",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "ResponsibleGroupId": {
            "description": "The Unique Identifier of the Responsible Group. Note: this can be found in the url path when viewing Responsible Group details under global settings",
            "example": "5466af43-ff42-4a39-8722-5a98e7981fc4",
            "format": "uuid",
            "type": "string"
          },
          "ResponsibleUserId": {
            "description": "The Unique Identifier of the Responsible User. Note: this can be found in the url path when viewing Responsible User details under global settings",
            "example": "bc4836e2-c117-461b-a7a2-2b268c037a97",
            "format": "uuid",
            "type": "string"
          },
          "SendConsentEmail": {
            "description": "Switch on or off the Consent Acknowledgement Email feature for a Collection Point",
            "example": false,
            "type": "boolean"
          },
          "SubjectIdentifier": {
            "description": "The Data Subject identifier of the Collection Point. Note: this string is the Data Element name when viewing details under the Consent & Preference Management module",
            "example": "Email",
            "type": "string"
          },
          "WebFormUrl": {
            "description": "URL on which the Collection Point is hosted",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "doubleOptInExcludedPurposes": {
            "description": "Exclude certain Purposes on the Collection Point from the Double Opt-In workflow. Incoming consent for excluded purposes can be placed directly in Active status without requiring additional confirmation by the data subject.",
            "items": {
              "properties": {
                "excludeFromDoubleOptIn": {
                  "description": "Indicates whether or not purpose should be excluded from the Double Opt-In workflow.",
                  "example": true,
                  "type": "boolean"
                },
                "purposeGuid": {
                  "description": "Purpose unique identifier.",
                  "example": "edaa3f68-8254-4ef4-997e-1d4455e84033",
                  "format": "uuid",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "CollectionPointType",
          "OrganizationId",
          "Name",
          "IdentifierDataElementId",
          "Description"
        ],
        "title": "CollectionPointCreateRequest",
        "type": "object"
      },
      "CollectionPointDetailDto": {
        "properties": {
          "ActivationDate": {
            "description": "The Collection Point activation date",
            "example": "2018-03-15T12:00:20.123",
            "format": "date-time",
            "type": "string"
          },
          "CanCreateNewVersion": {
            "description": "Whether a new version of the collection point can be created or not",
            "example": true,
            "type": "boolean"
          },
          "CollectionPointType": {
            "description": "Type of the Collection Point",
            "enum": [
              "WEB_FORM",
              "MOBILE_APPLICATION",
              "BULK_IMPORT",
              "API",
              "PREFERENCE_CENTER",
              "COOKIE",
              "NOTIFICATION_OPT_OUT",
              "ADMIN_UPDATE"
            ],
            "example": "WEB_FORM",
            "type": "string"
          },
          "ConsentIntegration": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "ConsentType": {
            "description": "Consent type of the Collection Point",
            "enum": [
              "EXPLICIT",
              "UNAMBIGUOUS",
              "FORMSUBMIT",
              "OPTINCHECKBOX",
              "OPTOUTCHECKBOX",
              "SINGLETRIGGER",
              "CONDITIONALTRIGGER",
              "COOKIEBANNER"
            ],
            "example": "FORMSUBMIT",
            "type": "string"
          },
          "CreateDate": {
            "description": "Created Date of the Collection Point",
            "example": "2018-03-22T20:55:40.237",
            "format": "date-time",
            "type": "string"
          },
          "DataElements": {
            "description": "List containing the Data Elements associated with the Collection Point",
            "example": [
              "First Name",
              "Last Name",
              "Address"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the Collection Point",
            "example": "Collecting data for Marketing and Promotion Purposes",
            "type": "string"
          },
          "Disabled": {
            "description": "Whether this collection point is disabled or not",
            "example": false,
            "type": "boolean"
          },
          "DoubleOptIn": {
            "description": "Whether Double Opt In (email confirmation) is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "EnableNewConsentIntegration": {
            "type": "boolean"
          },
          "FirstReceiptOn": {
            "description": "Date the first consent receipt was generated on for the Collection Point",
            "example": "2018-05-12T12:23:25.243",
            "format": "date-time",
            "type": "string"
          },
          "HostedSDK": {
            "description": "Whether the settings are published to external storage for quicker integration",
            "example": false,
            "type": "boolean"
          },
          "IABVendorId": {
            "description": "The IAB Vendor Id (mobile Collection Points)",
            "example": 13,
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "description": "Unique Identifier of the Collection Point",
            "example": "25d9ccac-db88-4d34-849c-3d602a629961",
            "format": "uuid",
            "type": "string"
          },
          "IdentifierDataElement": {
            "$ref": "#/components/schemas/CustomDataElementDto"
          },
          "IsAuthenticationRequired": {
            "type": "boolean"
          },
          "Language": {
            "description": "The Collection Point default language code",
            "example": "en-us",
            "type": "string"
          },
          "Languages": {
            "description": "List containing the Collection Point translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "LastActivityDate": {
            "description": "Date on which the latest activity was recorded",
            "example": "2020-01-10T18:12:13.543",
            "format": "date-time",
            "type": "string"
          },
          "LastSdkIntegrationDate": {
            "description": "The date that the SDK Integration was last copied on",
            "example": "2020-01-08T14:25:11.112",
            "format": "date-time",
            "type": "string"
          },
          "Name": {
            "description": "Name of the Collection Point",
            "example": "Web Form Collection Point",
            "type": "string"
          },
          "NoConsentTransactions": {
            "description": "Whether transactions with no consent given are recorded, or not",
            "example": false,
            "type": "boolean"
          },
          "OrganizationId": {
            "description": "The unique Identifier of the Organization associated with the Collection Point",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
            "format": "uuid",
            "type": "string"
          },
          "PreferenceCenter": {
            "$ref": "#/components/schemas/PreferenceCenterSummaryDto"
          },
          "PrivacyPolicyUrl": {
            "description": "URL that redirects to the Privacy Policy",
            "example": "https://www.onetrust.com/privacy-notice",
            "type": "string"
          },
          "Purposes": {
            "description": "The list of Purposes associated with the Collection Point",
            "items": {
              "$ref": "#/components/schemas/PurposeDto"
            },
            "type": "array"
          },
          "ReceiptCount": {
            "description": "Number of consent receipts issued from this Collection Point",
            "example": 563,
            "format": "int64",
            "type": "integer"
          },
          "RedirectUrl": {
            "description": "Used in Double Opt In confirmation email to redirect the Data Subject to another website",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "ResponsibleGroupId": {
            "description": "The Unique Identifier of the Responsible Group",
            "example": "5466af43-ff42-4a39-8722-5a98e7981fc4",
            "format": "uuid",
            "type": "string"
          },
          "ResponsibleUserId": {
            "description": "The Unique Identifier of the Responsible User",
            "example": "bc4836e2-c117-461b-a7a2-2b268c037a97",
            "format": "uuid",
            "type": "string"
          },
          "SendConsentEmail": {
            "description": "Whether to send a Consent Acknowledgement Email or not",
            "example": false,
            "type": "boolean"
          },
          "Status": {
            "description": "Status of the Collection Point",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED",
              "INACTIVE"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "SubjectIdentifier": {
            "description": "The Data Subject identifier of the Collection Point",
            "example": "Email",
            "type": "string"
          },
          "Version": {
            "description": "Version of the Collection Point",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "WebFormUrl": {
            "description": "URL on which the Collection Point is hosted",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Collection Point Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          }
        },
        "title": "CollectionPointDetailDto",
        "type": "object"
      },
      "CollectionPointDtoGetV2Response": {
        "description": "DTO which returns CollectionPoint details",
        "properties": {
          "activationDate": {
            "description": "The Collection Point activation date",
            "example": "2018-03-15T12:00:20.123",
            "format": "date-time",
            "type": "string"
          },
          "canCreateNewVersion": {
            "description": "Whether a new version of the Collection Point can be created or not",
            "example": true,
            "type": "boolean"
          },
          "collectionPointType": {
            "description": "Type of the Collection Point",
            "enum": [
              "WEB_FORM",
              "MOBILE_APPLICATION",
              "BULK_IMPORT",
              "API",
              "PREFERENCE_CENTER",
              "COOKIE",
              "NOTIFICATION_OPT_OUT",
              "ADMIN_UPDATE"
            ],
            "example": "WEB_FORM",
            "type": "string"
          },
          "consentIntegration": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "consentType": {
            "description": "Consent type of the Collection Point",
            "enum": [
              "EXPLICIT",
              "UNAMBIGUOUS",
              "FORMSUBMIT",
              "OPTINCHECKBOX",
              "OPTOUTCHECKBOX",
              "SINGLETRIGGER",
              "CONDITIONALTRIGGER",
              "COOKIEBANNER"
            ],
            "example": "FORMSUBMIT",
            "type": "string"
          },
          "createDate": {
            "description": "Created Date of the Collection Point",
            "example": "2018-03-22T20:55:40.237",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "Created Date of the collection point",
            "example": "D452EC68-71C4-4935-9F17-5FD054365805",
            "type": "string"
          },
          "dataElements": {
            "description": "List containing the data elements associated with the collection point",
            "example": [
              "First Name",
              "Last Name",
              "Address"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Collection Point",
            "example": "Collecting data for Marketing and Promotion Purposes",
            "type": "string"
          },
          "doubleOptIn": {
            "description": "Whether Double Opt In (email confirmation) is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "enableNewConsentIntegration": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "firstReceiptOn": {
            "description": "Date the first consent receipt was generated on for the Collection Point",
            "example": "2018-05-12T12:23:25.243",
            "format": "date-time",
            "type": "string"
          },
          "hostedSDK": {
            "description": "Whether the settings are published to external storage for quicker integration",
            "example": false,
            "type": "boolean"
          },
          "iabVendorId": {
            "description": "The IAB Vendor Id (mobile Collection Points)",
            "example": 13,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the Collection Point",
            "example": "25d9ccac-db88-4d34-849c-3d602a629961",
            "format": "uuid",
            "type": "string"
          },
          "identifierDataElement": {
            "$ref": "#/components/schemas/CustomDataElementGetV2"
          },
          "isAuthenticationRequired": {
            "description": " If true, calls to v1/consentreceipts to register consent for the Collection Point have to include a bearer token which includes the data subject identifier and the digital signature can be verified with credentials available to OneTrust consent instances",
            "example": false,
            "type": "boolean"
          },
          "jwtToken": {
            "description": " Token generated from the Collection Point metadata, which must be included as request parameter with a field name \"requestInformation\" in all calls to v1/consentreceipts when creating a consent record",
            "example": false,
            "type": "object"
          },
          "language": {
            "description": "The Collection Point default language code",
            "example": "en-us",
            "type": "string"
          },
          "languages": {
            "description": "List containing the Collection Point translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastActivityDate": {
            "description": "Date on which the latest activity was recorded",
            "example": "2020-01-10T18:12:13.543",
            "format": "date-time",
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Id of the user who last updated collection point",
            "example": "304F7D36-75A2-4967-81A5-5A7D604C6A19",
            "type": "string"
          },
          "lastSdkIntegrationDate": {
            "description": "Last time the SDK was copied from via the UI",
            "example": "2020-01-08T14:25:11.112",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Unsubscribe from privacy notice",
            "example": "A name you give the collection point to help you identify the unique source of the consent data",
            "type": "string"
          },
          "noConsentTransactions": {
            "description": "Whether transactions with no consent given are recorded, or not",
            "example": false,
            "type": "boolean"
          },
          "noticesWithVersions": {
            "description": "List of notices attached to the Collection Point",
            "example": [
              "id",
              "name",
              "privacyNoticeGuid"
            ],
            "items": {
              "$ref": "#/components/schemas/CollectionPointNoticeWithVersionGetDto"
            },
            "type": "array"
          },
          "organizationId": {
            "description": "The unique Identifier of the Organization associated with the Collection Point",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
            "format": "uuid",
            "type": "string"
          },
          "preferenceCenter": {
            "$ref": "#/components/schemas/PreferenceCenterSummaryDto"
          },
          "privacyPolicyUrl": {
            "description": "URL that redirects to the Privacy Policy",
            "example": "https://www.onetrust.com/privacy-notice",
            "type": "string"
          },
          "publishedBy": {
            "description": "Id of the user who last published the collection point",
            "example": "304F7D36-75A2-4967-81A5-5A7D604C6A19",
            "type": "string"
          },
          "purposes": {
            "description": "The list of Purposes associated with the Collection Point",
            "items": {
              "$ref": "#/components/schemas/PurposeDetailDtoV2Get"
            },
            "type": "array"
          },
          "receiptCount": {
            "description": "Number of consent receipts issued from this Collection Point",
            "example": 563,
            "format": "int64",
            "type": "integer"
          },
          "reconfirmActivePurpose": {
            "description": "Whether reconsent for an active purpose is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "redirectUrl": {
            "description": "Used in Double Opt In confirmation email to redirect the DataSubject to another website",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "responsibleGroupId": {
            "description": "Id of the User Group that is assigned as the responsible user for the Collection Point, and would receive notifications sent by the application about the Collection point",
            "example": "5466af43-ff42-4a39-8722-5a98e7981fc4",
            "format": "uuid",
            "type": "string"
          },
          "responsibleUserId": {
            "description": "Id of the User that is assigned as the responsible user for the Collection Point, and would receive notifications sent by the application about the Collection point",
            "example": "bc4836e2-c117-461b-a7a2-2b268c037a97",
            "format": "uuid",
            "type": "string"
          },
          "sendConsentEmail": {
            "description": "Whether to send a Consent Acknowledgement Email or not",
            "example": false,
            "type": "boolean"
          },
          "status": {
            "description": "Status of the Collection Point",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED",
              "INACTIVE"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "subjectIdentifier": {
            "description": "The type of data element that is used by the Collection Point to uniquely identify the data subject, e.g Email address or telephone number",
            "example": "Email",
            "type": "string"
          },
          "version": {
            "description": "Version of the Collection Point",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "warningReasons": {
            "description": "Reasons for warning",
            "items": {
              "enum": [
                "SDK_OUT_OF_DATE",
                "NO_ACTIVITY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "webFormUrl": {
            "description": "URL on which the Collection Point is hosted",
            "example": "https://www.onetrust.com/",
            "type": "string"
          }
        },
        "title": "CollectionPointDtoGetV2Response",
        "type": "object"
      },
      "CollectionPointDtoV2": {
        "description": "DTO which returns CollectionPoint details",
        "properties": {
          "activationDate": {
            "description": "The Collection Point activation date",
            "example": "2018-03-15T12:00:20.123",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Collection Point Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          },
          "canCreateNewVersion": {
            "description": "Whether a new version of the Collection Point can be created or not",
            "example": true,
            "type": "boolean"
          },
          "collectionPointType": {
            "description": "Type of the Collection Point",
            "enum": [
              "WEB_FORM",
              "MOBILE_APPLICATION",
              "BULK_IMPORT",
              "API",
              "PREFERENCE_CENTER",
              "COOKIE",
              "NOTIFICATION_OPT_OUT",
              "ADMIN_UPDATE"
            ],
            "example": "WEB_FORM",
            "type": "string"
          },
          "consentIntegration": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "consentType": {
            "description": "Consent type of the Collection Point",
            "enum": [
              "EXPLICIT",
              "UNAMBIGUOUS",
              "FORMSUBMIT",
              "OPTINCHECKBOX",
              "OPTOUTCHECKBOX",
              "SINGLETRIGGER",
              "CONDITIONALTRIGGER",
              "COOKIEBANNER"
            ],
            "example": "FORMSUBMIT",
            "type": "string"
          },
          "createDate": {
            "description": "Created Date of the Collection Point",
            "example": "2018-03-22T20:55:40.237",
            "format": "date-time",
            "type": "string"
          },
          "dataElements": {
            "description": "List containing the Data Elements associated with the Collection Point",
            "example": [
              "First Name",
              "Last Name",
              "Address"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Collection Point",
            "example": "Collecting data for Marketing and Promotion Purposes",
            "type": "string"
          },
          "doubleOptIn": {
            "description": "Whether Double Opt In (email confirmation) is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "enableNewConsentIntegration": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "firstReceiptOn": {
            "description": "Date the first consent receipt was generated on for the Collection Point",
            "example": "2018-05-12T12:23:25.243",
            "format": "date-time",
            "type": "string"
          },
          "hostedSDK": {
            "description": "Whether the settings are published to external storage for quicker integration",
            "example": false,
            "type": "boolean"
          },
          "iabVendorId": {
            "description": "The IAB Vendor Id (mobile Collection Points)",
            "example": 13,
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "Unique Identifier of the Collection Point",
            "example": "25d9ccac-db88-4d34-849c-3d602a629961",
            "format": "uuid",
            "type": "string"
          },
          "identifierDataElement": {
            "$ref": "#/components/schemas/CustomDataElementDtoV2"
          },
          "isAuthenticationRequired": {
            "description": "Setting for sending an event to third-party integrations",
            "example": false,
            "type": "boolean"
          },
          "language": {
            "description": "The Collection Point default language code",
            "example": "en-us",
            "type": "string"
          },
          "languages": {
            "description": "List containing the Collection Point translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastActivityDate": {
            "description": "Date on which the latest activity was recorded",
            "example": "2020-01-10T18:12:13.543",
            "format": "date-time",
            "type": "string"
          },
          "lastSdkIntegrationDate": {
            "description": "The date that the SDK Integration was last copied on",
            "example": "2020-01-08T14:25:11.112",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the Collection Point",
            "example": "Web Form Collection Point",
            "type": "string"
          },
          "noConsentTransactions": {
            "description": "Whether transactions with no consent given are recorded, or not",
            "example": false,
            "type": "boolean"
          },
          "organizationId": {
            "description": "The unique Identifier of the Organization associated with the Collection Point",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
            "format": "uuid",
            "type": "string"
          },
          "privacyPolicyUrl": {
            "description": "URL that redirects to the Privacy Policy",
            "example": "https://www.onetrust.com/privacy-notice",
            "type": "string"
          },
          "purposes": {
            "description": "The list of Purposes associated with the Collection Point",
            "items": {
              "$ref": "#/components/schemas/PurposeDetailDtoV2"
            },
            "type": "array"
          },
          "receiptCount": {
            "description": "Number of consent receipts issued from this Collection Point",
            "example": 563,
            "format": "int64",
            "type": "integer"
          },
          "redirectUrl": {
            "description": "Used in Double Opt In confirmation email to redirect the DataSubject to another website",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "responsibleGroupId": {
            "description": "The Unique Identifier of the Responsible Group",
            "example": "5466af43-ff42-4a39-8722-5a98e7981fc4",
            "format": "uuid",
            "type": "string"
          },
          "responsibleUserId": {
            "description": "The Unique Identifier of the Responsible User",
            "example": "bc4836e2-c117-461b-a7a2-2b268c037a97",
            "format": "uuid",
            "type": "string"
          },
          "sendConsentEmail": {
            "description": "Whether to send a Consent Acknowledgement Email or not",
            "example": false,
            "type": "boolean"
          },
          "status": {
            "description": "Status of the Collection Point",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED",
              "INACTIVE"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "subjectIdentifier": {
            "description": "The Data Subject identifier of the Collection Point",
            "example": "Email",
            "type": "string"
          },
          "version": {
            "description": "Version of the Collection Point",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "webFormUrl": {
            "description": "URL on which the Collection Point is hosted",
            "example": "https://www.onetrust.com/",
            "type": "string"
          }
        },
        "title": "CollectionPointDtoV2",
        "type": "object"
      },
      "CollectionPointEditRequest": {
        "properties": {
          "AllowMultipleIdentifierTypes": {
            "description": "Allow the Collection Point to generate data subjects with more than one identifier. Note: this feature is under preview for `API` and `HOSTED_WEB_FORM` Collection Points only",
            "example": false,
            "type": "boolean"
          },
          "CollectionPointType": {
            "description": "The type of the Collection Point",
            "enum": [
              "WEB_FORM",
              "API",
              "COOKIE",
              "NOTIFICATION_OPT_OUT",
              "ADMIN_UPDATE"
            ],
            "example": "WEB_FORM",
            "type": "string"
          },
          "ConsentIntegration": {
            "description": "Setting to fire the Data Subject Consent Updated integrations event. Note: we recommend using the `EnableNewConsentIntegration` setting to fire the Data Subject Profile Updated event instead",
            "example": false,
            "type": "boolean"
          },
          "ConsentType": {
            "description": "Consent type of the Collection Point",
            "enum": [
              "FORMSUBMIT",
              "EXPLICIT",
              "UNAMBIGUOUS",
              "OPTINCHECKBOX",
              "OPTOUTCHECKBOX",
              "SINGLETRIGGER",
              "CONDITIONALTRIGGER",
              "COOKIEBANNER",
              "UNCHECKOPTOUT",
              "CHECKOPTOUT"
            ],
            "example": "FORMSUBMIT",
            "type": "string"
          },
          "DOISendConfirmationEmail": {
            "description": "Double Opt In child setting to send the confirmation email or not. Note: the confirmation link is included in the Data Subject Profile Updated integrations event, which can be used to send custom email or sms messages",
            "example": false,
            "type": "boolean"
          },
          "DataElements": {
            "description": "A list containing the Data Elements that are collected",
            "example": [
              "First Name",
              "Last Name",
              "Work Email"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the Collection Point",
            "example": "Collecting data for Marketing and Promotion Purposes",
            "type": "string"
          },
          "DoiEmailToParent": {
            "description": "When enabling the parental consent feature and double opt in emails, emails will be sent to the parent identifier by default instead of the child identifier. For more information about this preview feature see this [article](https://my.onetrust.com/s/article/UUID-f247abdd-fc02-413f-f5b8-17bff9dca4fa?topicId=0TO1Q000000ItSSWA0)",
            "example": false,
            "type": "boolean"
          },
          "DoubleOptIn": {
            "description": "Whether Double Opt In (email confirmation) is enabled or not",
            "example": false,
            "type": "boolean"
          },
          "EnableGeoLocationForDataElements": {
            "description": "Setting to capture Data Subject's geolocation if they provide consent with a specific data element. Note the geolocation feature is currently under preview",
            "example": false,
            "type": "boolean"
          },
          "EnableGeolocation": {
            "description": "Setting to capture Data Subject's geolocation if they provide consent with a specific purpose. Note the geolocation feature is currently under preview",
            "example": false,
            "type": "boolean"
          },
          "EnableNewConsentIntegration": {
            "description": "Setting to fire the Data Subject Profile Updated integrations event. For more information see this [article](https://my.onetrust.com/s/article/UUID-58e8b9fb-0e47-5aca-713b-c2f26102d60c)",
            "example": false,
            "type": "boolean"
          },
          "EnablePrimaryIdentifier": {
            "description": "Setting to enable primary identifier",
            "example": false,
            "type": "boolean"
          },
          "EnablePublishEvent": {
            "description": "Setting to fire the Collection Point Published integrations event. For more information see this [article](https://my.onetrust.com/s/article/UUID-58e8b9fb-0e47-5aca-713b-c2f26102d60c)",
            "example": false,
            "type": "boolean"
          },
          "HostedSDK": {
            "description": "Whether the SDK settings are published to external storage for quicker integration. This is enabled by default for all web form type collection points",
            "example": false,
            "type": "boolean"
          },
          "IABVendorId": {
            "description": "The IAB Vendor Id. Used for legacy mobile Collection Points",
            "example": 13,
            "format": "int32",
            "type": "integer"
          },
          "IdentifierDataElementId": {
            "description": "Unique identifier for the Data Element. Note: this can be found in the url path when viewing Data Element details under the Consent & Preference Management module",
            "example": "7912bfe1-37dd-4180-8b99-963e80f3e125",
            "format": "uuid",
            "type": "string"
          },
          "IdentifierTypes": {
            "description": "Used in conjunction with the `AllowMultipleIdentifierTypes` setting. The List of Data Subject identifiers that can be used for the Collection Point",
            "example": "Email, Mobile",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "IsAuthenticationRequired": {
            "description": "Setting to require authentication for a collection point. For more information see this [article](https://my.onetrust.com/s/article/UUID-b359a104-1900-9ac9-7765-ee08c8047f1d?topicId=0TO3q000000kIUHGA2)",
            "example": false,
            "type": "boolean"
          },
          "IsDynamicCollectionPoint": {
            "description": "Whether this is a dynamic collection point or not. For more information see this [article](https://my.onetrust.com/s/article/UUID-358c7e03-1d60-ff3b-e443-25d4283c7ac3?topicId=0TO3q000000kIWXGA2)",
            "example": false,
            "type": "boolean"
          },
          "Language": {
            "description": "The Collection Point default language code",
            "example": "en-us",
            "type": "string"
          },
          "Languages": {
            "description": "List containing the Collection Point translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "LastSdkIntegrationDate": {
            "description": "The date that the SDK Integration was last copied on",
            "example": "2020-01-08T14:25:11.112",
            "format": "date-time",
            "type": "string"
          },
          "Name": {
            "description": "Name of the Collection Point",
            "example": "Web Form Collection Point",
            "type": "string"
          },
          "NewSdkIntegrationEnabled": {
            "description": "Whether new sdk integration is enabled or not. SDK can be loaded in the <head> and a new script is no longer required for each form",
            "example": false,
            "type": "boolean"
          },
          "NoConsentTransactions": {
            "description": "Whether no consent transactions can be recorded against the collection point. For more information about consent transaction types and purpose statuses see this [article](https://my.onetrust.com/s/article/UUID-d4ed05a9-a999-f2cb-8272-610a5817b43f?topicId=0TO1Q000000bHgoWAE)",
            "example": false,
            "type": "boolean"
          },
          "Notices": {
            "description": "Object holding notices associated with Collection Point",
            "items": {
              "$ref": "#/components/schemas/CollectionPointNoticeWithVersionDtoV1"
            },
            "type": "array"
          },
          "OrganizationId": {
            "description": "The unique Identifier of the Organization associated with the Collection Point. Note: this can be found in the url path when viewing Organization details under global settings",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550a",
            "format": "uuid",
            "type": "string"
          },
          "OverrideActivePurpose": {
            "description": "Used in conjunction with the double opt in reconfirmation and purpose expiration features. This setting is enabled by default and can be turned off if it is desired for a purpose to remain in active status until expired if a data subject does not reconfirm their consent",
            "example": true,
            "type": "boolean"
          },
          "ParentIdentifierTypes": {
            "description": "The List of parent Data Subject identifier types for the Collection Point. Note: this setting is used with the Consent on Behalf and Multiple Data Subject Identifiers preview features",
            "example": "Email, Mobile",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "PortalSettings": {
            "description": "Structure holding Portal settings",
            "type": "object"
          },
          "PreferenceCenterGuid": {
            "description": "Unique identifier for a Preference Center to associate with this Collection Point",
            "example": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
            "format": "uuid",
            "type": "string"
          },
          "PreferenceCenterSettings": {
            "description": "Structure holding Preference Center settings",
            "type": "object"
          },
          "PrimaryIdentifierType": {
            "description": "The primary Data Subject identifier of the Collection Point",
            "example": "Email",
            "type": "string"
          },
          "PrivacyPolicyUrl": {
            "description": "URL that redirects to a Privacy Policy associated with this Collection Point",
            "example": "https://www.onetrust.com/privacy-notice",
            "type": "string"
          },
          "PurposeId": {
            "description": "Comma-separated list of Purpose unique identifiers. Will default to the most recent purpose version. It is recommended to use the `PurposeIdsWithVersion` field and specify the desired version",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46,a6d68a29-a185-40e8-ac4c-5656d4856b0a",
            "type": "string"
          },
          "PurposeIds": {
            "description": "List of Purpose unique identifiers. Will default to the most recent purpose version. It is recommended to use the `PurposeIdsWithVersion` field and specify the desired version",
            "example": [
              "f2229953-b4b5-4042-8cb9-b78038cc4c46",
              "a6d68a29-a185-40e8-ac4c-5656d4856b0a"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "PurposeIdsWithVersion": {
            "description": "A list containing the Id of Purpose along with Version",
            "items": {
              "$ref": "#/components/schemas/IdVersionPairDto"
            },
            "type": "array"
          },
          "ReconfirmActivePurpose": {
            "description": "Used in conjunction with the double opt in feature. Will treat a returning data subject the same as a new one, and trigger the confirmation email event when re-consenting to the same purpose",
            "example": false,
            "type": "boolean"
          },
          "RedirectUrl": {
            "description": "Used in Double Opt In confirmation email to redirect the Data Subject to another website after confirming their consent",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "ResponsibleGroupId": {
            "description": "The Unique Identifier of the Responsible Group. Note: this can be found in the url path when viewing Responsible Group details under global settings",
            "example": "5466af43-ff42-4a39-8722-5a98e7981fc4",
            "format": "uuid",
            "type": "string"
          },
          "ResponsibleUserId": {
            "description": "The Unique Identifier of the Responsible User. Note: this can be found in the url path when viewing Responsible User details under global settings",
            "example": "bc4836e2-c117-461b-a7a2-2b268c037a97",
            "format": "uuid",
            "type": "string"
          },
          "SendConsentEmail": {
            "description": "Switch on or off the Consent Acknowledgement Email feature for a Collection Point",
            "example": false,
            "type": "boolean"
          },
          "Status": {
            "description": "The Collection Point status",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED",
              "INACTIVE"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "SubjectIdentifier": {
            "description": "The Data Subject identifier of the Collection Point. Note: this string is the Data Element name when viewing details under the Consent & Preference Management module",
            "example": "Email",
            "type": "string"
          },
          "WebFormUrl": {
            "description": "URL on which the Collection Point is hosted",
            "example": "https://www.onetrust.com/",
            "type": "string"
          },
          "doubleOptInExcludedPurposes": {
            "description": "Exclude certain Purposes on the Collection Point from the Double Opt-In workflow. Incoming consent for excluded purposes can be placed directly in Active status without requiring additional confirmation by the data subject.",
            "items": {
              "properties": {
                "excludeFromDoubleOptIn": {
                  "description": "Indicates whether or not purpose should be excluded from the Double Opt-In workflow.",
                  "example": true,
                  "type": "boolean"
                },
                "purposeGuid": {
                  "description": "Purpose unique identifier.",
                  "example": "edaa3f68-8254-4ef4-997e-1d4455e84033",
                  "format": "uuid",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "Name",
          "CollectionPointType",
          "ConsentType",
          "Status",
          "SubjectIdentifier",
          "Description",
          "OrganizationId",
          "PurposeIds"
        ],
        "title": "CollectionPointEditRequest",
        "type": "object"
      },
      "CollectionPointNoticeWithVersionDtoV1": {
        "properties": {
          "CollectionPoint": {
            "$ref": "#/components/schemas/SimpleNameVersionDtoV1"
          },
          "Guid": {
            "description": "The unique identifier of a embedded privacy notice",
            "example": "1439b150-ef4c-444c-a20e-44622c8ccaf3",
            "format": "uuid",
            "type": "string"
          },
          "Id": {
            "description": "The collection point notice unique identifier",
            "example": "05e30742-7e6c-4916-a5a1-7742a14ee984",
            "format": "uuid",
            "type": "string"
          },
          "PrivacyNoticeVersion": {
            "$ref": "#/components/schemas/SimpleNameVersionDtoV1"
          },
          "Purposes": {
            "description": "The set of purposes linked to the collection point notice",
            "items": {
              "$ref": "#/components/schemas/PurposeSimpleDetailsDtoV1"
            },
            "type": "array"
          },
          "name": {
            "description": "The collection point notice name",
            "example": "Marketing Notice",
            "type": "string"
          },
          "noticeType": {
            "description": "The type of the collection point notice type",
            "enum": [
              "PRIVACY_NOTICE",
              "DIGITAL_POLICY"
            ],
            "example": "PRIVACY_NOTICE",
            "type": "string"
          },
          "type": {
            "description": "The type of the collection point notice",
            "enum": [
              "LINKED",
              "EMBEDDED"
            ],
            "example": "EMBEDDED",
            "type": "string"
          },
          "url": {
            "description": "The url to a linked privacy notice",
            "example": "www.onetrust.com",
            "type": "string"
          }
        },
        "title": "CollectionPointNoticeWithVersionDtoV1",
        "type": "object"
      },
      "CollectionPointNoticeWithVersionGetDto": {
        "properties": {
          "id": {
            "description": "Unique identifier of the notice",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "Name of the notice",
            "type": "string"
          },
          "privacyNoticeGuid": {
            "description": "The unique identifier of a embedded privacy notice",
            "format": "uuid",
            "type": "string"
          },
          "privacyNoticeVersion": {
            "$ref": "#/components/schemas/CollectionPointNoticeWithVersionDtoV1"
          },
          "purposes": {
            "description": "Purpose associated with the notice",
            "items": {
              "$ref": "#/components/schemas/SimpleNameVersionDto"
            },
            "type": "array"
          },
          "type": {
            "description": "Type of a collection point",
            "enum": [
              "LINKED",
              "EMBEDDED"
            ],
            "type": "string"
          },
          "url": {
            "description": "The url to a linked privacy notice",
            "type": "string"
          }
        },
        "title": "CollectionPointNoticeWithVersionGetDto",
        "type": "object"
      },
      "CollectionPointTokenDto": {
        "properties": {
          "token": {
            "description": "The Collection Point token",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJrZXkiOiJ2YWx1ZSJ9.iRuqLQ9AaVOX0huXnhkUtHNfLIQdZCn2jWuuHtaeR9E",
            "type": "string"
          }
        },
        "title": "CollectionPointTokenDto",
        "type": "object"
      },
      "ConsentAttachmentResponse": {
        "properties": {
          "ContentType": {
            "description": "<p>Format of the file. Common file formats that are supported are: pdf, jpg, png, jpeg <p>",
            "example": "image/jpeg",
            "type": "string"
          },
          "FileSize": {
            "description": "<p>Size of the file in bytes.<p>",
            "example": "46584",
            "type": "integer"
          },
          "Filename": {
            "description": "<p>Name of the file.<p>",
            "example": "Testfile.png",
            "type": "string"
          },
          "QualifiedName": {
            "description": "<p>Qualified name of the file.",
            "example": "4a78b69d-2416-4def-ba88-0d987f5c5b20/attachments/d5531cc8-ad17-48b7-bad0-d19cca001de0/test.jpeg",
            "type": "string"
          },
          "RefId": {
            "description": "<p>The fileId that identifies the file with unique Id.<p>",
            "example": "113ae484-030e-4495-a7a9-8ce97fd2dcfd",
            "type": "string"
          }
        },
        "title": "ConsentAttachmentResponse",
        "type": "object"
      },
      "ConsentGroupConsentGroupsDeleteRequest": {
        "properties": {
          "consentGroupIds": {
            "description": "A list of Consent Groups to be deleted to a Consent Group as its children, identified by their ids",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupConsentGroupsRequest",
        "type": "object"
      },
      "ConsentGroupConsentGroupsRequest": {
        "properties": {
          "consentGroupIds": {
            "description": "A list of Consent Groups to be added to a Consent Group as its children, identified by their ids",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupConsentGroupsRequest",
        "type": "object"
      },
      "ConsentGroupDataSubjectsRequest": {
        "properties": {
          "dataSubjects": {
            "description": "A list of Data Subjects to be added to a Consent Group, identified either by their id or their identifier value",
            "items": {
              "$ref": "#/components/schemas/DataSubjectInformation"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupDataSubjectsRequest",
        "type": "object"
      },
      "ConsentGroupDto": {
        "properties": {
          "consentGroupId": {
            "description": "Unique identifier identifying a Consent Group",
            "example": "2a644966-fe93-4561-b71a-f0dda4396459",
            "format": "uuid",
            "type": "string"
          },
          "consentGroups": {
            "description": "Consent Groups that are children of the current Consent Group",
            "items": {
              "$ref": "#/components/schemas/ConsentGroupSummaryDto"
            },
            "type": "array"
          },
          "dataSubjects": {
            "description": "The Consent Group's Data Subjects",
            "items": {
              "$ref": "#/components/schemas/DataSubjectInformationDto"
            },
            "type": "array"
          },
          "description": {
            "description": "A description of the Consent Group",
            "example": "Consent for the company OneTrust, specifically for the Atlanta Office. Contains subsidiary data subjects representing OneTrust employees that work at this location.",
            "type": "string"
          },
          "externalName": {
            "description": "The Consent Group's external name. If not provided, this will be generated based on the name",
            "example": "onetrust_atlanta",
            "type": "string"
          },
          "membershipType": {
            "description": "Indicates whether the consent group has other consent groups as its children, or if it has data subjects associated to it",
            "enum": [
              "EMPTY",
              "CHILD_GROUPS",
              "DATA_SUBJECTS"
            ],
            "example": "CHILD_GROUPS",
            "type": "string"
          },
          "name": {
            "description": "The Consent Group name",
            "example": "OneTrust Atlanta",
            "type": "string"
          },
          "purposeRules": {
            "description": "The Consent Group's Purpose Rules",
            "items": {
              "$ref": "#/components/schemas/PurposeRuleDto"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupDto",
        "type": "object"
      },
      "ConsentGroupListDto": {
        "properties": {
          "consentGroupId": {
            "description": "Unique identifier identifying a Consent Group",
            "example": "2a644966-fe93-4561-b71a-f0dda4396459",
            "format": "uuid",
            "type": "string"
          },
          "externalName": {
            "description": "The Consent Group's external name. If not provided, this will be generated based on the name",
            "example": "onetrust_atlanta",
            "type": "string"
          },
          "name": {
            "description": "The Consent Group name",
            "example": "OneTrust Atlanta",
            "type": "string"
          }
        },
        "title": "ConsentGroupListDto",
        "type": "object"
      },
      "ConsentGroupPurposeRulesRequest": {
        "properties": {
          "purposeRules": {
            "description": "A list of Purpose Rules to be added to a Consent Group",
            "items": {
              "$ref": "#/components/schemas/PurposeRuleRequest"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupPurposeRulesRequest",
        "type": "object"
      },
      "ConsentGroupRequest": {
        "properties": {
          "description": {
            "description": "A description of the Consent Group",
            "example": "Consent for the company OneTrust, specifically for the Atlanta Office. Contains subsidiary data subjects representing OneTrust employees that work at this location.",
            "type": "string"
          },
          "externalName": {
            "description": "The Consent Group's external name. If not provided, this will be generated based on the name",
            "example": "onetrust_atlanta",
            "type": "string"
          },
          "name": {
            "description": "The Consent Group name",
            "example": "OneTrust Atlanta",
            "type": "string"
          }
        },
        "title": "ConsentGroupRequest",
        "type": "object"
      },
      "ConsentGroupSettingsDto": {
        "properties": {
          "statusPriorityRules": {
            "description": "The Priority of the Purpose Statuses in the context of Consent Groups",
            "items": {
              "$ref": "#/components/schemas/ConsentGroupStatusPriorityDto"
            },
            "type": "array"
          }
        },
        "title": "ConsentGroupSettingsDto",
        "type": "object"
      },
      "ConsentGroupStatusPriorityDto": {
        "properties": {
          "priority": {
            "description": "The Priority of the Purpose Status, with 0 being the highest possible value",
            "example": "0, 1,..7",
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "description": "The Purpose Status value",
            "enum": [
              "ACTIVE",
              "ALWAYS ACTIVEOPT OUT",
              "HARD OPT OUT",
              "PENDING",
              "NO CONSENT",
              "WITHDRAWN",
              "EXPIRED"
            ],
            "example": "ACTIVE",
            "type": "string"
          }
        },
        "title": "ConsentGroupStatusPriorityDto",
        "type": "object"
      },
      "ConsentGroupSummaryDto": {
        "properties": {
          "consentGroupId": {
            "description": "Unique identifier identifying a Consent Group",
            "example": "2a644966-fe93-4561-b71a-f0dda4396459",
            "format": "uuid",
            "type": "string"
          },
          "description": {
            "description": "A description of the Consent Group",
            "example": "Consent for the company OneTrust, specifically for the Atlanta Office. Contains subsidiary data subjects representing OneTrust employees that work at this location.",
            "type": "string"
          },
          "externalName": {
            "description": "The Consent Group's external name. If not provided, this will be generated based on the name",
            "example": "onetrust_atlanta",
            "type": "string"
          },
          "membershipType": {
            "description": "Indicates whether the consent group has other consent groups as its children, or if it has data subjects associated to it",
            "enum": [
              "EMPTY",
              "CHILD_GROUPS",
              "DATA_SUBJECTS"
            ],
            "example": "CHILD_GROUPS",
            "type": "string"
          },
          "name": {
            "description": "The Consent Group name",
            "example": "OneTrust Atlanta",
            "type": "string"
          }
        },
        "title": "ConsentGroupSummaryDto",
        "type": "object"
      },
      "ContinuationToken": {
        "properties": {
          "nextMarker": {
            "default": null,
            "description": "Request continuation token used to paginate over historical receipts",
            "type": "string"
          },
          "requestContinuation": {
            "default": null,
            "description": "Request continuation token used to paginate. If the number of records in the response is more than a page, it returns a `requestContinuation` token in the response. This `requestContinuation` token should be passed to the next request's body to paginate.",
            "example": [
              null,
              "{\"compositeToken\":\"{\\\"token\\\":\\\"+RID:iNFkAI-ei-4uLDsAAAAAAA==#RT:2#SRC:1#TRC:40#RTD:0Idx9i7ua9Rq4VL3LfZOBTMxMzMuMjMuMjpVMjY7NTo7MjIvMzE5Nzo1AA==#ISV:2#IEO:65567#QCF:8#FPC:AgHq7OoGADE1APzASusCAABA7GoAIVt//sFH5/+hQP9/EUD/f/JAn8/9/xFAv/9DQP/7v//f/yJA//f/+2FC//sxQf9/IUD/O1FA/38RQP7/IUD7/5VA/7/t/93u93+2/xFA/58hQH/6MUB/+xhAv2//99v//f+//ev//+EfAA==\\\",\\\"range\\\":{\\\"min\\\":\\\"\\\",\\\"max\\\":\\\"FF\\\"}}\",\"orderByItems\":[{\"item\":\"2022-12-19T15:49:11.236953\"}],\"rid\":\"iNFkAI-ei-4FKjsAAAAAAA==\",\"inclusive\":true}"
            ],
            "type": "string"
          }
        },
        "required": [
          "requestContinuation",
          "nextMarker"
        ],
        "title": "ContinuationToken",
        "type": "object"
      },
      "CosmosCustomPreferenceChoices": {
        "properties": {
          "optionId": {
            "description": "Unique identifier for a custom preference option",
            "format": "uuid",
            "type": "string"
          },
          "transactionType": {
            "description": "Transaction Type for a custom preference option",
            "example": "OPT_IN",
            "type": "string"
          }
        },
        "title": "CosmosCustomPreferenceChoices",
        "type": "object"
      },
      "CosmosCustomPreferences": {
        "properties": {
          "choices": {
            "description": "List of custom preference choices",
            "items": {
              "$ref": "#/components/schemas/CosmosCustomPreferenceChoices"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the custom preference",
            "format": "uuid",
            "type": "string"
          },
          "options": {
            "description": "List of unique identifiers for the options",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "CosmosCustomPreferences",
        "type": "object"
      },
      "CosmosPreference": {
        "properties": {
          "topicId": {
            "description": "Unique Identifier identifying a Topic",
            "format": "uuid",
            "type": "string"
          },
          "transactionType": {
            "description": "Transaction type for the topic",
            "example": "OPT_IN",
            "type": "string"
          }
        },
        "title": "CosmosPreference",
        "type": "object"
      },
      "CosmosPurposeNote": {
        "properties": {
          "noteId": {
            "description": "Unique identifier for the purpose note",
            "format": "uuid",
            "type": "string"
          },
          "noteLanguage": {
            "description": "Language of the purpose note",
            "example": "en-US",
            "type": "string"
          },
          "noteText": {
            "description": "The actual text of the note",
            "example": "I did not sign up for this",
            "type": "string"
          },
          "noteType": {
            "description": "Type of the note",
            "enum": [
              "UNSUBSCRIBE_REASON"
            ],
            "example": "UNSUBSCRIBE_REASON",
            "type": "string"
          }
        },
        "title": "CosmosPurposeNote",
        "type": "object"
      },
      "CosmosTransaction": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          },
          "collectionPointUUID": {
            "description": "Unique Identifier identifying a Collection Point",
            "format": "uuid",
            "type": "string"
          },
          "consentCreationDate": {
            "description": "The Date the Data Subject consented",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "customPreferences": {
            "items": {
              "$ref": "#/components/schemas/CosmosCustomPreferences"
            },
            "type": "array"
          },
          "expiryDate": {
            "format": "date-time",
            "type": "string"
          },
          "guid": {
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "johndoe@onetrust.com",
            "type": "string"
          },
          "purposeGuid": {
            "format": "uuid",
            "type": "string"
          },
          "purposeNote": {
            "$ref": "#/components/schemas/CosmosPurposeNote"
          },
          "purposeVersion": {
            "format": "int64",
            "type": "integer"
          },
          "receiptId": {
            "description": "The unique identifier identifying the Receipt",
            "type": "string"
          },
          "topics": {
            "items": {
              "$ref": "#/components/schemas/CosmosPreference"
            },
            "type": "array"
          },
          "transactionGuid": {
            "format": "uuid",
            "type": "string"
          },
          "transactionType": {
            "enum": [
              "PENDING",
              "CONFIRMED",
              "WITHDRAWN",
              "EXPIRED",
              "NOTGIVEN",
              "OPT_OUT",
              "NO_CHOICE",
              "HARD_OPT_OUT",
              "EXTEND",
              "CHANGE_PREFERENCES",
              "CANCEL"
            ],
            "type": "string"
          }
        },
        "title": "CosmosTransaction",
        "type": "object"
      },
      "CrossDeviceConsentDeleteRequest": {
        "properties": {
          "identifiers": {
            "description": "A list of data subject identifiers for which the deletion of both the receipt and the cross-device consent is required.",
            "example": [
              "user1@domain.com",
              "user2@domain.com"
            ],
            "items": {
              "description": "Data subject identifiers.",
              "maxItems": 1000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "CrossDeviceConsentDeleteRequest",
        "type": "object"
      },
      "CustomDataElementDto": {
        "properties": {
          "CollectionPoints": {
            "description": "The number of Collection Points in which the Data Element is used",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "CreatedDate": {
            "description": "The date that the Data Element was created on",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "Unique identifier identifying a Custom Data Element",
            "example": "21e0de87-d6ef-4b39-a54b-6d877698e3f6",
            "format": "uuid",
            "type": "string"
          },
          "IsIdentifier": {
            "description": "Whether the Data Element can be used as an identifier",
            "example": false,
            "type": "boolean"
          },
          "Label": {
            "description": "The Custom Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "Languages": {
            "description": "List containing the Data Element's translations",
            "items": {
              "$ref": "#/components/schemas/DataElementLanguageDto"
            },
            "type": "array"
          },
          "NumberOfLanguages": {
            "description": "The number of languages the Data Element has been translated in",
            "example": 3,
            "format": "int64",
            "type": "integer"
          },
          "Organizations": {
            "description": "A list of Organization UUIDs",
            "example": [
              "712a1f61-a548-432f-afc4-5a383c28eeb2",
              "862a1f61-e148-032f-afc4-7a383c28eec6"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "UpdatedDate": {
            "description": "The date that the Data Element was last modified on",
            "example": "2019-12-30T10:55:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "canEdit": {
            "description": "Whether the Data Element can be edited or not",
            "example": false,
            "type": "boolean"
          }
        },
        "title": "CustomDataElementDto",
        "type": "object"
      },
      "CustomDataElementDtoV2": {
        "description": "DTO which returns CustomDataElement details",
        "properties": {
          "canEdit": {
            "description": "Whether the Data Element can be edited or not",
            "example": false,
            "type": "boolean"
          },
          "collectionPoints": {
            "description": "The number of Collection Points in which the Data Element is used",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "createdDate": {
            "description": "The date that the Data Element was created on",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "dataElementFields": {
            "$ref": "#/components/schemas/CustomDataElementField"
          },
          "guid": {
            "description": "Unique identifier identifying a Custom Data Element",
            "example": "21e0de87-d6ef-4b39-a54b-6d877698e3f6",
            "format": "uuid",
            "type": "string"
          },
          "isIdentifier": {
            "description": "Whether the Data Element can be used as an identifier",
            "example": false,
            "type": "boolean"
          },
          "label": {
            "description": "The Custom Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "The date that the Data Element was last modified on",
            "example": "2019-12-30T10:55:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "numberOfLanguages": {
            "description": "The number of languages the Data Element has been translated in",
            "example": 3,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "CustomDataElementDtoV2",
        "type": "object"
      },
      "CustomDataElementField": {
        "description": "DTO which returns custom data element field details",
        "properties": {
          "dataElementOptions": {
            "description": "The data element options",
            "items": {
              "$ref": "#/components/schemas/CustomDataElementOptionDtoV2"
            },
            "type": "array"
          },
          "dataElementType": {
            "description": "The data element type",
            "enum": [
              "USER_INPUT",
              "SELECTION",
              "EMAIL",
              "NUMBER",
              "DATE_PICKER",
              "COUNTRY",
              "STATE",
              "PHONE_NUMBER"
            ],
            "type": "string"
          },
          "displayAs": {
            "description": "Displaying the data element options ",
            "enum": [
              "DROPDOWN",
              "NONE"
            ],
            "type": "string"
          }
        },
        "title": "CustomDataElementField",
        "type": "object"
      },
      "CustomDataElementFieldGet": {
        "description": "DTO which returns custom data element field details",
        "properties": {
          "dataElementOptions": {
            "description": "The data element options",
            "items": {
              "$ref": "#/components/schemas/CustomDataElementOptionDtoV2"
            },
            "type": "array"
          },
          "dataElementType": {
            "description": "The data element type",
            "enum": [
              "USER_INPUT",
              "SELECTION",
              "EMAIL",
              "NUMBER",
              "DATE_PICKER",
              "COUNTRY",
              "STATE",
              "PHONE_NUMBER"
            ],
            "type": "string"
          },
          "displayAs": {
            "description": "Displaying the Data Element Options ",
            "enum": [
              "DROPDOWN",
              "NONE"
            ],
            "type": "string"
          }
        },
        "title": "CustomDataElementFieldGet",
        "type": "object"
      },
      "CustomDataElementGetV2": {
        "properties": {
          "dataElementFields": {
            "$ref": "#/components/schemas/CustomDataElementFieldGet"
          },
          "guid": {
            "description": "Unique identifier identifying a custom data element",
            "example": "21e0de87-d6ef-4b39-a54b-6d877698e3f6",
            "format": "uuid",
            "type": "string"
          },
          "isIdentifier": {
            "description": "Whether the data element can be used as an identifier",
            "example": false,
            "type": "boolean"
          },
          "label": {
            "description": "The custom data element name",
            "example": "Work Email",
            "type": "string"
          },
          "languages": {
            "description": "List containing the data element's translations",
            "items": {
              "$ref": "#/components/schemas/DataElementLanguageDto"
            },
            "type": "array"
          },
          "numberOfLanguages": {
            "description": "The number of languages the data element has been translated in",
            "example": 3,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "CustomDataElementGetV2",
        "type": "object"
      },
      "CustomDataElementOptionDtoV2": {
        "description": "DTO which returns CustomDataElementOption details",
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "title": "CustomDataElementOptionDtoV2",
        "type": "object"
      },
      "CustomPreferenceCreateDto": {
        "properties": {
          "DefaultLanguage": {
            "description": "Whether the current language of the Purpose Preference is default or not",
            "example": true,
            "type": "boolean"
          },
          "Description": {
            "description": "The description of the Purpose Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "DisplayAs": {
            "description": "The display type of the Purpose Preference (BUTTONS or CHECKBOXES)",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "example": "BUTTONS",
            "type": "string"
          },
          "Language": {
            "description": "The language of the Purpose Preference",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "The name of the Purpose Preference",
            "example": "Email Frequency",
            "type": "string"
          },
          "Options": {
            "description": "The Purpose Preferences Options",
            "example": [
              "Weekly",
              "Montly"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Organizations": {
            "description": "A list of Internal Organization Ids.",
            "example": [
              "Organization Id-1",
              "Organization Id-2"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Required": {
            "description": "Whether a response to the Purpose Preference is required or not",
            "example": false,
            "type": "boolean"
          },
          "SelectionType": {
            "description": "The selection type of the Purpose Preference (SINGLE_CHOICE or MULTI_CHOICE)",
            "enum": [
              "SINGLE_CHOICE",
              "MULTI_CHOICE"
            ],
            "example": "SINGLE_CHOICE",
            "type": "string"
          }
        },
        "required": [
          "Description",
          "DisplayAs",
          "Language",
          "Name",
          "Options",
          "SelectionType"
        ],
        "title": "CustomPreferenceCreateDto",
        "type": "object"
      },
      "CustomPreferenceDto": {
        "properties": {
          "CreatedDate": {
            "description": "The date that the Purpose Preference was created on",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "DefaultLanguage": {
            "description": "The default Purpose Preference content language code",
            "example": "en-us",
            "type": "string"
          },
          "Description": {
            "description": "A brief description for the Purpose Preference. The description that you enter will be used internally in the application to help you identify the Purpose Preference.",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "Disabled": {
            "description": "Whether Purpose Preference is disabled or not",
            "example": false,
            "type": "boolean"
          },
          "DisplayAs": {
            "description": "The format in which the options should appear in Collection Points and Preference Centers. Available options include **Buttons** and **Checkboxes**.",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "example": "BUTTONS",
            "type": "string"
          },
          "Id": {
            "description": "Unique Identifier identifying a Purpose Preference",
            "example": "194e0d3b-0ba8-4bc7-b046-e3ae42b2bd25",
            "format": "uuid",
            "type": "string"
          },
          "Languages": {
            "description": "An array containing the Purpose Preference's Languages",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceLanguageDto"
            },
            "type": "array"
          },
          "Name": {
            "description": "The name for the Purpose Preference. The name that you enter will be used internally in the application to help you identify the Purpose Preference.",
            "example": "Email Frequency",
            "type": "string"
          },
          "NumberOfLanguages": {
            "description": "The number of languages the Purpose Preference has been translated to",
            "example": 3,
            "format": "int64",
            "type": "integer"
          },
          "NumberOfOptions": {
            "description": "The number of Options of the Purpose Preference",
            "example": 4,
            "format": "int64",
            "type": "integer"
          },
          "Options": {
            "description": "An array of the options that the data subject will be allowed to select from.",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionDto"
            },
            "type": "array"
          },
          "Organizations": {
            "description": "An array of Internal Organization Ids. Enter the **Id** of the Organization that the Purpose Preference will be visible to. Only users linked to those organizations will be able to view the Purpose Preference.",
            "example": [
              "b7d17fc8-889f-472e-8c74-f1169821e7e7",
              "d5031c51-7dc0-43a4-a537-e7cf60a21df1"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Required": {
            "description": "Whether selection for this Purpose Preference is required. Enable this setting to make this field required when a data subject is submitting preference selections.",
            "example": false,
            "type": "boolean"
          },
          "SelectionType": {
            "description": "Select **SINGLE_CHOICE** to allow only one option to be selected by a data subject. Select **MULTI_CHOICE** to allow multiple options to be selected.",
            "enum": [
              "SINGLE_CHOICE",
              "MULTI_CHOICE"
            ],
            "example": "SINGLE_CHOICE",
            "type": "string"
          },
          "UpdatedDate": {
            "description": "The date that the Purpose Preference was last modified on",
            "example": "2019-12-30T10:55:30.974Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "Id",
          "Name",
          "Description",
          "SelectionType",
          "DisplayAs",
          "Organizations"
        ],
        "title": "CustomPreferenceDto",
        "type": "object"
      },
      "CustomPreferenceGetDto": {
        "properties": {
          "CreatedDate": {
            "description": "The date that the Purpose Preference was created on",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "DefaultLanguage": {
            "description": "The default Purpose Preference content language code",
            "example": "en-us",
            "type": "string"
          },
          "Description": {
            "description": "The description of the Purpose Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "Disabled": {
            "description": "Whether Purpose Preference is disabled or not",
            "example": false,
            "type": "boolean"
          },
          "DisplayAs": {
            "description": "The display type of the Purpose Preference",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "example": "BUTTONS",
            "type": "string"
          },
          "Id": {
            "description": "Unique Identifier identifying a Purpose Preference",
            "example": "194e0d3b-0ba8-4bc7-b046-e3ae42b2bd25",
            "format": "uuid",
            "type": "string"
          },
          "Languages": {
            "description": "Returns an empty list. The information can be retrieved using [Get List of Purpose Preferences](/onetrust/reference/getlistusingget) API",
            "type": "string"
          },
          "Name": {
            "description": "The Purpose Preference name",
            "example": "Email Frequency",
            "type": "string"
          },
          "NumberOfLanguages": {
            "description": "The number of languages the Purpose Preference has been translated to",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "NumberOfOptions": {
            "description": "The number of Options of the Purpose Preference",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "Options": {
            "description": "Returns an empty list. The information can be retrieved using [Get List of Purpose Preferences](/onetrust/reference/getlistusingget) API",
            "type": "string"
          },
          "Required": {
            "description": "Whether selection for this Purpose Preference is required",
            "example": false,
            "type": "boolean"
          },
          "SelectionType": {
            "description": "The selection type of the Purpose Preference",
            "enum": [
              "SINGLE_CHOICE",
              "MULTI_CHOICE"
            ],
            "example": "SINGLE_CHOICE",
            "type": "string"
          },
          "TotalLinkedActivePurposes": {
            "description": "The number of active purposes associated with the Purpose Preference.",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "UpdatedDate": {
            "description": "The date that the Purpose Preference was last modified on",
            "example": "2019-12-30T10:55:30.974Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "CustomPreferenceGetDto",
        "type": "object"
      },
      "CustomPreferenceInformation": {
        "properties": {
          "CustomPreferenceOptions": {
            "description": "The list of options selected by the data subject",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionsInformation"
            },
            "type": "array"
          },
          "Id": {
            "description": "The unique identifier of this custom preference",
            "example": "64f8ebb3-b43d-4e4b-a84a-3d301b6d95f1",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The name of this custom preference",
            "example": "Fiscal preference",
            "type": "string"
          }
        },
        "title": "CustomPreferenceInformation",
        "type": "object"
      },
      "CustomPreferenceLanguageDto": {
        "properties": {
          "Default": {
            "description": "Whether this language is the default one for the Purpose Preference",
            "example": true,
            "type": "boolean"
          },
          "Description": {
            "description": "The description of the Purpose Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "Language": {
            "description": "The Purpose Preference content language code",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "The Purpose Preference name",
            "example": "Email Frequency",
            "type": "string"
          },
          "Options": {
            "description": "Options associated with a Purpose Preference",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionDto"
            },
            "type": "array"
          }
        },
        "title": "CustomPreferenceLanguageDto",
        "type": "object"
      },
      "CustomPreferenceLanguageDtoV2": {
        "properties": {
          "default": {
            "description": "Whether this language is the default one for the Custom Preference",
            "example": true,
            "type": "boolean"
          },
          "description": {
            "description": "The description of the Custom Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "language": {
            "description": "The Custom Preference content language code",
            "example": "en-us",
            "type": "string"
          },
          "name": {
            "description": "The name identifying the Custom Preference",
            "example": "Email Frequency",
            "type": "string"
          },
          "options": {
            "description": "Options associated with a Custom Preference",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionDtoV2"
            },
            "type": "array"
          }
        },
        "title": "CustomPreferenceLanguageDtoV2",
        "type": "object"
      },
      "CustomPreferenceOptionDto": {
        "properties": {
          "Disabled": {
            "description": "Whether Purpose Preference Option is disabled or not",
            "example": false,
            "type": "boolean"
          },
          "Id": {
            "description": "Unique identifier identifying a Purpose Preference Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "type": "string"
          },
          "Label": {
            "description": "The Option label",
            "example": "Weekly",
            "type": "string"
          }
        },
        "title": "CustomPreferenceOptionDto",
        "type": "object"
      },
      "CustomPreferenceOptionDtoV2": {
        "properties": {
          "id": {
            "description": "Unique identifier identifying an Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "type": "string"
          },
          "label": {
            "description": "The Option label",
            "example": "Weekly",
            "type": "string"
          }
        },
        "title": "CustomPreferenceOptionDtoV2",
        "type": "object"
      },
      "CustomPreferenceOptionsInformation": {
        "properties": {
          "Id": {
            "description": "The unique identifier of this custom preference option",
            "example": "331f4c1c-2dc6-4a04-8603-7edab63e36d4",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The name of this custom preference option",
            "example": "Monthly",
            "type": "string"
          }
        },
        "title": "CustomPreferenceOptionsInformation",
        "type": "object"
      },
      "DataElementLanguageDto": {
        "properties": {
          "Language": {
            "description": "The Data Element translation language code",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "The Data Element name",
            "example": "Work Email",
            "type": "string"
          }
        },
        "title": "DataElementLanguageDto",
        "type": "object"
      },
      "DataSubjectByPurposeInformation": {
        "properties": {
          "DataSubjectId": {
            "description": "The Data Subject identifier",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "Purposes": {
            "description": "A list containing Purposes associated with the Data Subject",
            "items": {
              "$ref": "#/components/schemas/PurposeInformation"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectByPurposeInformation",
        "type": "object"
      },
      "DataSubjectCreateDTO": {
        "properties": {
          "dataElements": {
            "description": "List containing the Data Subject's Data Elements",
            "example": [
              {
                "linked": false,
                "name": "Work Email",
                "value": "example@otprivacy.com"
              },
              {
                "linked": true,
                "name": "Cookie Unique Id",
                "value": [
                  "COOKIE-0101",
                  "COOKIE-0202"
                ]
              },
              {
                "linked": true,
                "name": "OT Email Address",
                "value": [
                  "onetrust-work@ot.com",
                  "onetrust-team@ot.con"
                ]
              },
              {
                "linked": true,
                "name": "Source ID",
                "value": []
              }
            ],
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementDTO"
            },
            "type": "array"
          },
          "identifierType": {
            "description": "The Data Subject identifier type",
            "example": "Email",
            "type": "string"
          },
          "language": {
            "description": "The preferred language code for the Data Subject",
            "example": "en-us",
            "type": "string"
          }
        },
        "title": "DataSubjectCreateDTO",
        "type": "object"
      },
      "DataSubjectCustomPreferenceOptionDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier of the Custom Preference Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "DataSubjectCustomPreferenceOptionDto",
        "type": "object"
      },
      "DataSubjectCustomPreferencesDto": {
        "properties": {
          "Id": {
            "description": "Unique identifier of the Custom Preference",
            "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
            "format": "uuid",
            "type": "string"
          },
          "Options": {
            "description": "List of Custom Preference Options",
            "items": {
              "$ref": "#/components/schemas/DataSubjectCustomPreferenceOptionDto"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectCustomPreferencesDto",
        "type": "object"
      },
      "DataSubjectDeleteRequest": {
        "properties": {
          "dataSubjectGuids": {
            "description": "List of Data Subject identifier GUIDs",
            "example": "[\"5a4ee07e-7f66-4dcf-bd42-ea0d266284bd\",\"3a4ee07e-7f66-4dcf-bd42-ea0d266284bc\"...]",
            "format": "uuid",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fromCreatedDate": {
            "description": "Start date of the Data Subject created",
            "example": "2023-06-22T20:55:40",
            "format": "date-time",
            "type": "string"
          },
          "fromInteractionDate": {
            "description": "Start date of the Data Subject Profile interacted",
            "example": "2023-06-22T20:55:40",
            "format": "date-time",
            "type": "string"
          },
          "identifiers": {
            "description": "List of Data Subject identifiers",
            "example": "[user1@domain.com,user2@domain.com...]",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "removePIInfo": {
            "description": "Optional parameter to remove PII data element values from receipts and transactions. Note that it must be used in conjunction with the parameter to retainReceiptsTransactions",
            "example": false,
            "type": "boolean"
          },
          "retainReceiptsTransactions": {
            "description": "Indicates whether receipts and transactions should be retained while deleting Data Subjects. When set to false receipts and transactions will be deleted. Default value is false",
            "example": false,
            "type": "boolean"
          },
          "toCreatedDate": {
            "description": "End date of the Data Subject created",
            "example": "2023-06-23T20:55:40",
            "format": "date-time",
            "type": "string"
          },
          "toInteractionDate": {
            "description": "End date of the Data Subject Profile interacted",
            "example": "2023-06-23T20:55:40",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "DataSubjectDeleteRequest",
        "type": "object"
      },
      "DataSubjectDetailDTO": {
        "properties": {
          "additionalIdMessages": {
            "description": "List of potential errors",
            "example": [
              {
                "name": "Cookie Unique Id",
                "values": [
                  {
                    "COOKIE-0101": "This identifier is already exists as data subject",
                    "COOKIE-0202": "This identifier is already being used for another data subject"
                  }
                ]
              }
            ],
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "canBePrimary": {
            "description": "Whether the Data Subject is allowed to be the primary identifier of the group or not",
            "example": true,
            "type": "boolean"
          },
          "elements": {
            "description": "List of Data Subject elements",
            "example": [
              {
                "linked": false,
                "name": "Work Email",
                "value": "example@otprivacy.com"
              },
              {
                "linked": true,
                "name": "OT Email Address",
                "value": [
                  "onetrust-work@ot.com",
                  "onetrust-team@ot.con"
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementDTO"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "identifierType": {
            "description": "The Data Subject identifier Type",
            "example": "Email",
            "type": "string"
          },
          "messages": {
            "description": "List of potential errors",
            "example": [
              "Invalid Data Element Name : Account Number"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectDetailDTO",
        "type": "object"
      },
      "DataSubjectDtoV2": {
        "properties": {
          "createdDate": {
            "description": "The date when the data subject record was created",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "dataElements": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The list of data elements and its corresponding values. Present when isDNCInclude is false",
            "example": {
              "FirstName": "Example",
              "Title": "Mr"
            },
            "type": "object"
          },
          "dataElementsMetaData": {
            "description": "The list of data elements, corresponding values and do not call statuses. Present when isDNCInclude is true",
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementDtoV2"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "identifierType": {
            "description": "The identifier type of the Data Subject",
            "example": "Email",
            "type": "string"
          },
          "language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The date that the Data Subject record was last updated on",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "linkToken": {
            "description": "The Data Subject magic link token",
            "example": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
            "type": "string"
          },
          "testDataSubject": {
            "description": "Flag indicating if Data Subject is a test Data Subject",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "DataSubjectDtoV2",
        "type": "object"
      },
      "DataSubjectElementDTO": {
        "properties": {
          "linked": {
            "description": "This attribute determines if dataelement is additional id",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "The Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "value": {
            "description": "The Data Element value",
            "example": "example@otprivacy.com",
            "maxLength": 750,
            "type": "string"
          }
        },
        "title": "DataSubjectElementDTO",
        "type": "object"
      },
      "DataSubjectElementDto": {
        "properties": {
          "DoNotCall": {
            "description": "This attribute determines if a phone number is listed in FCC’s Do Not Call list",
            "example": true,
            "type": "boolean"
          },
          "Name": {
            "description": "The Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "Value": {
            "description": "The Data Element value",
            "example": "example@otprivacy.com",
            "type": "string"
          }
        },
        "title": "DataSubjectElementDto",
        "type": "object"
      },
      "DataSubjectElementDtoV2": {
        "properties": {
          "doNotCall": {
            "description": "This attribute determines if a phone number is listed in FCC’s Do Not Call list",
            "example": true,
            "type": "boolean"
          },
          "name": {
            "description": "The Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "value": {
            "description": "The Data Element value",
            "example": "example@otprivacy.com",
            "type": "string"
          }
        },
        "title": "DataSubjectElementDtoV2",
        "type": "object"
      },
      "DataSubjectElementSearchDto": {
        "properties": {
          "name": {
            "description": "The Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "value": {
            "description": "The Data Element value used in conjunction with Data Element name.",
            "example": "example@otprivacy.com",
            "type": "string"
          }
        },
        "title": "DataSubjectElementSearchDto",
        "type": "object"
      },
      "DataSubjectEntry": {
        "properties": {
          "addedDate": {
            "description": "The date that the Data Subject was added to the group",
            "example": "2020-05-30T12:23:42.145Z",
            "format": "date-time",
            "type": "string"
          },
          "canBePrimary": {
            "description": "Boolean flag that denotes if the Data Subject is allowed to be the group primary",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier of the Data Subject",
            "example": "c43a9190-ffd6-4be3-aeff-95b46d0fa59f",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The identifier value of the Data Subject",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "identifierType": {
            "description": "The identifier type of the Data Subject",
            "example": "Email",
            "type": "string"
          },
          "isPrimary": {
            "description": "Boolean flag that denotes if the Data Subject is the primary of the group",
            "example": false,
            "type": "boolean"
          },
          "magicLinkToken": {
            "description": "MagicLinkToken for the Data Subject",
            "example": "token value",
            "type": "string"
          },
          "magicLinkTokenEncoded": {
            "description": "MagicLinkToken encoded as x-www-form-urlencoded format for the Data Subject",
            "example": "encoded token value",
            "type": "string"
          },
          "numberOfLinkedGroups": {
            "description": "The number of Other Linked Groups the Data Subject is a member of",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "organizations": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectEntry",
        "type": "object"
      },
      "DataSubjectEntry_pageView": {
        "properties": {
          "id": {
            "description": "Unique identifier of the Data Subject",
            "example": "c43a9190-ffd6-4be3-aeff-95b46d0fa59f",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The identifier value of the Data Subject",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "identifierType": {
            "description": "The identifier type of the Data Subject",
            "example": "Email",
            "type": "string"
          }
        },
        "title": "DataSubjectEntry_pageView",
        "type": "object"
      },
      "DataSubjectForPurposeInformation": {
        "properties": {
          "CustomPreferences": {
            "description": "List of custom preferences selected by the data subject",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceInformation"
            },
            "type": "array"
          },
          "DataSubjectId": {
            "description": "The Data Subject identifier",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "FirstTransactionDate": {
            "description": "Date on which the first transaction occurred",
            "example": "2020-01-06T10:54:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "LastTransactionDate": {
            "description": "Date on which the last transaction occurred",
            "example": "2020-01-12T12:42:12.842Z",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "description": "The transaction status for this Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "List of topics associated with the Data Subject",
            "items": {
              "$ref": "#/components/schemas/TopicInformation"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectForPurposeInformation",
        "type": "object"
      },
      "DataSubjectGeolocationDto": {
        "description": "Geolocation parameters of the DataSubject",
        "properties": {
          "Country": {
            "description": "Country of the DataSubject.",
            "example": "US",
            "type": "string"
          },
          "DataSubjectId": {
            "description": "Unique Identifier identifying a Data Subject.",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "ReceiptGuid": {
            "description": "Unique Identifier of the Receipt for which Geolocation parameters were sent.",
            "example": "788ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "State": {
            "description": "State Code of the DataSubject.",
            "example": "GA",
            "type": "string"
          },
          "StateName": {
            "description": "State Name of the DataSubject.",
            "example": "Georgia",
            "type": "string"
          }
        },
        "title": "DataSubjectGeolocationDto",
        "type": "object"
      },
      "DataSubjectGeolocationDtoV3": {
        "description": "Provides geolocation information for a data subject if they have given consent to a purpose with geolocation tracking enabled",
        "properties": {
          "country": {
            "description": "Country of the DataSubject.",
            "example": "US",
            "type": "string"
          },
          "dataSubjectId": {
            "description": "Unique Identifier identifying a Data Subject.",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "receiptGuid": {
            "description": "Unique Identifier of the Receipt for which Geolocation parameters were sent.",
            "example": "788ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "state": {
            "description": "State Code of the DataSubject.",
            "example": "GA",
            "type": "string"
          },
          "stateName": {
            "description": "State Name of the DataSubject.",
            "example": "Georgia",
            "type": "string"
          }
        },
        "title": "DataSubjectGeolocationDtoV3",
        "type": "object"
      },
      "DataSubjectInformation": {
        "properties": {
          "id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          }
        },
        "title": "DataSubjectInformation",
        "type": "object"
      },
      "DataSubjectInformationDto": {
        "properties": {
          "id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "633ba071-61b0-485f-81a0-a2245777b432",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "purposes": {
            "description": "The Data Subject's Purpose list",
            "items": {
              "$ref": "#/components/schemas/DataSubjectPurposeInformationDto"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectInformationDto",
        "type": "object"
      },
      "DataSubjectPreferencesRequestDto": {
        "properties": {
          "DsDataElements": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of Data Subject Elements and their values for a Data Subject, Maximum supported characters for a data element value is 750",
            "example": [
              {
                "First Name": "John",
                "Last Name": "Doe"
              }
            ],
            "type": "object"
          },
          "Language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "Purposes": {
            "description": "List Of Data Subject Purposes",
            "items": {
              "$ref": "#/components/schemas/DataSubjectPurposesRequestDto"
            },
            "type": "array"
          }
        },
        "required": [
          "Purposes"
        ],
        "title": "DataSubjectPreferencesRequestDto",
        "type": "object"
      },
      "DataSubjectPreferencesResponseDto": {
        "properties": {
          "Language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "Purposes": {
            "description": "A list of Purposes associated with the Data Subject",
            "items": {
              "$ref": "#/components/schemas/DataSubjectPurposesResponseDto"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectPreferencesResponseDto",
        "type": "object"
      },
      "DataSubjectProfileCustomPreferenceDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying the Custom Preference",
            "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The Custom Preference name",
            "example": "Email Frequency",
            "type": "string"
          },
          "Options": {
            "description": "List containing the Custom Preference's Options",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileCustomPreferenceOptionDto"
            },
            "type": "array"
          }
        },
        "title": "DataSubjectProfileCustomPreferenceDto",
        "type": "object"
      },
      "DataSubjectProfileCustomPreferenceOptionDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying a Custom Preference Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "IsConsented": {
            "description": "Data Subject consent status for the custom preference option",
            "example": true,
            "type": "boolean"
          },
          "Name": {
            "description": "The Option name",
            "example": "Weekly",
            "type": "string"
          }
        },
        "title": "DataSubjectProfileCustomPreferenceOptionDto",
        "type": "object"
      },
      "DataSubjectProfileDto": {
        "properties": {
          "CreatedDate": {
            "description": "Creation date of the data subject in ISO-8601 format",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "DataElements": {
            "description": "The Data Subject's data elements",
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementDto"
            },
            "type": "array"
          },
          "Id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "1b1f53d3-dc40-4288-abf1-74a4a4c33510",
            "format": "uuid",
            "type": "string"
          },
          "Identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "Language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "LastUpdatedDate": {
            "description": "The date that the Data Subject record was last updated on",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "LatestGeolocation": {
            "$ref": "#/components/schemas/DataSubjectGeolocationDto"
          },
          "LinkToken": {
            "description": "The Data Subject magic link token",
            "example": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
            "type": "string"
          },
          "Notices": {
            "description": "The Data Subject's profile notices",
            "items": {
              "$ref": "#/components/schemas/CollectionPointNoticeWithVersionDtoV1"
            },
            "type": "array"
          },
          "Purposes": {
            "description": "The Data Subject's profile Purposes",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfilePurposeDto"
            },
            "type": "array"
          },
          "TestDataSubject": {
            "description": "Flag indicating if Data Subject is a test Data Subject",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "DataSubjectProfileDto",
        "type": "object"
      },
      "DataSubjectProfileDtoV3": {
        "properties": {
          "additionalIdentifierInstantLinkTokens": {
            "description": "Instant access link tokens for additional identifiers",
            "items": {
              "type": "string",
              "x-name": "AdditionalIdentifierInstantLinkTokens"
            },
            "type": "object"
          },
          "createdDate": {
            "description": "Creation date of the data subject in ISO-8601 format",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "dataElements": {
            "description": "The Data Subject's data elements",
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementDto"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique Identifier identifying a Data Subject",
            "example": "1b1f53d3-dc40-4288-abf1-74a4a4c33510",
            "format": "uuid",
            "type": "string"
          },
          "identifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "instantLinkTokens": {
            "description": "Instant access link tokens for data subject",
            "items": {
              "type": "string",
              "x-name": "InstantLinkToken"
            },
            "type": "array"
          },
          "language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The date that the Data Subject record was last updated on",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "latestGeolocation": {
            "$ref": "#/components/schemas/DataSubjectGeolocationDtoV3"
          },
          "linkToken": {
            "description": "The Data Subject magic link token",
            "example": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
            "type": "string"
          },
          "notices": {
            "description": "The Data Subject's profile notices",
            "items": {
              "$ref": "#/components/schemas/CollectionPointNoticeWithVersionDtoV1"
            },
            "type": "array"
          },
          "purposes": {
            "description": "The Data Subject's profile Purposes",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfilePurposeDtoV3"
            },
            "type": "array"
          },
          "testDataSubject": {
            "description": "Flag indicating if Data Subject is a test Data Subject",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "DataSubjectProfileDtoV3",
        "type": "object"
      },
      "DataSubjectProfilePurposeDto": {
        "properties": {
          "ConsentDate": {
            "description": "The Date the Data Subject consented to this Purpose",
            "example": "2020-01-07T13:18:23.123Z",
            "format": "date-time",
            "type": "string"
          },
          "CustomPreferences": {
            "description": "A list containing the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileCustomPreferenceDto"
            },
            "type": "array"
          },
          "ExpiryDate": {
            "description": "The Date the Data Subject's consent expires for this Purpose",
            "example": "2020-01-07T13:18:23.123Z",
            "format": "date-time",
            "type": "string"
          },
          "FirstTransactionDate": {
            "description": "The Date the first transaction was recorded against this Purpose",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Geolocation": {
            "$ref": "#/components/schemas/DataSubjectGeolocationDto"
          },
          "GroupEffectiveStatus": {
            "description": "A List of Effective Status of all purposes in consent group reference",
            "items": {
              "$ref": "#/components/schemas/PurposesGroupEffectiveStatusDto"
            },
            "type": "array"
          },
          "Id": {
            "description": "Unique Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "LastInteractionDate": {
            "description": "Date/Time of the most recent Data Subject interaction for this Purpose Receipt API",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "LastReceiptId": {
            "description": "Unique Identifier identifying a Receipt",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "LastTransactionCollectionPointId": {
            "format": "uuid",
            "type": "string"
          },
          "LastTransactionCollectionPointVersion": {
            "format": "int64",
            "type": "integer"
          },
          "LastTransactionDate": {
            "description": "The Date the last transaction was recorded against this Purpose",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "LastUpdatedDate": {
            "description": "Date/Time of the most recent interaction that resulted in an update for this Purpose to any of: Purpose version, Purpose Status, or Topic/Custom Preference selections",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Name": {
            "description": "The Purpose name",
            "example": "Marketing Communications",
            "type": "string"
          },
          "PurposeNote": {
            "$ref": "#/components/schemas/PurposeNoteDto"
          },
          "Status": {
            "description": "Status of the Purpose",
            "enum": [
              "EXPIRED",
              "WITHDRAWN",
              "NO_CONSENT",
              "PENDING",
              "ACTIVE",
              "OPT_OUT",
              "ALWAYS_ACTIVE",
              "HARD_OPT_OUT",
              "EXTEND"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "A list containing the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileTopic"
            },
            "type": "array"
          },
          "TotalTransactionCount": {
            "description": "The total number of Transactions recorded against this Purpose",
            "example": 3,
            "format": "int64",
            "type": "integer"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "WithdrawalDate": {
            "description": "The Date the withdrawal transaction was recorded against this Purpose",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          }
        },
        "title": "DataSubjectProfilePurposeDto",
        "type": "object"
      },
      "DataSubjectProfilePurposeDtoV3": {
        "properties": {
          "ConsentDate": {
            "description": "The Date the Data Subject consented to this Purpose",
            "example": "2020-01-07T13:18:23.123Z",
            "format": "date-time",
            "type": "string"
          },
          "CustomPreferences": {
            "description": "A list containing the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileCustomPreferenceDto"
            },
            "type": "array"
          },
          "ExpiryDate": {
            "description": "The Date the Data Subject's consent expires for this Purpose",
            "example": "2020-01-07T13:18:23.123Z",
            "format": "date-time",
            "type": "string"
          },
          "FirstTransactionDate": {
            "description": "The Date the first transaction was recorded against this Purpose",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "GroupEffectiveStatus": {
            "description": "A List of Effective Status of all purposes in consent group reference",
            "items": {
              "$ref": "#/components/schemas/PurposesGroupEffectiveStatusDto"
            },
            "type": "array"
          },
          "Id": {
            "description": "Unique Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "LastInteractionDate": {
            "description": "Date/Time of the most recent Data Subject interaction for this Purpose Receipt API",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "LastReceiptId": {
            "description": "Unique Identifier identifying a Receipt",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "LastTransactionCollectionPointId": {
            "format": "uuid",
            "type": "string"
          },
          "LastTransactionCollectionPointVersion": {
            "format": "int64",
            "type": "integer"
          },
          "LastTransactionDate": {
            "description": "The Date the last transaction was recorded against this Purpose",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "LastUpdatedDate": {
            "description": "Date/Time of the most recent interaction that resulted in an update for this Purpose to any of: Purpose version, Purpose Status, or Topic/Custom Preference selections",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Name": {
            "description": "The Purpose name",
            "example": "Marketing Communications",
            "type": "string"
          },
          "PurposeNote": {
            "$ref": "#/components/schemas/PurposeNoteDto"
          },
          "Status": {
            "description": "Status of the Purpose",
            "enum": [
              "EXPIRED",
              "WITHDRAWN",
              "NO_CONSENT",
              "PENDING",
              "ACTIVE",
              "OPT_OUT",
              "ALWAYS_ACTIVE",
              "HARD_OPT_OUT",
              "EXTEND"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "A list containing the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileTopic"
            },
            "type": "array"
          },
          "TotalTransactionCount": {
            "description": "The total number of Transactions recorded against this Purpose",
            "example": 3,
            "format": "int64",
            "type": "integer"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "WithdrawalDate": {
            "description": "The Date the withdrawal transaction was recorded against this Purpose",
            "example": "2020-01-12T16:11:25.479Z",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          },
          "geolocation": {
            "$ref": "#/components/schemas/DataSubjectGeolocationDtoV3"
          }
        },
        "title": "DataSubjectProfilePurposeDtoV3",
        "type": "object"
      },
      "DataSubjectProfileTopic": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying a Purpose Topic",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "IsConsented": {
            "description": "Data Subject consent status for the topic",
            "example": true,
            "type": "boolean"
          },
          "Name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "DataSubjectProfileTopic",
        "type": "object"
      },
      "DataSubjectPurposeInformationDto": {
        "properties": {
          "effectiveStatus": {
            "description": "The Data Subject's effective status for this Purpose, in the context of the specified Consent Group",
            "example": "OPT_OUT",
            "type": "string"
          },
          "id": {
            "description": "Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "description": "The Data Subject's actual consent status for this Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "version": {
            "description": "The Purpose's version",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "DataSubjectPurposeInformationDto",
        "type": "object"
      },
      "DataSubjectPurposesRequestDto": {
        "properties": {
          "CustomPreferences": {
            "description": "List of CustomPreferences",
            "items": {
              "$ref": "#/components/schemas/DataSubjectCustomPreferencesDto"
            },
            "type": "array"
          },
          "Id": {
            "description": "Unique Identifier of Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Topics": {
            "description": "List of Purpose Topics",
            "items": {
              "$ref": "#/components/schemas/DataSubjectTopicsDto"
            },
            "type": "array"
          }
        },
        "required": [
          "Id"
        ],
        "title": "DataSubjectPurposesRequestDto",
        "type": "object"
      },
      "DataSubjectPurposesResponseDto": {
        "properties": {
          "Id": {
            "description": "Unique identifier for a Data Subject Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Messages": {
            "description": "A list of messages associated with a Data Subject Purpose status (added | withdrawn | updated)",
            "example": [
              "added"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ReceiptGuid": {
            "description": "Unique identifier for a Receipt",
            "example": "64a9b83e-3aae-4e9f-b75e-5fbd01aecd85",
            "format": "uuid",
            "type": "string"
          },
          "Status": {
            "description": "Indicates success or failure when a Data Subject Purpose is added to a preference",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "DataSubjectPurposesResponseDto",
        "type": "object"
      },
      "DataSubjectSearchDto": {
        "properties": {
          "dataElements": {
            "description": "Filter Data Subject records with Data Elements.",
            "items": {
              "$ref": "#/components/schemas/DataSubjectElementSearchDto"
            },
            "type": "array"
          },
          "identifier": {
            "description": "Restrict information to one Data Subject",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "ignoreDefaultSort": {
            "description": "If specified as true will not sort on last modified date",
            "example": true,
            "type": "boolean"
          },
          "includeCounts": {
            "description": "If specified as false will not return a full record count",
            "example": false,
            "type": "boolean"
          },
          "language": {
            "description": "Filter Data Subject records with language",
            "type": "string"
          },
          "updatedSince": {
            "description": "Filter Data Subject records that were last updated on or after the specified date. The formats accepted yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss.",
            "type": "string"
          },
          "updatedUntil": {
            "description": "Filter Data Subject records that were last updated before the specified date. Formats accepted 'yyyy-MM-dd' or 'yyyy-MM-ddTHH:mm:ss'. Note: passing 'yyyy-MM-dd' will default time to 00:00:00. For example: '2022-02-02' is the same as '2022-02-02T00:00:00'. To see all records between 02/02/2022 to 02/03/2022, the user must pass updatedSince '2022-02-02T00:00:00' and updatedUntil '2022-02-03T23:59:59'.",
            "type": "string"
          }
        },
        "title": "DataSubjectSearchDto",
        "type": "object"
      },
      "DataSubjectTopicsDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier of the Purpose Topic",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "DataSubjectTopicsDto",
        "type": "object"
      },
      "DeleteAttachmentRefResponse": {
        "properties": {
          "identifier": {
            "description": "The Data Subject identifier value",
            "type": "string"
          },
          "statusMessage": {
            "description": "Attachment references deletion Request has been accepted for processing.",
            "type": "string"
          }
        },
        "title": "DeleteAttachmentRefResponse",
        "type": "object"
      },
      "DeleteDataSubjectByPurposeRequest": {
        "properties": {
          "deletePurposeFromAllDataSubjects": {
            "description": "Indicates whether the Purpose should be deleted from all Data Subjects. Default value is false",
            "example": false,
            "type": "boolean"
          },
          "importId": {
            "description": "Import Id of the Data Subject Exclusion job",
            "example": "0, 1,..7",
            "format": "int32",
            "type": "integer"
          },
          "jobGuid": {
            "description": "UUID of the Data Subject Exclusion import job",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "retainTransactions": {
            "description": "Indicates whether transactions should be retained while deleting Purposes from Data Subjects. When set to false transactions will be deleted. Default value is false",
            "example": false,
            "type": "boolean"
          }
        },
        "title": "DeleteDataSubjectByPurposeRequest",
        "type": "object"
      },
      "DeletePurposeFromDataSubject": {
        "properties": {
          "dataSubjects": {
            "description": "A list of DataSubject UUIDs",
            "example": [
              "e9910b0b-61ad-439c-b1a2-ee7c068f4230",
              "9034f440-c199-4523-b2f5-a0e0a460e06c"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "purposes": {
            "description": "A list of Purpose UUIDs",
            "example": [
              "e9910b0b-61ad-439c-b1a2-ee7c068f4230",
              "9034f440-c199-4523-b2f5-a0e0a460e06c"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "retainTransactions": {
            "description": "The parameter to indicate whether the transactions should be retained while deleting Purposes from Data Subjects or not. Default value is false. When set to false, the transactions will be deleted. When set to true, the transactions will be retained.",
            "type": "boolean"
          }
        },
        "title": "DeletePurposeFromDataSubject",
        "type": "object"
      },
      "DsGeolocation": {
        "description": "Geolocation parameters of the DataSubject",
        "properties": {
          "country": {
            "description": "Country of the DataSubject.",
            "example": "US",
            "type": "string"
          },
          "purposeIds": {
            "description": "List of Unique Identifiers of the Purpose for which Geolocation parameters are sent.",
            "items": {
              "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
              "format": "uuid",
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "state": {
            "description": "State Code of the DataSubject.",
            "example": "GA",
            "type": "string"
          },
          "stateName": {
            "description": "State Name of the DataSubject.",
            "example": "Georgia",
            "type": "string"
          }
        },
        "title": "DsGeolocation",
        "type": "object"
      },
      "EditPurposeDto": {
        "properties": {
          "ConsentLifeSpan": {
            "description": "The lifespan of consents recorded against this purpose in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "CustomPreferenceIds": {
            "description": "A list of Custom Preference UUIDs",
            "example": [
              "e9910b0b-61ad-439c-b1a2-ee7c068f4230",
              "9034f440-c199-4523-b2f5-a0e0a460e06c"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "DefaultLanguage": {
            "description": "The Purpose's default language",
            "example": "en-us",
            "type": "string"
          },
          "Description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "ExpiryDateType": {
            "description": "Date field considered for Purpose lifespan/expiry",
            "enum": [
              "LAST_TRANSACTION_DATE",
              "CONSENT_DATE"
            ],
            "example": "LAST_TRANSACTION_DATE",
            "type": "string"
          },
          "Languages": {
            "items": {
              "$ref": "#/components/schemas/PurposeLanguageDto"
            },
            "type": "array"
          },
          "Name": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Organizations": {
            "description": "A list of External Organization Ids. List the organizations to which you want to link the purpose of processing. If an organization is not used, the consent will be visible to all users. This parameter is required when the **Require Organization Field for Purposes** setting is enabled in **Global Settings**.",
            "example": [
              "b7d17fc8-889f-472e-8c74-f1169821e7e7"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ParentPurposeId": {
            "description": "Parent purpose guid",
            "example": "ba54eb25-90f0-4633-ab12-c7bf5afdd856",
            "format": "uuid",
            "type": "string"
          },
          "Status": {
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "type": "string"
          },
          "TopicIds": {
            "description": "A list of Topic UUIDs",
            "example": [
              "712a1f61-a548-432f-afc4-5a383c28eeb2",
              "987b1f51-a538-122e-afc4-6b383c28eeb3"
            ],
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "Type": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "ConsentLifeSpan",
          "Status",
          "Version",
          "Name",
          "Description"
        ],
        "title": "EditPurposeDto",
        "type": "object"
      },
      "ElementDto": {
        "properties": {
          "id": {
            "description": "Unique Identifier",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "languages": {
            "description": "A list of translations",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "order": {
            "description": "Order of the Element",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "ElementDto",
        "type": "object"
      },
      "FileMetaData": {
        "properties": {
          "id": {
            "description": "The unique Identifier identifying the Receipt",
            "example": "64a9b83e-3aae-4e9f-b75e-5fbd01aecd85",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Last Modified Date of the Receipt",
            "example": "2019-08-08T12:00:00.000Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "FileMetaData",
        "type": "object"
      },
      "FilterProvider": {
        "title": "FilterProvider",
        "type": "object"
      },
      "IdVersionPairDto": {
        "properties": {
          "Id": {
            "description": "The unique identifier of the entity",
            "example": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
            "format": "uuid",
            "type": "string"
          },
          "Version": {
            "description": "The version of the entity",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "IdVersionPairDto",
        "type": "object"
      },
      "LinkTokenDto": {
        "properties": {
          "CreatedDate": {
            "description": "The date at which the link token is created.",
            "example": "2019-08-08T12:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "DataSubjectId": {
            "description": "Id of a data subject.",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "ExpiryDate": {
            "description": "The date at which the link token will be expired.",
            "example": "2020-08-08T12:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "LinkToken": {
            "description": "The link token used to log into the preference centre.",
            "example": "jNJW2e8vm8eWb6DlWyGbZ/7PsfC+AHFN8JqvZHPGzJQ=",
            "type": "string"
          },
          "UrlEncodedLinkToken": {
            "description": "The URL encoded version of the link token.",
            "example": "jNJW2e8vm8eWb6DlWyGbZ%2F7PsfC%2BAHFN8JqvZHPGzJQ%3D",
            "type": "string"
          }
        },
        "title": "LinkTokenDto",
        "type": "object"
      },
      "LinkedIdentityGroupDto": {
        "properties": {
          "createdDate": {
            "description": "Creation date of a Linked Identity Group",
            "example": "2020-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "dataSubjects": {
            "description": "A list of all the linked Data Subjects in the group",
            "items": {
              "$ref": "#/components/schemas/DataSubjectEntry"
            },
            "type": "array"
          },
          "groupName": {
            "description": "The Group name for the linked identifier",
            "example": "groupName",
            "type": "string"
          },
          "id": {
            "description": "Globally unique identifier of a Linked Identity Group",
            "example": "b0a6b5da-4ea2-4a9f-a25a-fb3e212efc30",
            "format": "uuid",
            "type": "string"
          },
          "isPrimary": {
            "description": "The identifier is primary or not",
            "example": true,
            "type": "boolean"
          },
          "key": {
            "description": "The linked identifier is PRIMARY or CHILD or GROUP_NAME",
            "example": "CHILD",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Last modified date of a Linked Identity Group",
            "example": "2020-05-30T12:23:42.145Z",
            "format": "date-time",
            "type": "string"
          },
          "numberOfDataSubjects": {
            "description": "The number of Data Subjects in a Linked Identity Group",
            "example": 6,
            "format": "int64",
            "type": "integer"
          },
          "organizations": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "primaryDataSubject": {
            "$ref": "#/components/schemas/DataSubjectEntry"
          },
          "primaryDataSubjectId": {
            "description": "Globally unique identifier of the primary Data Subject",
            "example": "c43a9190-ffd6-4be3-aeff-95b46d0fa59f",
            "format": "uuid",
            "type": "string"
          },
          "primaryDataSubjectIdentifier": {
            "description": "The identifier value of the primary Data Subject",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "primaryDataSubjectIdentifierType": {
            "description": "The identifier type of the primary Data Subject",
            "example": "Email",
            "type": "string"
          },
          "primaryDataSubjects": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectEntry"
            },
            "type": "array"
          }
        },
        "title": "LinkedIdentityGroupDto",
        "type": "object"
      },
      "LinkedIdentityGroupDto_detailView": {
        "properties": {
          "createdDate": {
            "description": "Creation date of a Linked Identity Group",
            "example": "2020-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "dataSubjects": {
            "description": "A list of all the linked Data Subjects in the group",
            "items": {
              "$ref": "#/components/schemas/DataSubjectEntry"
            },
            "type": "array"
          },
          "groupName": {
            "description": "The Group name for the linked identifier",
            "example": "groupName",
            "type": "string"
          },
          "id": {
            "description": "Globally unique identifier of a Linked Identity Group",
            "example": "b0a6b5da-4ea2-4a9f-a25a-fb3e212efc30",
            "format": "uuid",
            "type": "string"
          },
          "primaryDataSubject": {
            "$ref": "#/components/schemas/DataSubjectEntry"
          },
          "primaryDataSubjects": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectEntry"
            },
            "type": "array"
          }
        },
        "title": "LinkedIdentityGroupDto_detailView",
        "type": "object"
      },
      "LinkedIdentityGroupDto_pageView": {
        "properties": {
          "createdDate": {
            "description": "Creation date of a Linked Identity Group",
            "example": "2020-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "groupName": {
            "description": "The Group name for the linked identifier",
            "example": "groupName",
            "type": "string"
          },
          "id": {
            "description": "Globally unique identifier of a Linked Identity Group",
            "example": "b0a6b5da-4ea2-4a9f-a25a-fb3e212efc30",
            "format": "uuid",
            "type": "string"
          },
          "isPrimary": {
            "description": "The identifier is primary or not",
            "example": true,
            "type": "boolean"
          },
          "key": {
            "description": "The linked identifier is PRIMARY or CHILD or GROUP_NAME",
            "example": "CHILD",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Last modified date of a Linked Identity Group",
            "example": "2020-05-30T12:23:42.145Z",
            "format": "date-time",
            "type": "string"
          },
          "numberOfDataSubjects": {
            "description": "The number of Data Subjects in a Linked Identity Group",
            "example": 6,
            "format": "int64",
            "type": "integer"
          },
          "organizations": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "primaryDataSubjectId": {
            "description": "Globally unique identifier of the primary Data Subject",
            "example": "c43a9190-ffd6-4be3-aeff-95b46d0fa59f",
            "format": "uuid",
            "type": "string"
          },
          "primaryDataSubjectIdentifier": {
            "description": "The identifier value of the primary Data Subject",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "primaryDataSubjectIdentifierType": {
            "description": "The identifier type of the primary Data Subject",
            "example": "Email",
            "type": "string"
          },
          "primaryDataSubjects": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectEntry_pageView"
            },
            "type": "array"
          }
        },
        "title": "LinkedIdentityGroupDto_pageView",
        "type": "object"
      },
      "LinkedIdentityGroupRequest": {
        "properties": {
          "groupName": {
            "description": "Unique GroupName value upto 100 characters. Default group name will be selected with the primary identifiers in alphabetical order",
            "example": "groupName",
            "type": "string"
          },
          "identifiers": {
            "description": "A list of all the Data Subject identifiers to be added to the group; must be at least 2",
            "example": [
              "example@otprivacy.com",
              "example@onetrust.com"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "primaryIdentifier": {
            "description": "Specify one or more primary Data Subject identifiers for the group; must be contained in the identifiers list",
            "example": [
              "example@otprivacy.com",
              "example@onetrust.com"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "LinkedIdentityGroupRequest",
        "type": "object"
      },
      "MergeDataSubjecstDTO": {
        "properties": {
          "additionalIdentifiers": {
            "description": "List of additional identifiers to merge to the primary data subject identifier.",
            "example": [
              "portal_id",
              "crm_id"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "primaryIdentifier": {
            "description": "The Primary Data Subject identifier",
            "example": "global_id",
            "type": "string"
          }
        },
        "title": "DataSubjectCreateDTO",
        "type": "object"
      },
      "MergeRequestDetailDto": {
        "properties": {
          "customDataElementNames": {
            "description": "The Data Element Names for which duplicate Data Subjects are identified",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "jobFrequency": {
            "description": "The frequency at which Data Subjects are scanned for duplicates",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ],
            "example": "DAILY",
            "type": "string"
          },
          "jobStatus": {
            "description": "The status of merge request Job",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "COMPLETED",
              "MERGE_REPORT_IN_PROGRESS",
              "FAILED",
              "CANCELLED"
            ],
            "type": "string"
          },
          "mergeCondition": {
            "description": "The matching condition of Data Elements for which duplicate Data Subjects are identified",
            "enum": [
              "ANY",
              "ALL"
            ],
            "example": "ANY",
            "type": "string"
          },
          "mergeRequestId": {
            "description": "Unique Identifier for a merge request",
            "format": "uuid",
            "type": "string"
          },
          "mergeRequestName": {
            "description": "The Name of the merge request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PCCustomDataElementDto": {
        "properties": {
          "hidden": {
            "description": "Boolean flag that denotes if the Custom Data Element is hidden",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique Identifier",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "languages": {
            "description": "A list of translations",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "name": {
            "description": "The Custom Data Element name",
            "example": "Work Email",
            "type": "string"
          },
          "order": {
            "description": "Order of the Element",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "readOnly": {
            "description": "Boolean flag that denotes if the Custom Data Element is read only",
            "example": false,
            "type": "boolean"
          }
        },
        "title": "PCCustomDataElementDto",
        "type": "object"
      },
      "PCCustomPreferenceDto": {
        "properties": {
          "customPreferenceOptions": {
            "description": "A list containing the Custom Preference's Options",
            "items": {
              "$ref": "#/components/schemas/PCCustomPreferenceOptionDto"
            },
            "type": "array"
          },
          "description": {
            "description": "The description of the Custom Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "displayAs": {
            "description": "The display type of the Custom Preference",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "example": "BUTTONS",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the Purpose and Custom Preference relation",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "languages": {
            "description": "A list containing the Custom Preference's Translations",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "name": {
            "description": "The Custom Preference name",
            "example": "Email Frequency",
            "type": "string"
          },
          "required": {
            "description": "Boolean flag that denotes whether selection for this Custom Preference is required",
            "example": false,
            "type": "boolean"
          },
          "selectionType": {
            "description": "The selection type of the Custom Preference",
            "enum": [
              "SINGLE_CHOICE",
              "MULTI_CHOICE"
            ],
            "example": "SINGLE_CHOICE",
            "type": "string"
          }
        },
        "title": "PCCustomPreferenceDto",
        "type": "object"
      },
      "PCCustomPreferenceOptionDto": {
        "properties": {
          "id": {
            "description": "Unique Identifier identifying an Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "description": "The Option label",
            "example": "Weekly",
            "type": "string"
          },
          "languages": {
            "description": "A list containing the Custom Preference Options Translations",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          }
        },
        "title": "PCCustomPreferenceOptionDto",
        "type": "object"
      },
      "PCPurposeDto": {
        "properties": {
          "customPreferences": {
            "description": "A list of the Custom Preferences linked to the Purpose",
            "items": {
              "$ref": "#/components/schemas/PCCustomPreferenceDto"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "languages": {
            "description": "A list of translations",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "order": {
            "description": "Order of the Element",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "topics": {
            "description": "A list of the Topics linked to the Purpose",
            "items": {
              "$ref": "#/components/schemas/PCPurposeTopicDto"
            },
            "type": "array"
          },
          "version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "visibility": {
            "description": "Visibility rule for the purpose",
            "enum": [
              "VISIBLE_TO_ALL",
              "VISIBLE_TO_CONSENTED"
            ],
            "type": "string"
          }
        },
        "title": "PCPurposeDto",
        "type": "object"
      },
      "PCPurposeTopicDto": {
        "properties": {
          "id": {
            "description": "The unique identifier of the Purpose and Topic relation",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "languages": {
            "description": "A list of translations for the Topic",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "PCPurposeTopicDto",
        "type": "object"
      },
      "PageCollectionPointDetailDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/CollectionPointDetailDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageCollectionPointDetailDto",
        "type": "object"
      },
      "PageConsentGroupListDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/ConsentGroupListDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageConsentGroupListDto",
        "type": "object"
      },
      "PageCustomPreferenceDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageCustomPreferenceDto",
        "type": "object"
      },
      "PageCustomPreferenceGetDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceGetDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageCustomPreferenceGetDto",
        "type": "object"
      },
      "PageDataSubjectForPurposeInformation": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectForPurposeInformation"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageDataSubjectForPurposeInformation",
        "type": "object"
      },
      "PageLinkTokenDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/LinkTokenDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageLinkTokenDto",
        "type": "object"
      },
      "PageLinkedIdentityGroupDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/LinkedIdentityGroupDto_pageView"
            },
            "type": "array"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageLinkedIdentityGroupDto",
        "type": "object"
      },
      "PageMergeRequestDetailDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/MergeRequestDetailDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PageMergeRequestDetailDto",
        "type": "object"
      },
      "PagePreferenceCenterSummaryDtoV2": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/PreferenceCenterSummaryDtoV2"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PagePreferenceCenterSummaryDtoV2>",
        "type": "object"
      },
      "PagePurposeDetailsDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/PurposeDetailsDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PagePurposeDetailsDto",
        "type": "object"
      },
      "PagePurposeVersionsGroupedByGuid": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/PurposeVersionsGroupedByGuid"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          }
        },
        "title": "PagePurposeVersionsGroupedByGuid",
        "type": "object"
      },
      "Pageable": {
        "properties": {
          "offset": {
            "format": "int64",
            "type": "integer"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "type": "integer"
          },
          "paged": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "unpaged": {
            "type": "boolean"
          }
        },
        "title": "Pageable",
        "type": "object"
      },
      "PreferenceCenterDto": {
        "properties": {
          "DisplayNotificationPurpose": {
            "description": "Setting to display or hide email notification option when Preferences change",
            "example": true,
            "type": "boolean"
          },
          "EnableMultipleIdentities": {
            "type": "boolean"
          },
          "Language": {
            "description": "The Preference Center content language code",
            "example": "en-us",
            "type": "string"
          },
          "Languages": {
            "description": "List containing the Preference Center translations' language codes",
            "example": [
              "en-us",
              "fr"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "PortalSettings": {
            "description": "Preference Center Portal settings",
            "type": "object"
          },
          "PreferenceCenterSettings": {
            "description": "Preference Center settings",
            "type": "object"
          },
          "PreferenceCentreId": {
            "description": "Unique identifier identifying a Preference Center",
            "example": "d3c9d247-8f0b-4277-bd22-01837d6db3e6",
            "format": "uuid",
            "type": "string"
          },
          "ProfileSettings": {
            "description": "Preference Center Profile page settings",
            "type": "object"
          },
          "Purposes": {
            "description": "List of Purposes associated to the Preference Center",
            "items": {
              "$ref": "#/components/schemas/PurposesWithLanguagesDto"
            },
            "type": "array"
          },
          "Status": {
            "description": "Status code for the preference center [200 (active), 400 (error retrieving this preference center)]",
            "example": 200,
            "format": "int32",
            "type": "integer"
          },
          "Template": {
            "description": "The Preference Center template type",
            "enum": [
              "ORIGINAL",
              "ENHANCED",
              "MULTIPAGE"
            ],
            "example": "ENHANCED",
            "type": "string"
          },
          "Translations": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "description": "List containing the Preference Center translations",
            "example": {
              "languageCode": {
                "property": "value"
              }
            },
            "type": "object"
          },
          "messages": {
            "description": "List of messages associated with the Preference Center",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "PreferenceCenterDto",
        "type": "object"
      },
      "PreferenceCenterPageDto": {
        "properties": {
          "displaySubscribeSettings": {
            "description": "Boolean flag that denotes if Subscribe settings need to be displayed on the page",
            "example": false,
            "type": "boolean"
          },
          "displayUnsubscribeAll": {
            "description": "Boolean flag that denotes if UnSubscribe All setting needs to be displayed on the page",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of the Preference Center Page",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "isHidden": {
            "description": "Boolean flag that denotes if the Preference Center page header is hidden",
            "example": false,
            "type": "boolean"
          },
          "languages": {
            "description": "A list of translations for the Page",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "navigationEnabled": {
            "description": "Boolean flag that denotes if the Preference Center page navigation is enabled",
            "example": false,
            "type": "boolean"
          },
          "order": {
            "description": "Order of Preference Center Page",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "sections": {
            "description": "A list of all the attached Sections to the Page",
            "items": {
              "$ref": "#/components/schemas/PreferenceCenterSectionDto"
            },
            "type": "array"
          }
        },
        "title": "PreferenceCenterPageDto",
        "type": "object"
      },
      "PreferenceCenterPurposesByIdentifier": {
        "properties": {
          "DataSubjectId": {
            "description": "The Data Subject identifier",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "DsDataElements": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A list containing the Data Elements and their values for the specified Data Subject",
            "example": [
              {
                "First Name": "John",
                "Last Name": "Doe"
              }
            ],
            "type": "object"
          },
          "Language": {
            "description": "The Data Subject's preferred language code",
            "example": "en-us",
            "type": "string"
          },
          "Purposes": {
            "description": "A list of Purposes associated to the Data Subject",
            "items": {
              "$ref": "#/components/schemas/PurposesByIdentifierDto"
            },
            "type": "array"
          },
          "Status": {
            "description": "Status code for the Preference Center [200 (active), 400 (no transactions for this Data Subject)]",
            "example": 200,
            "format": "int32",
            "type": "integer"
          },
          "messages": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unsubscribeAll": {
            "description": "Indicates whether a data subject has opted to unsubscribe from all Purposes within a Preference Center ",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "PreferenceCenterPurposesByIdentifier",
        "type": "object"
      },
      "PreferenceCenterSectionDto": {
        "properties": {
          "customDataElements": {
            "description": "A list of all the attached Custom Data Elements to the Section",
            "items": {
              "$ref": "#/components/schemas/PCCustomDataElementDto"
            },
            "type": "array"
          },
          "elements": {
            "description": "A list of all the attached Elements to the Section",
            "items": {
              "$ref": "#/components/schemas/ElementDto"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique identifier of the Preference Center Section",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "identifierType": {
            "description": "Identifier type of the Preference Center Section",
            "example": "Email",
            "type": "string"
          },
          "isHeaderHidden": {
            "description": "Boolean flag that denotes if the Preference Center Section header is hidden",
            "example": false,
            "type": "boolean"
          },
          "languages": {
            "description": "A list of translations for the Section",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            },
            "type": "array"
          },
          "order": {
            "description": "Order of Preference Center Section",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "purposes": {
            "description": "A list of all the attached Purposes to the Section",
            "items": {
              "$ref": "#/components/schemas/PCPurposeDto"
            },
            "type": "array"
          }
        },
        "title": "PreferenceCenterSectionDto",
        "type": "object"
      },
      "PreferenceCenterSummaryDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying the Preference Center",
            "example": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The Preference Center name",
            "example": "Email Communication Preferences",
            "type": "string"
          },
          "OrganizationName": {
            "description": "The Organization's name",
            "example": "OneTrust",
            "type": "string"
          },
          "Template": {
            "description": "The Preference Center template type",
            "enum": [
              "ORIGINAL",
              "ENHANCED",
              "MULTIPAGE"
            ],
            "example": "ENHANCED",
            "type": "string"
          }
        },
        "title": "PreferenceCenterSummaryDto",
        "type": "object"
      },
      "PreferenceCenterSummaryDtoV2": {
        "properties": {
          "createdDate": {
            "description": "The Preference Center creation date",
            "example": "2018-03-22T20:55:40.237",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier identifying the Preference Center",
            "example": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "The Preference Center name",
            "example": "Email Communication Preferences",
            "type": "string"
          },
          "organizationName": {
            "description": "The Organization's name",
            "example": "OneTrust",
            "type": "string"
          },
          "publishedDate": {
            "description": "The Preference Center published date",
            "example": "2018-03-22T20:55:40.237",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "The Preference Center status",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED",
              "INACTIVE"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "template": {
            "description": "The Preference Center template type",
            "enum": [
              "ORIGINAL",
              "ENHANCED",
              "MULTIPAGE"
            ],
            "example": "ENHANCED",
            "type": "string"
          }
        },
        "title": "PreferenceCenterSummaryDtoV2",
        "type": "object"
      },
      "PreferenceCustomPreferenceLanguageDto": {
        "properties": {
          "Default": {
            "description": "Whether this language is the default one for the Custom Preference",
            "example": true,
            "type": "boolean"
          },
          "Description": {
            "description": "The description of the Custom Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "Language": {
            "description": "The Custom Preference content language code",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "name for a Custom Preference",
            "type": "string"
          },
          "Options": {
            "description": "Options associated with a Custom Preference",
            "items": {
              "$ref": "#/components/schemas/PreferenceCustomPreferenceOptionDto"
            },
            "type": "array"
          }
        },
        "title": "PreferenceCustomPreferenceLanguageDto",
        "type": "object"
      },
      "PreferenceCustomPreferenceOptionDto": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying an Option",
            "example": "ca0fc41b-b28a-4335-804c-44d1f0f782ed",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "The Option label",
            "example": "Weekly",
            "type": "string"
          }
        },
        "title": "PreferenceCustomPreferenceOptionDto",
        "type": "object"
      },
      "PreferenceDetail": {
        "properties": {
          "TopicId": {
            "description": "Unique Identifier identifying a Topic",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "PreferenceDetail",
        "type": "object"
      },
      "PreferencePurposeCustomPreferenceDto": {
        "properties": {
          "Description": {
            "description": "The description of the Custom Preference",
            "example": "Options for different frequencies to receive emails",
            "type": "string"
          },
          "DisplayAs": {
            "description": "Display Type of the Custom Preference Options",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "type": "string"
          },
          "Id": {
            "description": "Unique identifier of the Purpose and Custom Preference relation",
            "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
            "format": "uuid",
            "type": "string"
          },
          "Languages": {
            "description": "A list containing the Custom Preference's Languages",
            "items": {
              "$ref": "#/components/schemas/PreferenceCustomPreferenceLanguageDto"
            },
            "type": "array"
          },
          "Name": {
            "description": "The Custom Preference name",
            "example": "Email Frequency",
            "type": "string"
          },
          "Options": {
            "description": "A list containing the Custom Preference's Options",
            "items": {
              "$ref": "#/components/schemas/PreferenceCustomPreferenceOptionDto"
            },
            "type": "array"
          },
          "Required": {
            "description": "Whether selection for this Custom Preference is required",
            "example": false,
            "type": "boolean"
          },
          "SelectionType": {
            "description": "Selection Type of the Custom Preference Options",
            "enum": [
              "SINGLE_CHOICE",
              "MULTI_CHOICE"
            ],
            "type": "string"
          }
        },
        "title": "PreferencePurposeCustomPreferenceDto",
        "type": "object"
      },
      "PreferencePurposeTopicDto": {
        "properties": {
          "Id": {
            "description": "The unique identifier of the Purpose and Topic relation",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "IntegrationKey": {
            "description": "The Topic integration key (combination of Purpose and Topic names)",
            "example": "Marketing-Communications_Car-Marketing",
            "type": "string"
          },
          "Languages": {
            "description": "Translations for a Topic",
            "items": {
              "$ref": "#/components/schemas/TopicLanguageDto"
            },
            "type": "array"
          },
          "Name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "PreferencePurposeTopicDto",
        "type": "object"
      },
      "PurposeCreateDto": {
        "properties": {
          "ConsentLifeSpan": {
            "description": "The length of time in seconds that a data subject's consent to the purpose will remain valid. Enable this setting to automatically expire data subject consent after a specified period of time relative to the date when consent was given. Setting a value of `0` will disable the consent lifespan.",
            "example": 7889238,
            "format": "int64",
            "minimum": 0,
            "type": "integer"
          },
          "DefaultLanguage": {
            "description": "The Purpose's default language",
            "example": "en-us",
            "type": "string"
          },
          "Description": {
            "description": "Description of the purpose of processing.",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "Name": {
            "description": "Unique name of the Purpose. The name that you leverage will be used internally in the application to help you identify the purpose.",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Organizations": {
            "description": "A list of External Organization Ids. List the organizations to which you want to link the purpose of processing. If an organization is not used, the consent will be visible to all users. This parameter is required when the **Require Organization Field for Purposes** setting is enabled in **Global Settings**.",
            "example": [
              "b7d17fc8-889f-472e-8c74-f1169821e7e7"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ParentPurposeId": {
            "description": "Parent purpose guid",
            "example": "d5d06047-c1f6-4dad-810b-3051b5350cbd",
            "format": "uuid",
            "type": "string"
          },
          "Type": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Description",
          "DefaultLanguage",
          "ConsentLifeSpan"
        ],
        "title": "PurposeCreateDto",
        "type": "object"
      },
      "PurposeCustomPreferenceDto": {
        "properties": {
          "CustomPreferenceOptions": {
            "description": "A list with the Custom Preferences' Options",
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionDto"
            },
            "type": "array"
          },
          "Id": {
            "description": "Unique identifier of the Purpose and Custom Preference relation",
            "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
            "type": "string"
          },
          "Name": {
            "description": "The Custom Preference name",
            "example": "Email Frequency",
            "type": "string"
          }
        },
        "title": "PurposeCustomPreferenceDto",
        "type": "object"
      },
      "PurposeCustomPreferenceDtoV2": {
        "properties": {
          "customPreferenceOptions": {
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceOptionDtoV2"
            },
            "type": "array"
          },
          "displayAs": {
            "description": "The display type of the Custom Preference",
            "enum": [
              "BUTTONS",
              "CHECKBOXES"
            ],
            "example": "BUTTONS",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the Purpose and Custom Preference relation",
            "example": "c4a57a38-3774-45ad-9fa4-dbc545542232",
            "type": "string"
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/CustomPreferenceLanguageDtoV2"
            },
            "type": "array"
          },
          "name": {
            "description": "The Custom Preference name",
            "example": "Email Frequency",
            "type": "string"
          }
        },
        "title": "PurposeCustomPreferenceDtoV2",
        "type": "object"
      },
      "PurposeDetailDtoV2": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          },
          "consentLifeSpan": {
            "description": "The lifespan of consents recorded against this purpose version in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "createdBy": {
            "description": "Id of the user who created the Purpose",
            "example": "d452ec68-71c4-4935-9f17-5fd054365805",
            "format": "uuid",
            "type": "string"
          },
          "createdDate": {
            "description": "Created Date of the Purpose Version",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "customPreferences": {
            "items": {
              "$ref": "#/components/schemas/PurposeCustomPreferenceDtoV2"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Purpose version",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "detail": {
            "description": "URL to get the details of the Purpose Version",
            "example": "https://app-eu.onetrust.com/api/consentmanager/v2/purposes/f2229953-b4b5-4042-8cb9-b78038cc4c46?version=2",
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "description": "Name of the purpose version",
            "example": "Marketing Communications",
            "type": "string"
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/PurposeLanguageDtoV2"
            },
            "type": "array"
          },
          "lastModifiedBy": {
            "description": "Id of the user who last modified the Purpose",
            "example": "d452ec68-71c4-4935-9f17-5fd054365805",
            "format": "uuid",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Last Modified Date of the purpose Version",
            "example": "2019-12-30T10:54:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "parentPurposeId": {
            "description": "Parent purpose guid",
            "example": "ba54eb25-90f0-4633-ab12-c7bf5afdd856",
            "format": "uuid",
            "type": "string"
          },
          "purposeType": {
            "description": "Type of the purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "retireOnDate": {
            "description": "Retirement Date of the Purpose",
            "example": "2021-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the purpose version",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "topics": {
            "items": {
              "$ref": "#/components/schemas/PurposeTopicDtoV2"
            },
            "type": "array"
          },
          "version": {
            "description": "Version of the purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PurposeDetailDtoV2",
        "type": "object"
      },
      "PurposeDetailDtoV2Get": {
        "properties": {
          "consentLifeSpan": {
            "description": "The lifespan of consents recorded against this purpose version in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "Custom preference selected by the user",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "externalReference": {
            "description": "Link for exterenal reference",
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "description": "Name of the Purpose version",
            "example": "Marketing Communications",
            "type": "string"
          },
          "purposeType": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "status": {
            "description": "Status of the Purpose version",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PurposeDetailDtoV2Get",
        "type": "object"
      },
      "PurposeDetailsDto": {
        "properties": {
          "ConsentLifeSpan": {
            "description": "The lifespan of the consent in seconds",
            "example": 7776000,
            "format": "int64",
            "type": "integer"
          },
          "CustomPreferences": {
            "description": "A list of the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/PurposeCustomPreferenceDto"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the purpose of processing",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "ExpiryDateType": {
            "description": "Date field considered for Purpose lifespan/expiry",
            "enum": [
              "LAST_TRANSACTION_DATE",
              "CONSENT_DATE"
            ],
            "example": "LAST_TRANSACTION_DATE",
            "type": "string"
          },
          "Id": {
            "description": "Globally unique identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Languages": {
            "description": "A list of the Purpose's Languages",
            "items": {
              "$ref": "#/components/schemas/PurposeLanguageDto"
            },
            "type": "array"
          },
          "ParentPurposeId": {
            "description": "Parent purpose guid",
            "example": "ba54eb25-90f0-4633-ab12-c7bf5afdd856",
            "format": "uuid",
            "type": "string"
          },
          "PurposeType": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "RetireOnDate": {
            "description": "Retirement Date of the Purpose",
            "example": "2021-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "description": "Status of the Purpose",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "example": "DRAFT",
            "type": "string"
          },
          "Topics": {
            "description": "A list of the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/PurposeTopicDto"
            },
            "type": "array"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          }
        },
        "title": "PurposeDetailsDto",
        "type": "object"
      },
      "PurposeDto": {
        "properties": {
          "CreatedDate": {
            "description": "Created Date of the Purpose",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "CustomPreferences": {
            "description": "A list of the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/PurposeCustomPreferenceDto"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "Id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "LifeSpan": {
            "description": "The lifespan of consents recorded against this Purpose in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "NewVersionAvailable": {
            "description": "Whether there is a new version of the Purpose available",
            "example": true,
            "type": "boolean"
          },
          "ParentPurposeId": {
            "description": "Parent purpose guid",
            "example": "ba54eb25-90f0-4633-ab12-c7bf5afdd856",
            "format": "uuid",
            "type": "string"
          },
          "Status": {
            "description": "Status of the Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "A list of the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/PurposeTopicDto"
            },
            "type": "array"
          },
          "Type": {
            "description": "Type of the Purpose",
            "example": "STANDARD",
            "type": "string"
          },
          "UpdatedDate": {
            "description": "Last Modified Date of the Purpose",
            "example": "2019-12-30T10:54:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          }
        },
        "title": "PurposeDto",
        "type": "object"
      },
      "PurposeDtoV2": {
        "properties": {
          "consentLifeSpan": {
            "description": "The lifespan of consents recorded against this purpose version in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "createdDate": {
            "description": "Created Date of the Purpose Version",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the Purpose version",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "detail": {
            "description": "URL to get the details of the Purpose Version",
            "example": "https://app-eu.onetrust.com/api/consentmanager/v2/purposes/f2229953-b4b5-4042-8cb9-b78038cc4c46?version=2",
            "type": "string"
          },
          "id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "description": "Name of the Purpose version",
            "example": "Marketing Communications",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Last Modified Date of the Purpose Version",
            "example": "2019-12-30T10:54:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "parentPurposeId": {
            "description": "Parent purpose guid",
            "example": "ba54eb25-90f0-4633-ab12-c7bf5afdd856",
            "format": "uuid",
            "type": "string"
          },
          "purposeType": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "retireOnDate": {
            "description": "Retirement Date of the Purpose",
            "example": "2021-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the Purpose version",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PurposeDtoV2",
        "type": "object"
      },
      "PurposeInformation": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "Name of the Purpose version",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Topics": {
            "description": "A list containing the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/TopicInformation"
            },
            "type": "array"
          },
          "Transactions": {
            "description": "A list containing information about consent Transactions",
            "items": {
              "$ref": "#/components/schemas/TransactionInformation"
            },
            "type": "array"
          }
        },
        "title": "PurposeInformation",
        "type": "object"
      },
      "PurposeInformationDtoV2": {
        "properties": {
          "consentLifeSpan": {
            "description": "The lifespan of consents recorded against this Purpose in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "customPreferences": {
            "description": "A list of the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/PurposeCustomPreferenceDtoV2"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "id": {
            "description": "The unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "purposeNote": {
            "$ref": "#/components/schemas/PurposeNoteDtoV2"
          },
          "purposeType": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "status": {
            "description": "Status of the Purpose",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "RETIRED"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "topics": {
            "description": "A list of the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/PurposeTopicDtoV2"
            },
            "type": "array"
          },
          "transactionType": {
            "description": "The Transaction Type",
            "enum": [
              "PENDING",
              "CONFIRMED",
              "WITHDRAWN",
              "EXPIRED",
              "NOTGIVEN",
              "OPT_OUT",
              "NO_CHOICE",
              "HARD_OPT_OUT",
              "EXTEND"
            ],
            "example": "CONFIRMED",
            "type": "string"
          },
          "version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PurposeInformationDtoV2",
        "type": "object"
      },
      "PurposeLanguageDto": {
        "properties": {
          "Default": {
            "description": "Whether this language is the default one for the Purpose",
            "example": true,
            "type": "boolean"
          },
          "Description": {
            "description": "The Purpose description",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "Language": {
            "description": "The Purpose content language code",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "The Purpose name",
            "example": "Marketing Communications",
            "type": "string"
          }
        },
        "title": "PurposeLanguageDto",
        "type": "object"
      },
      "PurposeLanguageDtoV2": {
        "properties": {
          "default": {
            "description": "Whether this language is the default one for the Purpose",
            "example": true,
            "type": "boolean"
          },
          "description": {
            "description": "The Purpose description",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "language": {
            "description": "The Purpose content language code",
            "example": "en-us",
            "type": "string"
          },
          "name": {
            "description": "The Purpose name",
            "example": "Marketing Communications",
            "type": "string"
          }
        },
        "title": "PurposeLanguageDtoV2",
        "type": "object"
      },
      "PurposeNoteDto": {
        "properties": {
          "IsValidNote": {
            "description": "Flag indicating if the note is a valid reason template",
            "example": true,
            "type": "boolean"
          },
          "NoteId": {
            "description": "Unique identifier of the reason template",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
            "format": "uuid",
            "type": "string"
          },
          "NoteLanguage": {
            "description": "The language of the note",
            "example": "en-US",
            "type": "string"
          },
          "NoteText": {
            "description": "The actual text of the note",
            "example": "I did not sign up for this.",
            "type": "string"
          },
          "NoteType": {
            "description": "The type of the note",
            "enum": [
              "UNSUBSCRIBE_REASON"
            ],
            "example": "UNSUBSCRIBE_REASON",
            "type": "string"
          }
        },
        "title": "PurposeNoteDto",
        "type": "object"
      },
      "PurposeNoteDtoV2": {
        "properties": {
          "isValidNote": {
            "description": "Flag indicating if the note is a valid reason template",
            "example": true,
            "type": "boolean"
          },
          "noteId": {
            "description": "Unique identifier of the reason template",
            "example": "92cf3a3a-09a9-4d04-b69d-ea5bb1db550d",
            "format": "uuid",
            "type": "string"
          },
          "noteLanguage": {
            "description": "The language of the note",
            "example": "en-US",
            "type": "string"
          },
          "noteText": {
            "description": "The actual text of the note",
            "example": "I did not sign up for this.",
            "type": "string"
          },
          "noteType": {
            "description": "The type of the note",
            "enum": [
              "UNSUBSCRIBE_REASON"
            ],
            "example": "UNSUBSCRIBE_REASON",
            "type": "string"
          }
        },
        "title": "PurposeNoteDtoV2",
        "type": "object"
      },
      "PurposeRuleDto": {
        "properties": {
          "effectiveStatus": {
            "description": "The Consent Group's effective Transaction Status for this Purpose, which is calculated based on the Consent Group hierarchy",
            "example": "OPT_OUT",
            "type": "string"
          },
          "enforcedStatus": {
            "description": "The Transaction Status enforced by the Consent Group for this Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "purposeId": {
            "description": "Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "PurposeRuleDto",
        "type": "object"
      },
      "PurposeRuleRequest": {
        "properties": {
          "enforcedStatus": {
            "description": "The Transaction Status enforced by the Consent Group for this Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "purposeId": {
            "description": "Identifier identifying a Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "PurposeRuleRequest",
        "type": "object"
      },
      "PurposeSimpleDetailsDtoV1": {
        "properties": {
          "Id": {
            "description": "The unique identifier of the purpose",
            "example": "cbac5669-1445-4520-ba15-b1993902b295",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The name of the purpose",
            "example": "Entity Name",
            "type": "string"
          }
        },
        "title": "PurposeSimpleDetailsDtoV1",
        "type": "object"
      },
      "PurposeTopicDto": {
        "properties": {
          "CanDelete": {
            "description": "Whether this Topic can be deleted or not",
            "example": true,
            "type": "boolean"
          },
          "Id": {
            "description": "The unique identifier of the Purpose and Topic relation",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "IntegrationKey": {
            "description": "The Topic integration key (combination of Purpose and Topic names)",
            "example": "Marketing-Communications_Car-Marketing",
            "type": "string"
          },
          "Name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "PurposeTopicDto",
        "type": "object"
      },
      "PurposeTopicDtoV2": {
        "properties": {
          "id": {
            "description": "The unique identifier of the Purpose and Topic relation",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "integrationKey": {
            "description": "The Topic integration key (combination of Purpose and Topic names)",
            "example": "Marketing-Communications_Car-Marketing",
            "type": "string"
          },
          "languages": {
            "description": "List of languages for a Topic",
            "items": {
              "$ref": "#/components/schemas/TopicLanguageDtoV2"
            },
            "type": "array"
          },
          "name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "PurposeTopicDtoV2",
        "type": "object"
      },
      "PurposeVersionsGroupedByGuid": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Custom Purpose Attributes configured in the Attribute Manager under Consent & Preference Management > Setup > Attribute Manager in the OneTrust application. If values are populated for the attribute they will be displayed in this field.",
            "type": "object"
          },
          "createdDate": {
            "description": "Created Date of the Purpose",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Date when this purpose last got updated",
            "example": "2021-01-21T16:40:55.723Z",
            "format": "date-time",
            "type": "string"
          },
          "publishedBy": {
            "description": "Id of the user who last published the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "publishedDate": {
            "description": "Published Date of the Purpose",
            "example": "2019-12-30T10:53:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "purposeId": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "retireOnDate": {
            "description": "Retirement Date of the Purpose",
            "example": "2021-05-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "versions": {
            "description": "Versions of the Purpose",
            "items": {
              "properties": {
                "consentLifeSpan": {
                  "description": "The lifespan of consents recorded against this purpose version in seconds",
                  "example": 7889238,
                  "format": "int64",
                  "type": "integer"
                },
                "createdBy": {
                  "description": "Id of the user who created the Purpose Version",
                  "example": "d452ec68-71c4-4935-9f17-5fd054365805",
                  "format": "uuid",
                  "type": "string"
                },
                "createdDate": {
                  "description": "Created Date of the Purpose Version",
                  "example": "2019-12-30T10:52:30.974Z",
                  "format": "date-time",
                  "type": "string"
                },
                "customPreferences": {
                  "items": {
                    "$ref": "#/components/schemas/PurposeCustomPreferenceDtoV2"
                  },
                  "type": "array"
                },
                "description": {
                  "description": "Description of the Purpose version",
                  "example": "Collect customer emails for marketing purposes",
                  "type": "string"
                },
                "detail": {
                  "description": "URL to get the details of the Purpose Version",
                  "example": "https://app-eu.onetrust.com/api/consentmanager/v2/purposes/f2229953-b4b5-4042-8cb9-b78038cc4c46?version=2",
                  "type": "string"
                },
                "label": {
                  "description": "Name of the Purpose version",
                  "example": "Marketing Communications",
                  "type": "string"
                },
                "lastModifiedBy": {
                  "description": "Id of the user who last modified the Purpose Version",
                  "example": "304F7D36-75A2-4967-81A5-5A7D604C6A19",
                  "format": "uuid",
                  "type": "string"
                },
                "lastModifiedDate": {
                  "description": "Last Modified Date of the Purpose Version",
                  "example": "2019-12-30T10:54:30.974Z",
                  "format": "date-time",
                  "type": "string"
                },
                "organizations": {
                  "description": "A list of unique identifiers of the organizations an active purpose version is linked to",
                  "items": {
                    "description": "The unique identifier of the organization",
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": "array"
                },
                "publishedBy": {
                  "description": "Id of the user who last published the Purpose Version",
                  "example": "304F7D36-75A2-4967-81A5-5A7D604C6A19",
                  "format": "uuid",
                  "type": "string"
                },
                "publishedDate": {
                  "description": "Last Published Date of the Purpose Version",
                  "example": "2019-12-30T10:54:30.974Z",
                  "format": "date-time",
                  "type": "string"
                },
                "purposeType": {
                  "description": "Type of the Purpose",
                  "enum": [
                    "STANDARD",
                    "COOKIE",
                    "IAB",
                    "MOBILE",
                    "NOTIFICATION_OPT_OUT"
                  ],
                  "example": "STANDARD",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the Purpose version",
                  "enum": [
                    "DRAFT",
                    "ACTIVE",
                    "RETIRED"
                  ],
                  "example": "ACTIVE",
                  "type": "string"
                },
                "topics": {
                  "items": {
                    "$ref": "#/components/schemas/PurposeTopicDtoV2"
                  },
                  "type": "array"
                },
                "version": {
                  "description": "Version of the Purpose",
                  "example": 2,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "title": "PurposeDtoV2",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "PurposeVersionsGroupedByGuid",
        "type": "object"
      },
      "PurposesByIdentifierDto": {
        "properties": {
          "CustomPreferences": {
            "description": "List of consented Custom Preferences associated to a Purpose",
            "items": {
              "$ref": "#/components/schemas/PreferencePurposeCustomPreferenceDto"
            },
            "type": "array"
          },
          "Description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "Id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Status": {
            "description": "Status of the Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "List of consented Topics associated to a Purpose",
            "items": {
              "$ref": "#/components/schemas/PreferencePurposeTopicDto"
            },
            "type": "array"
          },
          "TransactionStatus": {
            "description": "Status for a Data Subject consent on a Purpose",
            "example": "ACTIVE",
            "type": "string"
          }
        },
        "title": "PurposesByIdentifierDto",
        "type": "object"
      },
      "PurposesGroupEffectiveStatusDto": {
        "properties": {
          "EffectiveStatus": {
            "description": "Purpose status in a Consent Group",
            "example": "ACTIVE",
            "type": "string"
          },
          "GroupId": {
            "description": "Unique identifier for identifying a Consent group",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          }
        },
        "title": "PurposesGroupEffectiveStatusDto",
        "type": "object"
      },
      "PurposesWithLanguagesDto": {
        "properties": {
          "CustomPreferences": {
            "description": "A list of the Purpose's Custom Preferences",
            "items": {
              "$ref": "#/components/schemas/PreferencePurposeCustomPreferenceDto"
            },
            "type": "array"
          },
          "DefaultConsentStatus": {
            "description": "Default consent status (ACTIVE | OPT_OUT)",
            "enum": [
              "ACTIVE",
              "OPT_OUT"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "Description": {
            "description": "Description of the Purpose",
            "example": "Collect customer emails for marketing purposes",
            "type": "string"
          },
          "Id": {
            "description": "Unique Identifier of the Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          },
          "Label": {
            "description": "Name of the Purpose",
            "example": "Marketing Communications",
            "type": "string"
          },
          "Languages": {
            "description": "List of the Purpose languages",
            "items": {
              "$ref": "#/components/schemas/PurposeLanguageDto"
            },
            "type": "array"
          },
          "LifeSpan": {
            "description": "The lifespan of consents recorded against this Purpose in seconds",
            "example": 7889238,
            "format": "int64",
            "type": "integer"
          },
          "PurposeType": {
            "description": "Type of the Purpose",
            "enum": [
              "STANDARD",
              "COOKIE",
              "IAB",
              "MOBILE",
              "NOTIFICATION_OPT_OUT"
            ],
            "example": "STANDARD",
            "type": "string"
          },
          "Status": {
            "description": "Status of the Purpose",
            "example": "ACTIVE",
            "type": "string"
          },
          "Topics": {
            "description": "A list of the Purpose's Topics",
            "items": {
              "$ref": "#/components/schemas/PreferencePurposeTopicDto"
            },
            "type": "array"
          },
          "Version": {
            "description": "Version of the Purpose",
            "example": 2,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "PurposesWithLanguagesDto",
        "type": "object"
      },
      "ReceiptInformationDetailDto": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Attributes attached to the collection point",
            "type": "object"
          },
          "collectionPointName": {
            "description": "Name of the Collection Point",
            "example": "Web Form Collection Point",
            "type": "string"
          },
          "collectionPointType": {
            "description": "Type of the Collection Point",
            "example": "WEB_FORM",
            "type": "string"
          },
          "collectionPointUUID": {
            "description": "Unique Identifier of the Collection Point",
            "example": "25d9ccac-db88-4d34-849c-3d602a629961",
            "format": "uuid",
            "type": "string"
          },
          "collectionPointVersion": {
            "description": "Version of the Collection Point",
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "consentCreationDate": {
            "description": "The Date the Data Subject consented ",
            "example": "2019-12-30T10:52:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "customPayload": {
            "description": "Json for customPayload",
            "example": {
              "payload1": "value1",
              "payload2": "value2"
            },
            "type": "string"
          },
          "dataSubjectIdentifier": {
            "description": "The Data Subject identifier value",
            "example": "example@otprivacy.com",
            "type": "string"
          },
          "dataSubjectIdentifierHash": {
            "description": "Hash Value of Data Subject Identifier",
            "example": "ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff",
            "type": "string"
          },
          "doubleOptIn": {
            "description": "Flag for Double Opt In ",
            "example": true,
            "type": "boolean"
          },
          "geolocation": {
            "$ref": "#/components/schemas/DsGeolocation"
          },
          "id": {
            "description": "The unique identifier identifying a Data Subject",
            "example": "09ccd1b9-84a0-4bcb-a167-f761391ebffa",
            "format": "uuid",
            "type": "string"
          },
          "interactionDate": {
            "description": "Date/Time when the Data Subject performed the action of giving consent, which can be earlier than the date/time of when the receipt was issued",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "isAnonymous": {
            "description": "Is Anonymous",
            "example": true,
            "type": "boolean"
          },
          "language": {
            "description": "The preferred language for the Data Subject",
            "example": "en-us",
            "type": "string"
          },
          "origin": {
            "description": "Origin of the request",
            "enum": [
              "IMPORT",
              "API",
              "SDK",
              "ONETRUST",
              "PREFERENCE_CENTER"
            ],
            "example": "OneTrust",
            "type": "string"
          },
          "otJwtVersion": {
            "description": "Version of the JWT token",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "purposes": {
            "description": "Detailed information of the Purpose",
            "items": {
              "$ref": "#/components/schemas/PurposeInformationDtoV2"
            },
            "type": "array"
          },
          "receiptJwt": {
            "description": "Json web token",
            "example": "AABmODM2OGM0ZC1mMmUwLTQ2MGYtYjQyOC03ZTQyZjQ1MWI3MGVJovwdqc7MU+49lOy",
            "type": "string"
          },
          "test": {
            "description": "Is test enabled or not",
            "example": true,
            "type": "boolean"
          },
          "unsubscribeAll": {
            "description": "Status indicating whether a data subject has unsubscribed to all Purposes in a Preference Center ",
            "example": true,
            "type": "boolean"
          }
        },
        "title": "ReceiptInformationDetailDto",
        "type": "object"
      },
      "ReceiptListDto": {
        "properties": {
          "receipts": {
            "description": "List containing the File Meta Data with name and last modified date",
            "example": [
              "Receipt Name",
              "Last Modified Date"
            ],
            "items": {
              "$ref": "#/components/schemas/FileMetaData"
            },
            "type": "array"
          }
        },
        "title": "ReceiptListDto",
        "type": "object"
      },
      "ScheduleMergeRequestDto": {
        "properties": {
          "customDataElementNames": {
            "description": "Data element names for which the duplicate data subjects are identified.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "jobFrequency": {
            "description": "Frequency at which the data subjects are scanned for duplicates.",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ],
            "example": "DAILY",
            "type": "string"
          },
          "mergeCondition": {
            "description": "The matching condition of data elements for which duplicate data subjects are identified. Providing **ANY** will identify duplicates where at least one data element value matches across data subjects, and providing **ALL** will identify duplicates where all data element values match across data subjects.",
            "enum": [
              "ANY",
              "ALL"
            ],
            "example": "ANY",
            "type": "string"
          },
          "mergeRequestName": {
            "description": "Name of the merge request.",
            "example": "Find Duplicate Data Subject By Email Id",
            "type": "string"
          }
        },
        "required": [
          "mergeRequestName",
          "jobFrequency",
          "mergeCondition",
          "customDataElementNames"
        ],
        "type": "object"
      },
      "ScheduleMergeResponseDto": {
        "properties": {
          "mergeRequestId": {
            "description": "ID to identify the merge request.",
            "format": "uuid",
            "type": "string"
          },
          "message": {
            "description": "Merge request success message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SimpleNameVersionDto": {
        "properties": {
          "id": {
            "description": "The unique identifier of the entity",
            "example": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "description": "The name of the entity",
            "example": "Entity Name",
            "type": "string"
          },
          "version": {
            "description": "The version of the entity",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "SimpleNameVersionDto",
        "type": "object"
      },
      "SimpleNameVersionDtoV1": {
        "properties": {
          "Id": {
            "description": "The unique identifier of the entity",
            "example": "fcfe3c5e-6b1d-4eac-a5a4-aa7c8719b279",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The name of the entity",
            "example": "Entity Name",
            "type": "string"
          },
          "Version": {
            "description": "The version of the entity",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "SimpleNameVersionDtoV1",
        "type": "object"
      },
      "SliceDataSubjectDtoV2": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectDtoV2"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        },
        "title": "SliceDataSubjectDtoV2",
        "type": "object"
      },
      "SliceDataSubjectProfileDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/DataSubjectProfileDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        },
        "title": "SliceDataSubjectProfileDto",
        "type": "object"
      },
      "SliceReceiptInformationDetailDto": {
        "properties": {
          "content": {
            "items": {
              "$ref": "#/components/schemas/ReceiptInformationDetailDto"
            },
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        },
        "title": "SliceReceiptInformationDetailDto",
        "type": "object"
      },
      "Sort": {
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        },
        "title": "Sort",
        "type": "object"
      },
      "TopicInformation": {
        "properties": {
          "Id": {
            "description": "Unique Identifier identifying a Topic",
            "example": "497c4383-2c61-4906-aed0-660e3fd03ef0",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "TopicInformation",
        "type": "object"
      },
      "TopicLanguageDto": {
        "properties": {
          "Default": {
            "description": "Whether this language is the default one for the Topic",
            "example": true,
            "type": "boolean"
          },
          "Language": {
            "description": "The Topic content language code",
            "example": "en-us",
            "type": "string"
          },
          "Name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "TopicLanguageDto",
        "type": "object"
      },
      "TopicLanguageDtoV2": {
        "properties": {
          "default": {
            "description": "Whether this language is the default one for the Topic",
            "example": true,
            "type": "boolean"
          },
          "language": {
            "description": "The Topic content language code",
            "example": "en-us",
            "type": "string"
          },
          "name": {
            "description": "The Topic name",
            "example": "Car Marketing",
            "type": "string"
          }
        },
        "title": "TopicLanguageDtoV2",
        "type": "object"
      },
      "TransactionInformation": {
        "properties": {
          "CollectionPointId": {
            "description": "Unique Identifier identifying a Collection Point",
            "example": "376c1187-c3fc-4dda-975f-43f9b34859d4",
            "format": "uuid",
            "type": "string"
          },
          "ExpiryDate": {
            "description": "Date at which consent expires",
            "example": "2021-05-05T00:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "IssueDate": {
            "description": "Date at which consent receipt was acknowledged to the user",
            "example": "2020-01-05T11:34:30.974Z",
            "format": "date-time",
            "type": "string"
          },
          "Preferences": {
            "description": "List of Preferences recorded as part of the consent Transaction",
            "items": {
              "$ref": "#/components/schemas/PreferenceDetail"
            },
            "type": "array"
          },
          "ReceiptId": {
            "description": "Unique Identifier identifying a Consent Receipt",
            "example": "8e258569-1b5c-45ae-8fae-1efdc0bcb627",
            "format": "uuid",
            "type": "string"
          },
          "Status": {
            "description": "Status of the Receipt",
            "enum": [
              "EXPIRED",
              "WITHDRAWN",
              "NO_CONSENT",
              "PENDING",
              "ACTIVE",
              "OPT_OUT",
              "ALWAYS_ACTIVE",
              "HARD_OPT_OUT",
              "EXTEND"
            ],
            "example": "ACTIVE",
            "type": "string"
          },
          "TransactionId": {
            "description": "Unique Identifier identifying a Transaction",
            "example": "9d645b11-31c8-48da-8bb4-5adc2c15f57f",
            "format": "uuid",
            "type": "string"
          },
          "WithdrawalDate": {
            "description": "Date at which consent was withdrawn",
            "example": "2020-01-08T12:12:25.652Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "TransactionInformation",
        "type": "object"
      },
      "TransactionWithdrawResult": {
        "properties": {
          "Status": {
            "description": "Message representing the consent withdrawal status",
            "example": "Consent withdrawn",
            "type": "string"
          }
        },
        "title": "TransactionWithdrawResult",
        "type": "object"
      },
      "TranslationDto": {
        "properties": {
          "content": {
            "description": "The Translation of the content",
            "example": "bloque de texto",
            "type": "string"
          },
          "description": {
            "description": "The Translation of the description",
            "example": "Recopilar correos electrónicos de clientes con fines de marketing",
            "type": "string"
          },
          "isDefault": {
            "description": "Boolean flag that denotes if the language is default",
            "example": false,
            "type": "boolean"
          },
          "language": {
            "description": "The Language this translation belongs to",
            "example": "es",
            "type": "string"
          },
          "name": {
            "description": "The Translation of the name",
            "example": "Comunicaciones de marketing",
            "type": "string"
          }
        },
        "title": "TranslationDto",
        "type": "object"
      },
      "WithdrawOnBehalfOfRequest": {
        "properties": {
          "Notes": {
            "description": "Any additional notes to be recorded as part of withdrawal",
            "example": "Withdrawing consent as per data subject request",
            "type": "string"
          },
          "Origin": {
            "description": "Source where consent is coming from (IMPORT, API, SDK, ONETRUST, PREFERENCE_CENTER)",
            "example": "API",
            "type": "string"
          },
          "PurposeId": {
            "description": "Unique Identifier of Purpose",
            "example": "f2229953-b4b5-4042-8cb9-b78038cc4c46",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "PurposeId"
        ],
        "title": "WithdrawOnBehalfOfRequest",
        "type": "object"
      },
      "new-model": {
        "properties": {},
        "type": "object"
      }
    }
  }
}
