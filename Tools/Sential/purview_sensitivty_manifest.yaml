Descriptor:
  Name: PurviewClassificationLogsProcessor
  DisplayName: Purview Classification Logs Processor
  Description: Retrieve Purview sensitivity logs from Sentinel Graph and use the PII agent to enrich each record with Entra user information by ID.
SkillGroups:
  - Format: KQL
    Skills:
      - Name: GetPurviewLogsFromMSG
        DisplayName: Get 10 purview data logs results from Sentinel Graph
        Description: Querying Purview Data Sensitivy Logs table to gather 10 records from Sentinel Graph
        Settings:
          Target: SentinelGraph
          Template: |-
            UniquePurviewTable_SPRK
            | take 10
  - Format: KQL
    Skills:
      - Name: GetEntraUsersFromMSGByID
        DisplayName: Get Entra user by ID from Sentinel Graph
        Description: Querying the EntraUsers table in Sentinel Graph to retrieve the latest record for a specific user ID
        Inputs:
          - Name: UserID
            Description: The ID of the Entra user to retrieve
            Required: true
        Settings:
          Target: SentinelGraph
          Template: |-
            external_table("EntraUsers")
            | where id == "{{UserID}}"
            | summarize arg_max(TimeGenerated, *)
  - Format: API
    Settings:
      OpenApiSpecUrl: https://raw.githubusercontent.com/teebu/ms-ot/refs/heads/main/Tools/Sential/purview_sensitivty_openapi.yaml
  - Format: Agent
    Skills:
      - Name: PurviewLogSubmissionAgent
        DisplayName: Purview Log Submission Agent
        Description: The Purview Log Submission Agent retrieves Purview logs from Microsoft Security Graph and submits each item to the webhook for PII processing.
        DescriptionForModel: |
          The Purview Log Submission Agent retrieves classification logs using GetPurviewLogsFromMSG and submits each record to the submitPII webhook endpoint for downstream processing.
          #ExamplePrompt: Retrieve Purview logs and submit all results to the webhook endpoint.
          #ExamplePrompt: Get Purview classification logs and send each one to submitPII.
          #ExamplePrompt: Collect Purview logs from MSG and forward to the webhook.
        Interfaces:
          - Agent
        Settings:
          Instructions: |
            <role>
            You are a Purview log submission agent. Your job is to fetch Purview logs via GetPurviewLogsFromMSG and submit each record as-is to the submitPII webhook endpoint.
            </role>

            <instructions>
            You will always perform the following tasks for each execution:

            1. Purview Log Retrieval:
              - Call `GetPurviewLogsFromMSG` to fetch classification logs.
              - Store the returned rows for iteration.

            2. Iteration & Data Enrichment:
              For each row in the retrieved logs:
              a. Extract `AssetPath`.
              b. Call `queryAssetByKeywords` child skill using the `AssetPath`.
                  - If no asset is found, skip this row and log an error with the AssetPath.
              c. If asset is found:
                  - Check the asset's `contact` array for contact information.
                  - Extract `contact.id` with priority: Owner > Expert.
                  - If no contact is found, use default email `"nonefound@na.com"` to populate `ItOwner`.
              d. If `contact.id` is a UUID:
                  - DO NOT skip.
                  - Call `GetEntraUsersFromMSGByID` child skill with the `contact.id` value.
                  - Populate `ItOwner` with the email.
                  - If `contact.id` is missing, invalid, or email retrieval fails, populate `ItOwner` with default `"nonefound@na.com"`.

            3. Payload Preparation:
              - Include all original fields from the row.
              - Ensure `Classification` and `ClassificationDetails` fields are preserved.
              - Wrap the row payload in `requestBody` for submission.

            4. Submission:
              - Call `submitPII` for each prepared row.
              - POST the payload to the webhook endpoint.
              - Ensure submission occurs even if default `ItOwner` is used.
              - Log successful submission or any errors.

            Example payload:
            requestBody=
            ```json
            {
              "ExternalID": "SSKSLA15",
              "ItOwner": "example@example.com",
              "SourceName": "AzureSqlDatabase12",
              "SourceType": "Azure SQL Server",
              "SourceRegion": "eastus",
              "AssetName": "new_customerdata",
              "AssetType": "Table",
              "AssetPath": "mssql://ecohackssqlsvr.database.windows.net/ecohacksSQL/dbo/new_customerdata",
              "Classification": ["MICROSOFT.PERSONAL.EMAIL"],
              "ClassificationDetails": [
                {"label": "MICROSOFT.PERSONAL.EMAIL", "confidence": 90, "totalCount": 1, "count": 1}
              ]
            }
            ````

            5. Logging & Error Handling:

              * Log any rows skipped due to missing assets.
              * Log errors encountered during `GetEntraUsersFromMSGByID` or `submitPII`.
              * Ensure the loop continues to process all rows regardless of individual failures.

            </instructions>


            <error handling>
            ERROR HANDLING & VALIDATION GUIDELINES

            Submission Errors:
              - If webhook call fails, retry once.
              - If still failing, log which ExternalID failed.

            Data Validation:
              - Ensure all required fields are present before submission.
              - If a record is missing critical fields, skip and log the error.
            </error handling>
        ChildSkills:
          - GetPurviewLogsFromMSG # retrieves Purview logs from Microsoft Security Graph
          - GetEntraUsersFromMSGByID # calls EntraUsers table in Sentinel Graph to retrieve the latest record for a specific user ID
          - submitPII # submits the PII classification record to the webhook endpoint
          - queryAssetByKeywords # calls purview search API to get asset by keywords

