openapi: 3.0.0
info:
  title: Joke Submission API
  version: 1.0.0
servers:
  - url: https://faithful-cpu-98.webhook.cool
paths:
  /submit_joke:
    post:
      summary: Submit a new joke
      description: Submits a joke with a question and answer to the server.
      operationId: submitJoke
      requestBody:
        description: A JSON object containing the joke question and answer.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: Why don't scientists trust atoms?
                answer:
                  type: string
                  example: Because they make up everything!
              required:
                - question
                - answer
      responses:
        "200":
          description: Joke submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Joke received successfully.

  /submit_jokes:
    post:
      summary: Submit new jokes
      description: Submits one or more jokes (each with a question and answer) to the server.
      operationId: submitJokes
      requestBody:
        description: A JSON array of joke objects containing questions and answers.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  question:
                    type: string
                    example: Why don't scientists trust atoms?
                  answer:
                    type: string
                    example: Because they make up everything!
                required:
                  - question
                  - answer
              example:
                - question: "Why did the chicken cross the road?"
                  answer: "To get to the other side!"
                - question: "What do you call fake spaghetti?"
                  answer: "An impasta!"
      responses:
        "200":
          description: Jokes submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Jokes received successfully.

  /submit_jokes_two:
    post:
      summary: Submit a joke with multiple answers
      description: Submits a joke object containing one question and multiple possible answers.
      operationId: submit_jokes_two
      requestBody:
        description: A JSON object containing a question and multiple answers.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                answers:
                  type: array
                  items:
                    type: string
              required:
                - question
                - answers
              example:
                question: "Why did the dog sit in the shade?"
                answers:
                  - "Because he didn't want to be a hot dog!"
                  - "Because it was too sunny!"
  /submit_jokes_three:
    post:
      summary: Submit multiple jokes
      description: Submits a list of jokes, each represented as a single key-value pair where the key is the question and the value is the punchline.
      operationId: submit_jokes_three
      requestBody:
        description: JSON object containing an array of jokes.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jokes:
                  type: array
                  description: A list of jokes.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                    description: An object where the key is the joke question and the value is the punchline.
              required:
                - jokes
            example:
              jokes:
                - "Why did the dog sit in the shade?": "Because he didn't want to be a hot dog!"
                - "Why was the math book sad?": "Because it had too many problems."

      responses:
        "200":
          description: Joke submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Joke received successfully.
